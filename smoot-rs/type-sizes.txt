print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::process::unix::common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::iter::Chain<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>, std::iter::Once<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.a`: 48 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 24 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Once<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::IntoIter<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Item<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 24 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Once<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::os_str::bytes::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::process::unix::common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ffi::os_str::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.os_str`: 16 bytes
print-type-size type: `std::io::default_write_fmt::Adapter<'_, std::sys::stdio::unix::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, std::option::Option<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Once<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Once<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::process::unix::common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `StaticFd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/build.rs:228:37: 228:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>, std::iter::Once<std::ffi::OsString>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::rt::lang_start<()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::num::niche_types::I32NotAllOnes`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::niche_types::NonZeroI32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::fs::DirBuilder`: 4 bytes, alignment: 2 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size     field `.recursive`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `std::num::NonZero<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::num::NonZero<i32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::BorrowedFd<'_>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::result::Result<(), std::sys::process::unix::unix::ExitStatusError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fd::unix::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatusError`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fs::unix::DirBuilder`: 2 bytes, alignment: 2 bytes
print-type-size     field `.mode`: 2 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::process::unix::common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::os::fd::OwnedFd>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::os_str::bytes::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::stdio::unix::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/build.rs:161:61: 161:70}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/build.rs:163:55: 163:64}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `tables::Align64<[u8; 7904]>`: 7936 bytes, alignment: 64 bytes
print-type-size     field `.0`: 7904 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `tables::Align8<[u8; 1793]>`: 1800 bytes, alignment: 8 bytes
print-type-size     field `.0`: 1793 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `tables::Align8<[u8; 402]>`: 408 bytes, alignment: 8 bytes
print-type-size     field `.0`: 402 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `tables::Align64<[bool; 128]>`: 128 bytes, alignment: 64 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<64>`: 256 bytes, alignment: 256 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<32>`: 128 bytes, alignment: 128 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::simd::Simd<i8, 64>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<16>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::simd::Swizzle::swizzle::{constant#0}::SimdShuffleIdx<16>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, TokenTree), parse::Reject>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, (&str, bool))>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, Ident)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::rc::RcInner<std::vec::Vec<TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, (&str, bool)), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, Ident), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, fallback::Literal), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1193:34: 1193:40}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:952:39: 952:43}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size type: `std::vec::Drain<'_, proc_macro::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size type: `token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#3}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `TokenTree`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `rcvec::RcVecIntoIter<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, TokenTree>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, proc_macro::TokenTree>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(&[u8], &[u8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&str, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(Delimiter, fallback::TokenStreamBuilder)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rcvec::RcVecIntoIter<TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, &str), parse::Reject>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, Punct), parse::Reject>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<TokenStream, LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<imp::TokenStream, imp::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::simd::Simd<i8, 32>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<8>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::vec::IntoIter<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#2}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `fallback::TokenStreamBuilder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `rcvec::RcVecBuilder<TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, proc_macro::TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Peekable<std::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::Literal>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, char), parse::Reject>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(usize, u8), parse::Reject>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<Literal, LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<alloc::raw_vec::RawVecInner, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<fallback::Literal, fallback::LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<imp::Literal, imp::LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::result::Result<proc_macro::Literal, proc_macro::LexError>, std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(Delimiter, fallback::TokenStreamBuilder)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<rcvec::RcVecIntoIter<TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `{closure@std::iter::DoubleEndedIterator::rfind::check<usize, {closure@std::str::pattern::simd_contains::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.value`: 20 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.value`: 20 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 20 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 20 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 20 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 20 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, TokenTree, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, proc_macro::TokenTree, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(Delimiter, fallback::TokenStreamBuilder)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<rcvec::RcVecIntoIter<TokenTree>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `parse::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rest`: 16 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::collections::Bound<&usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::result::Result<proc_macro::Literal, proc_macro::LexError>>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1225:35: 1225:37}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, imp::LexError>, proc_macro::Literal>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, parse::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &TokenTree)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &proc_macro::TokenTree)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::WeakInner<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1225:35: 1225:37}, std::result::Result<proc_macro::Literal, proc_macro::LexError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.f`: 16 bytes
print-type-size         field `.r`: 16 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::r#try::Data<{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1225:35: 1225:37}, std::result::Result<proc_macro::TokenStream, proc_macro::LexError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 8 bytes
print-type-size         field `.f`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::rc::Weak<std::vec::Vec<TokenTree>, &std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 8 bytes
print-type-size type: `std::rc::WeakInner<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, ()), parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(usize, char), parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<parse::Cursor<'_>, parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::Literal, imp::LexError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<proc_macro::Literal, proc_macro::LexError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::result::Result<proc_macro::TokenStream, proc_macro::LexError>, std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sync::OnceState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::sys::sync::once::queue::OnceState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.set_state_on_drop_to`: 8 bytes
print-type-size     field `.poisoned`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1107:39: 1107:50}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1225:35: 1225:37}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `core::escape::EscapeIterInner<10>`: 12 bytes, alignment: 1 bytes
print-type-size     field `.data`: 10 bytes
print-type-size     field `.alive`: 2 bytes
print-type-size type: `extra::DelimSpan`: 12 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 12 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `extra::DelimSpanEnum`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.join`: 4 bytes
print-type-size         field `.open`: 4 bytes
print-type-size         field `.close`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::char::EscapeDebug`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `std::char::EscapeDebugInner`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Bytes`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Char`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `<std::vec::Drain<'_, T, A> as std::ops::Drop>::drop::DropGuard<'_, '_, proc_macro::TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `rcvec::RcVec<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `rcvec::RcVecMut<'_, TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::boxed::Box<std::rc::RcInner<std::vec::Vec<TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<*mut ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*mut ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::result::Result<proc_macro::TokenStream, proc_macro::LexError>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::Vec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, imp::LexError>, proc_macro::TokenStream>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(Delimiter, fallback::TokenStreamBuilder)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<char>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<imp::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rcvec::RcVecMut<'_, TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::FnMut(&'a std::sync::OnceState)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<proc_macro::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::rc::RcInner<std::vec::Vec<TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<fallback::TokenStream, fallback::LexError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, imp::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, proc_macro::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<i8, 8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::sync::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::sync::once::queue::Once`: 8 bytes, alignment: 8 bytes
print-type-size     field `.state_and_queue`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:288:10: 288:18}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::vec::Drain<'_, proc_macro::TokenTree>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDebug>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::any::check<&[u8], {closure@std::str::pattern::simd_contains::{closure#1}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<char, {closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDebug>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::vec::Drain<'_, proc_macro::TokenTree>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Peekable<std::str::Chars<'_>>::peek::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::sync::Once::call_once<fn() {detection::initialize}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<char>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, parse::Reject>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::char::methods::EscapeDebugExtArgs`: 3 bytes, alignment: 1 bytes
print-type-size     field `.escape_grapheme_extended`: 1 bytes
print-type-size     field `.escape_single_quote`: 1 bytes
print-type-size     field `.escape_double_quote`: 1 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `CompilerPanic`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size type: `std::ascii::Char`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `StartOfHeading`: 0 bytes
print-type-size     variant `StartOfText`: 0 bytes
print-type-size     variant `EndOfText`: 0 bytes
print-type-size     variant `EndOfTransmission`: 0 bytes
print-type-size     variant `Enquiry`: 0 bytes
print-type-size     variant `Acknowledge`: 0 bytes
print-type-size     variant `Bell`: 0 bytes
print-type-size     variant `Backspace`: 0 bytes
print-type-size     variant `CharacterTabulation`: 0 bytes
print-type-size     variant `LineFeed`: 0 bytes
print-type-size     variant `LineTabulation`: 0 bytes
print-type-size     variant `FormFeed`: 0 bytes
print-type-size     variant `CarriageReturn`: 0 bytes
print-type-size     variant `ShiftOut`: 0 bytes
print-type-size     variant `ShiftIn`: 0 bytes
print-type-size     variant `DataLinkEscape`: 0 bytes
print-type-size     variant `DeviceControlOne`: 0 bytes
print-type-size     variant `DeviceControlTwo`: 0 bytes
print-type-size     variant `DeviceControlThree`: 0 bytes
print-type-size     variant `DeviceControlFour`: 0 bytes
print-type-size     variant `NegativeAcknowledge`: 0 bytes
print-type-size     variant `SynchronousIdle`: 0 bytes
print-type-size     variant `EndOfTransmissionBlock`: 0 bytes
print-type-size     variant `Cancel`: 0 bytes
print-type-size     variant `EndOfMedium`: 0 bytes
print-type-size     variant `Substitute`: 0 bytes
print-type-size     variant `Escape`: 0 bytes
print-type-size     variant `InformationSeparatorFour`: 0 bytes
print-type-size     variant `InformationSeparatorThree`: 0 bytes
print-type-size     variant `InformationSeparatorTwo`: 0 bytes
print-type-size     variant `InformationSeparatorOne`: 0 bytes
print-type-size     variant `Space`: 0 bytes
print-type-size     variant `ExclamationMark`: 0 bytes
print-type-size     variant `QuotationMark`: 0 bytes
print-type-size     variant `NumberSign`: 0 bytes
print-type-size     variant `DollarSign`: 0 bytes
print-type-size     variant `PercentSign`: 0 bytes
print-type-size     variant `Ampersand`: 0 bytes
print-type-size     variant `Apostrophe`: 0 bytes
print-type-size     variant `LeftParenthesis`: 0 bytes
print-type-size     variant `RightParenthesis`: 0 bytes
print-type-size     variant `Asterisk`: 0 bytes
print-type-size     variant `PlusSign`: 0 bytes
print-type-size     variant `Comma`: 0 bytes
print-type-size     variant `HyphenMinus`: 0 bytes
print-type-size     variant `FullStop`: 0 bytes
print-type-size     variant `Solidus`: 0 bytes
print-type-size     variant `Digit0`: 0 bytes
print-type-size     variant `Digit1`: 0 bytes
print-type-size     variant `Digit2`: 0 bytes
print-type-size     variant `Digit3`: 0 bytes
print-type-size     variant `Digit4`: 0 bytes
print-type-size     variant `Digit5`: 0 bytes
print-type-size     variant `Digit6`: 0 bytes
print-type-size     variant `Digit7`: 0 bytes
print-type-size     variant `Digit8`: 0 bytes
print-type-size     variant `Digit9`: 0 bytes
print-type-size     variant `Colon`: 0 bytes
print-type-size     variant `Semicolon`: 0 bytes
print-type-size     variant `LessThanSign`: 0 bytes
print-type-size     variant `EqualsSign`: 0 bytes
print-type-size     variant `GreaterThanSign`: 0 bytes
print-type-size     variant `QuestionMark`: 0 bytes
print-type-size     variant `CommercialAt`: 0 bytes
print-type-size     variant `CapitalA`: 0 bytes
print-type-size     variant `CapitalB`: 0 bytes
print-type-size     variant `CapitalC`: 0 bytes
print-type-size     variant `CapitalD`: 0 bytes
print-type-size     variant `CapitalE`: 0 bytes
print-type-size     variant `CapitalF`: 0 bytes
print-type-size     variant `CapitalG`: 0 bytes
print-type-size     variant `CapitalH`: 0 bytes
print-type-size     variant `CapitalI`: 0 bytes
print-type-size     variant `CapitalJ`: 0 bytes
print-type-size     variant `CapitalK`: 0 bytes
print-type-size     variant `CapitalL`: 0 bytes
print-type-size     variant `CapitalM`: 0 bytes
print-type-size     variant `CapitalN`: 0 bytes
print-type-size     variant `CapitalO`: 0 bytes
print-type-size     variant `CapitalP`: 0 bytes
print-type-size     variant `CapitalQ`: 0 bytes
print-type-size     variant `CapitalR`: 0 bytes
print-type-size     variant `CapitalS`: 0 bytes
print-type-size     variant `CapitalT`: 0 bytes
print-type-size     variant `CapitalU`: 0 bytes
print-type-size     variant `CapitalV`: 0 bytes
print-type-size     variant `CapitalW`: 0 bytes
print-type-size     variant `CapitalX`: 0 bytes
print-type-size     variant `CapitalY`: 0 bytes
print-type-size     variant `CapitalZ`: 0 bytes
print-type-size     variant `LeftSquareBracket`: 0 bytes
print-type-size     variant `ReverseSolidus`: 0 bytes
print-type-size     variant `RightSquareBracket`: 0 bytes
print-type-size     variant `CircumflexAccent`: 0 bytes
print-type-size     variant `LowLine`: 0 bytes
print-type-size     variant `GraveAccent`: 0 bytes
print-type-size     variant `SmallA`: 0 bytes
print-type-size     variant `SmallB`: 0 bytes
print-type-size     variant `SmallC`: 0 bytes
print-type-size     variant `SmallD`: 0 bytes
print-type-size     variant `SmallE`: 0 bytes
print-type-size     variant `SmallF`: 0 bytes
print-type-size     variant `SmallG`: 0 bytes
print-type-size     variant `SmallH`: 0 bytes
print-type-size     variant `SmallI`: 0 bytes
print-type-size     variant `SmallJ`: 0 bytes
print-type-size     variant `SmallK`: 0 bytes
print-type-size     variant `SmallL`: 0 bytes
print-type-size     variant `SmallM`: 0 bytes
print-type-size     variant `SmallN`: 0 bytes
print-type-size     variant `SmallO`: 0 bytes
print-type-size     variant `SmallP`: 0 bytes
print-type-size     variant `SmallQ`: 0 bytes
print-type-size     variant `SmallR`: 0 bytes
print-type-size     variant `SmallS`: 0 bytes
print-type-size     variant `SmallT`: 0 bytes
print-type-size     variant `SmallU`: 0 bytes
print-type-size     variant `SmallV`: 0 bytes
print-type-size     variant `SmallW`: 0 bytes
print-type-size     variant `SmallX`: 0 bytes
print-type-size     variant `SmallY`: 0 bytes
print-type-size     variant `SmallZ`: 0 bytes
print-type-size     variant `LeftCurlyBracket`: 0 bytes
print-type-size     variant `VerticalLine`: 0 bytes
print-type-size     variant `RightCurlyBracket`: 0 bytes
print-type-size     variant `Tilde`: 0 bytes
print-type-size     variant `Delete`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<i8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<i8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<Delimiter>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<fn() {detection::initialize}>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), parse::Reject>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, imp::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::simd::Simd<i8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `core::fmt::rt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `parse::Reject`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(Delimiter, fallback::TokenStreamBuilder)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<u8>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::FnMut(&'a std::sync::OnceState)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<rcvec::RcVecIntoIter<TokenTree>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, fallback::LexError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, parse::Reject>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1193:34: 1193:40}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:952:39: 952:43}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:1193:34: 1193:40}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:827:27: 827:34}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:952:39: 952:43}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:584:37: 584:45}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:585:47: 585:55}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:606:37: 606:46}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:607:46: 607:55}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:695:60: 695:68}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/parse.rs:744:36: 744:41}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::all::check<u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:827:27: 827:34}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::copied::copy_try_fold<u8, (), std::ops::ControlFlow<()>, {closure@std::iter::Iterator::all::check<u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/fallback.rs:827:27: 827:34}>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<64>`: 256 bytes, alignment: 256 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::process::unix::common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `AutoCfg`: 184 bytes, alignment: 8 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 72 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.uuid`: 8 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<AutoCfg, error::Error>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, error::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::sys::fs::unix::FileAttr, std::io::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `libc::unix::bsd::apple::stat`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 4 bytes
print-type-size     field `.st_mode`: 2 bytes
print-type-size     field `.st_nlink`: 2 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.st_rdev`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.st_atime`: 8 bytes, alignment: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.st_birthtime`: 8 bytes
print-type-size     field `.st_birthtime_nsec`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_blksize`: 4 bytes
print-type-size     field `.st_flags`: 4 bytes
print-type-size     field `.st_gen`: 4 bytes
print-type-size     field `.st_lspare`: 4 bytes
print-type-size     field `.st_qspare`: 16 bytes
print-type-size type: `std::fs::Metadata`: 144 bytes, alignment: 8 bytes
print-type-size     field `.0`: 144 bytes
print-type-size type: `std::sys::fs::unix::FileAttr`: 144 bytes, alignment: 8 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<32>`: 128 bytes, alignment: 128 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size type: `core::str::iter::SplitNInternal<'_, char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::str::SplitN<'_, char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rustc::Rustc`: 72 bytes, alignment: 8 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustc_wrapper`: 24 bytes
print-type-size     field `.rustc_workspace_wrapper`: 24 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::hash::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:565:25: 565:28}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:565:25: 565:28}>, for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::SplitInclusive<'_, char>, core::str::LinesMap>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::Lines<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::SplitInclusive<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `hashbrown::map::IntoIter<u64, ()>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `hashbrown::raw::RawIntoIter<(u64, ())>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.allocation`: 24 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::set::IntoIter<u64>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 64 bytes
print-type-size type: `std::collections::hash_set::IntoIter<u64>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.base`: 64 bytes
print-type-size type: `std::simd::Simd<i8, 64>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<16>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::simd::Swizzle::swizzle::{constant#0}::SimdShuffleIdx<16>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 24 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::process::Output, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::map::HashMap<u64, (), std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::set::HashSet<u64, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size type: `std::collections::HashSet<u64>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Chain<std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>>, std::option::IntoIter<&std::path::PathBuf>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.a`: 32 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `hashbrown::raw::RawIter<(u64, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#3}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `hashbrown::raw::FullBucketsIndices`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.group_first_index`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(u64, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(u64, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTableInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step_minus_one`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::process::Child, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<version::Version, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::simd::Simd<i8, 32>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<8>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::sync::ReentrantLock<std::cell::RefCell<std::io::stdio::StderrRaw>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.mutex`: 8 bytes
print-type-size     field `.owner`: 8 bytes
print-type-size     field `.lock_count`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.data`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:518:19: 518:27}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:519:35: 519:40}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#2}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `error::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 24 bytes
print-type-size type: `error::ErrorKind`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Utf8`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Io`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Process`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Num`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout, std::alloc::Global)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::process::Child`: 24 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 12 bytes
print-type-size     field `.stdin`: 4 bytes
print-type-size     field `.stdout`: 4 bytes
print-type-size     field `.stderr`: 4 bytes
print-type-size type: `std::result::Result<&str, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::raw_vec::RawVecInner, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::hash::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::process::Child, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::os_str::bytes::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::process::unix::common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Alive`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::DoubleEndedIterator::rfind::check<usize, {closure@std::str::pattern::simd_contains::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::error::Tagged<dyn core::error::Erased<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tag_id`: 16 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::control::group::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::control::group::sse2::Group::static_empty::AlignedTags`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.tags`: 16 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::any::TypeId`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::error::Request<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::hash::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::io::default_write_fmt::Adapter<'_, std::process::ChildStdin>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::io::default_write_fmt::Adapter<'_, std::sys::stdio::unix::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Map<std::ops::Range<u64>, {closure@<hashbrown::set::HashSet<u64, std::hash::RandomState> as std::iter::Extend<u64>>::extend<std::ops::Range<u64>>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::Chars<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:504:14: 504:17}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&str, std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<&str, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u64, ())>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<&std::path::PathBuf>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Iter<'_, std::path::PathBuf>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[&std::path::PathBuf]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(u64, ())>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &std::path::PathBuf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(u64, ())>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<u64, u64, ()>::{closure#0}}, {closure@hashbrown::map::make_hasher<u64, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &str, &str, (), std::ops::ControlFlow<&str>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}, {closure@std::iter::Iterator::find::check<&str, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:565:25: 565:28}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::sys::process::unix::unix::Process`: 12 bytes, alignment: 4 bytes
print-type-size     field `.status`: 8 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, std::option::Option<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(u64, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::InsertSlot`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::RefCell<std::io::stdio::StderrRaw>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<*mut std::sys::pal::unix::sync::mutex::Mutex>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::Stderr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<&std::path::PathBuf>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::Iter<'_, std::path::PathBuf>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, hashbrown::raw::Bucket<(u64, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Iter<'_, std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Option<&&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<&std::path::PathBuf>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Iter<'_, std::path::PathBuf>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(u64, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::process::unix::common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::process::unix::unix::ExitStatus>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<unsafe fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::error::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&std::path::PathBuf>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(u64, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::simd::Simd<i8, 8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicPtr<std::sys::pal::unix::sync::mutex::Mutex>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::reentrant_lock::Tid`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::sys::process::unix::common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `StaticFd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::sys::sync::mutex::pthread::Mutex`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pal`: 8 bytes
print-type-size type: `std::sys::sync::once_box::OnceBox<std::sys::pal::unix::sync::mutex::Mutex>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:527:26: 527:44}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<u64, (), std::hash::RandomState> as std::iter::Extend<(u64, ())>>::extend<std::iter::Map<std::ops::Range<u64>, {closure@<hashbrown::set::HashSet<u64, std::hash::RandomState> as std::iter::Extend<u64>>::extend<std::ops::Range<u64>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>>, std::option::IntoIter<&std::path::PathBuf>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::option::Iter<'_, std::path::PathBuf>, std::option::Iter<'_, std::path::PathBuf>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::string::String as std::iter::Extend<char>>::extend<std::iter::Map<std::str::Chars<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:504:14: 504:17}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<u64, u64, ()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<u64, (), std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(u64, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<u64, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::any::check<&[u8], {closure@std::str::pattern::simd_contains::{closure#1}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<&str, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:565:25: 565:28}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(u64, ()), {closure@<hashbrown::map::HashMap<u64, (), std::hash::RandomState> as std::iter::Extend<(u64, ())>>::extend<std::iter::Map<std::ops::Range<u64>, {closure@<hashbrown::set::HashSet<u64, std::hash::RandomState> as std::iter::Extend<u64>>::extend<std::ops::Range<u64>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<char, {closure@<std::string::String as std::iter::Extend<char>>::extend<std::iter::Map<std::str::Chars<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:504:14: 504:17}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<char, char, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:504:14: 504:17}, {closure@std::iter::Iterator::for_each::call<char, {closure@<std::string::String as std::iter::Extend<char>>::extend<std::iter::Map<std::str::Chars<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:504:14: 504:17}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<u64, (u64, ()), (), {closure@<hashbrown::set::HashSet<u64, std::hash::RandomState> as std::iter::Extend<u64>>::extend<std::ops::Range<u64>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(u64, ()), {closure@<hashbrown::map::HashMap<u64, (), std::hash::RandomState> as std::iter::Extend<(u64, ())>>::extend<std::iter::Map<std::ops::Range<u64>, {closure@<hashbrown::set::HashSet<u64, std::hash::RandomState> as std::iter::Extend<u64>>::extend<std::ops::Range<u64>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::num::niche_types::I32NotAllOnes`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::niche_types::NonZeroI32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<i32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::process::ChildStderr>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::process::ChildStdin>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::process::ChildStdout>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::BorrowedFd<'_>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ChildStderr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdin`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdout`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::result::Result<(), std::sys::process::unix::unix::ExitStatusError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fd::unix::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::pal::unix::pipe::AnonPipe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatusError`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroU16Inner`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::fs::Permissions`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::num::NonZero<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u16>>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fs::unix::FilePermissions`: 2 bytes, alignment: 2 bytes
print-type-size     field `.mode`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `hashbrown::control::tag::Tag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<i8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<i8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<i8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sys::process::unix::common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::rt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `core::str::LinesMap`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::stdio::StderrRaw>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::io::stdio::StderrRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&std::path::PathBuf>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::os::fd::OwnedFd>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(u64, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<core::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::error::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<{closure@core::str::<impl str>::trim::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::os_str::bytes::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::stdio::unix::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:504:14: 504:17}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:522:37: 522:39}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs:565:25: 565:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/rustc.rs:20:33: 20:35}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/version.rs:36:49: 36:55}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/version.rs:51:25: 51:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/version.rs:54:25: 54:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/version.rs:57:25: 57:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<hashbrown::set::HashSet<u64, std::hash::RandomState> as std::iter::Extend<u64>>::extend<std::ops::Range<u64>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@core::str::<impl str>::trim::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(u64, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<u64, (), std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::KEYS::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<&str, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/version.rs:36:49: 36:55}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::array::IntoIter<proc_macro2::TokenTree, 2>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:275:37: 275:40}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/spanned.rs:29:43: 29:47}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `proc_macro2::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::TokenTree`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::rc::UniqueRcUninit<std::vec::Vec<proc_macro2::TokenTree>, std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 32 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 32 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::UniqueRcUninit<std::vec::Vec<proc_macro2::TokenTree>, std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.layout_for_value`: 16 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*mut std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `{closure@<std::array::IntoIter<proc_macro2::TokenTree, 2> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<[proc_macro2::TokenTree; 2]>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:275:37: 275:40}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:275:37: 275:40}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<proc_macro2::TokenTree, 2> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<[proc_macro2::TokenTree; 2]>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::extra::DelimSpan`: 12 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 12 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::extra::DelimSpanEnum`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.join`: 4 bytes
print-type-size         field `.open`: 4 bytes
print-type-size         field `.close`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<'_, proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::iter::ByRefSized<'_, std::ops::index_range::IndexRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:275:37: 275:40}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/spanned.rs:37:19: 37:25}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<[proc_macro2::TokenTree; 2]>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:275:37: 275:40}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Once<proc_macro2::TokenTree>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<[proc_macro2::TokenTree; 2]>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:275:37: 275:40}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Once<proc_macro2::TokenTree>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/runtime.rs:285:22: 285:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, {closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::rc::UniqueRcUninit<std::vec::Vec<proc_macro2::TokenTree>, std::alloc::Global>::new::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::rc::UniqueRcUninit<std::vec::Vec<proc_macro2::TokenTree>, std::alloc::Global>::new::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `__private::get_span::GetSpan<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `__private::get_span::GetSpanBase<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `__private::get_span::GetSpanInner<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `CompilerPanic`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::alloc::Global>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/spanned.rs:29:43: 29:47}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/spanned.rs:36:21: 36:34}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::Span, std::option::Option<proc_macro2::Span>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/spanned.rs:29:43: 29:47}, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/spanned.rs:36:21: 36:34}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::GenericParam, token::Comma)>`: 464 bytes, alignment: 8 bytes
print-type-size     field `.value`: 464 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>`: 464 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 464 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 464 bytes
print-type-size type: `generics::ConstParam`: 456 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.default`: 168 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `generics::GenericParam`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Const`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Type`: 328 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::GenericParam>`: 456 bytes, alignment: 8 bytes
print-type-size     field `.value`: 456 bytes
print-type-size type: `std::mem::MaybeUninit<generics::GenericParam>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 456 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 456 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::ConstParam>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::ConstParam, error::Error>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::GenericParam, error::Error>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `generics::TypeParam`: 320 bytes, alignment: 8 bytes
print-type-size     field `.default`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Field, token::Comma)>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.value`: 320 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::WherePredicate, token::Comma)>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.value`: 320 bytes
print-type-size type: `std::mem::ManuallyDrop<(path::GenericArgument, token::Comma)>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.value`: 320 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Field, token::Comma)>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 320 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 320 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 320 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 320 bytes
print-type-size type: `std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 320 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 320 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TypeParam>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::TypeParam, error::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `data::Field`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.mutability`: 0 bytes
print-type-size type: `generics::PredicateType`: 312 bytes, alignment: 8 bytes
print-type-size     field `.bounded_ty`: 224 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::WherePredicate`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Lifetime`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size type: `path::AssocType`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::GenericArgument`: 312 bytes, alignment: 8 bytes
print-type-size     variant `AssocType`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `AssocConst`: 264 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 256 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 232 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Const`: 176 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Constraint`: 128 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<data::Field>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.value`: 312 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.value`: 312 bytes
print-type-size type: `std::mem::ManuallyDrop<path::GenericArgument>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.value`: 312 bytes
print-type-size type: `std::mem::MaybeUninit<data::Field>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 312 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 312 bytes
print-type-size type: `std::mem::MaybeUninit<generics::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 312 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 312 bytes
print-type-size type: `std::mem::MaybeUninit<path::GenericArgument>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 312 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 312 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Field>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::GenericArgument>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::IntoIter<data::Field>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 312 bytes
print-type-size type: `std::option::Item<data::Field>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 312 bytes
print-type-size type: `std::option::Option<data::Field>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<data::Field, error::Error>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::WherePredicate, error::Error>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<path::GenericArgument, error::Error>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Variant, token::Comma)>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::ManuallyDrop<(ty::BareFnArg, token::Comma)>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Variant, token::Comma)>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `data::Variant`: 280 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.discriminant`: 176 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<data::Variant>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::ManuallyDrop<ty::BareFnArg>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<data::Variant>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<ty::BareFnArg>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Variant>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::BareFnArg>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<data::Variant, error::Error>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::BareFnArg, error::Error>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::BareFnArg`: 280 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 32 bytes
print-type-size type: `std::array::IntoIter<proc_macro2::TokenTree, 8>`: 272 bytes, alignment: 8 bytes
print-type-size     field `.data`: 256 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 8>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 272 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 272 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `path::AssocConst`: 256 bytes, alignment: 8 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.value`: 168 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `attr::Attribute`: 248 bytes, alignment: 8 bytes
print-type-size     field `.meta`: 224 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size type: `std::mem::ManuallyDrop<attr::Attribute>`: 248 bytes, alignment: 8 bytes
print-type-size     field `.value`: 248 bytes
print-type-size type: `std::mem::MaybeUninit<attr::Attribute>`: 248 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 248 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 248 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::Attribute>`: 248 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 248 bytes
print-type-size         field `.0`: 248 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<attr::Attribute, error::Error>`: 248 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 248 bytes
print-type-size         field `.0`: 248 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `derive::DeriveInput`: 240 bytes, alignment: 8 bytes
print-type-size     field `.data`: 72 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::result::Result<derive::DeriveInput, error::Error>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(expr::FieldValue, token::Comma)>`: 232 bytes, alignment: 8 bytes
print-type-size     field `.value`: 232 bytes
print-type-size type: `std::mem::ManuallyDrop<(ty::Type, token::Comma)>`: 232 bytes, alignment: 8 bytes
print-type-size     field `.value`: 232 bytes
print-type-size type: `std::mem::MaybeUninit<(expr::FieldValue, token::Comma)>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 232 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 232 bytes
print-type-size type: `std::mem::MaybeUninit<(ty::Type, token::Comma)>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 232 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 232 bytes
print-type-size type: `attr::Meta`: 224 bytes, alignment: 8 bytes
print-type-size     variant `NameValue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `List`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `attr::MetaNameValue`: 224 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.value`: 168 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::FieldValue`: 224 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 168 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.member`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::FieldValue>`: 224 bytes, alignment: 8 bytes
print-type-size     field `.value`: 224 bytes
print-type-size type: `std::mem::ManuallyDrop<ty::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     field `.value`: 224 bytes
print-type-size type: `std::mem::MaybeUninit<expr::FieldValue>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 224 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 224 bytes
print-type-size type: `std::mem::MaybeUninit<ty::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 224 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 224 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::Meta>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::FieldValue>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeBareFn>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ty::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attr::Meta, error::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<attr::MetaNameValue, error::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::FieldValue, error::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::Type, error::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeBareFn, error::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::Type`: 224 bytes, alignment: 8 bytes
print-type-size     variant `BareFn`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Array`: 200 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `ty::TypeBareFn`: 224 bytes, alignment: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.variadic`: 80 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `std::result::Result<ty::TypeArray, error::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::TypeArray`: 192 bytes, alignment: 8 bytes
print-type-size     field `.len`: 168 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(expr::Expr, token::Comma)>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.value`: 176 bytes
print-type-size type: `std::mem::MaybeUninit<(expr::Expr, token::Comma)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 176 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 176 bytes
print-type-size type: `std::option::Option<(token::Eq, expr::Expr)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `expr::Expr`: 168 bytes, alignment: 8 bytes
print-type-size     variant `MethodCall`: 168 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Call`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Binary`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Index`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Cast`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Unary`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Async`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Await`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Const`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `ForLoop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Infer`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `RawAddr`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Repeat`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Try`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `TryBlock`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Unsafe`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `While`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Yield`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `expr::ExprStruct`: 168 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.value`: 168 bytes
print-type-size type: `std::mem::MaybeUninit<expr::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 168 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 168 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<expr::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<expr::Expr, error::Error>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprStruct, error::Error>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `expr::ExprMethodCall`: 160 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.turbofish`: 56 bytes
print-type-size     field `.method`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `expr::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::TypeParamBound, token::Plus)>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.value`: 128 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::TypeParamBound, token::Plus)>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 128 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 128 bytes
print-type-size type: `std::result::Result<expr::ExprMacro, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `generics::TraitBound`: 120 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.paren_token`: 16 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `generics::TypeParamBound`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Trait`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `PreciseCapture`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `path::Constraint`: 120 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `punctuated::IntoPairs<path::PathSegment, token::PathSep>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.last`: 88 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TraitBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::IntoIter<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 120 bytes
print-type-size type: `std::option::Item<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 120 bytes
print-type-size type: `std::option::Option<generics::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<generics::TraitBound, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::TypeParamBound, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `expr::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `mac::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, data::Fields, std::option::Option<token::Semi>)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprPath>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, mac::Macro>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, data::Fields, std::option::Option<token::Semi>), error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprPath, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<mac::Macro, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeMacro, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `attr::MetaList`: 96 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size type: `generics::LifetimeParam`: 96 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size type: `punctuated::Pair<path::PathSegment, token::PathSep>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 96 bytes
print-type-size         field `.0`: 88 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 96 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 88 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(path::PathSegment, token::PathSep)>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<(path::PathSegment, token::PathSep)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::LifetimeParam>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(path::PathSegment, token::PathSep)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<path::PathSegment, token::PathSep>>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attr::MetaList, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::LifetimeParam, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `generics::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `path::PathSegment`: 88 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::vec::IntoIter<proc_macro2::TokenTree>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.a`: 32 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<path::PathSegment>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::mem::MaybeUninit<path::PathSegment>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 88 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 88 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, data::FieldsNamed)>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, token::Brace, punctuated::Punctuated<data::Variant, token::Comma>)>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::Generics>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::PathSegment>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::IntoIter<path::PathSegment>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::option::Item<path::PathSegment>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 88 bytes
print-type-size type: `std::option::Option<path::PathSegment>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, data::FieldsNamed), error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, token::Brace, punctuated::Punctuated<data::Variant, token::Comma>), error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::Generics, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<path::PathSegment, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `expr::ExprCall`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<path::QSelf>, path::Path)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::BareVariadic>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypePath>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ty::BareVariadic>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<path::QSelf>, path::Path), error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::BareVariadic, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypePath, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::BareVariadic`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.comma`: 8 bytes
print-type-size     field `.name`: 32 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `derive::Data`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Union`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `derive::DataStruct`: 72 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprTuple`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::PredicateLifetime`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((proc_macro2::extra::DelimSpan, parse::ParseBuffer<'_>), buffer::Cursor<'_>)>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<((proc_macro2::extra::DelimSpan, parse::ParseBuffer<'_>), buffer::Cursor<'_>), error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `expr::ExprField`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.member`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::ParenthesizedGenericArguments`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     variant `AngleBracketed`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Parenthesized`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((mac::MacroDelimiter, proc_macro2::TokenStream), buffer::Cursor<'_>)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((proc_macro2::Delimiter, proc_macro2::extra::DelimSpan, parse::ParseBuffer<'_>), buffer::Cursor<'_>)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::ParenthesizedGenericArguments>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, proc_macro2::TokenTree)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<((mac::MacroDelimiter, proc_macro2::TokenStream), buffer::Cursor<'_>), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<((proc_macro2::Delimiter, proc_macro2::extra::DelimSpan, parse::ParseBuffer<'_>), buffer::Cursor<'_>), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<path::ParenthesizedGenericArguments, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `alloc::sync::ArcInner<std::thread::Inner>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 40 bytes
print-type-size type: `data::Fields`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unnamed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `derive::DataUnion`: 56 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `expr::ExprIndex`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lit::LitFloatRepr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `lit::LitIntRepr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `lookahead::Lookahead1<'_>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.comparisons`: 32 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `meta::ParseNestedMeta<'_>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.input`: 8 bytes
print-type-size type: `path::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Zip<std::str::Chars<'_>, std::slice::Iter<'_, proc_macro2::Span>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitFloatRepr>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitIntRepr>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitFloatRepr>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitIntRepr>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(buffer::Cursor<'_>, proc_macro2::extra::DelimSpan, buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::As, path::Path)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<path::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(proc_macro2::extra::DelimSpan, parse::ParseBuffer<'_>), error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Braces<'_>, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Brackets<'_>, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Parens<'_>, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::AngleBracketedGenericArguments, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeReference, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::TypeReference`: 56 bytes, alignment: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `data::FieldsNamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `data::FieldsUnnamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `derive::DataEnum`: 48 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `expr::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprLit`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lit`: 24 bytes
print-type-size type: `expr::ExprParen`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Braces<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Brackets<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Parens<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::array::IntoIter<proc_macro2::TokenTree, 1>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 1>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (lifetime::Lifetime, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (mac::MacroDelimiter, proc_macro2::TokenStream)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Ident, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::TokenStream, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::TokenTree, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::FieldsNamed>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::FieldsUnnamed>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprLit>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, group::Group<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<generics::BoundLifetimes>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(buffer::Cursor<'_>, proc_macro2::Delimiter, proc_macro2::extra::DelimSpan, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(lifetime::Lifetime, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<generics::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(lifetime::Lifetime, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(mac::MacroDelimiter, proc_macro2::TokenStream), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Delimiter, proc_macro2::extra::DelimSpan, parse::ParseBuffer<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Ident, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::TokenStream, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::TokenTree, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<data::FieldsNamed, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<data::FieldsUnnamed, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprLit, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::BoundLifetimes, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<group::Group<'_>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::Path, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<generics::BoundLifetimes>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeTuple, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `ty::TypeTuple`: 48 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `error::ErrorMessage`: 40 bytes, alignment: 8 bytes
print-type-size     field `.message`: 24 bytes
print-type-size     field `.span`: 16 bytes
print-type-size type: `expr::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `generics::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Group<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lit::LitRepr`: 40 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<(lifetime::Lifetime, token::Plus)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<error::ErrorMessage>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitRepr>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<(lifetime::Lifetime, token::Plus)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<error::ErrorMessage>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitRepr>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (proc_macro2::Ident, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (proc_macro2::Literal, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, error::ErrorMessage>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (lit::Lit, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Group, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Literal, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lifetime::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<generics::WhereClause>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lifetime::Lifetime>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeTraitObject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(lit::Lit, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Group, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Literal, buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<error::ErrorMessage>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<generics::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<(lit::Lit, buffer::Cursor<'_>), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Group, buffer::Cursor<'_>), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Literal, buffer::Cursor<'_>), error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::WhereClause, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lifetime::Lifetime, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<generics::WhereClause>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<lifetime::Lifetime>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeImplTrait, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeTraitObject, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size     field `.error`: 16 bytes
print-type-size type: `std::thread::Inner`: 40 bytes, alignment: 8 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.parker`: 16 bytes
print-type-size type: `ty::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `buffer::Cursor<'a>::empty::UnsafeSyncEntry`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `buffer::Entry`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 32 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ident`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `End`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `error::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 32 bytes
print-type-size type: `lifetime::Lifetime`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `proc_macro2::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::TokenTree`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `punctuated::IntoIter<data::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `punctuated::IntoIter<generics::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `punctuated::Punctuated<data::Field, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<data::Field, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<data::Variant, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<expr::Expr, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<expr::FieldValue, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::GenericParam, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::TypeParamBound, token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<generics::WherePredicate, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<lifetime::Lifetime, token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<path::GenericArgument, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<path::PathSegment, token::PathSep>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<ty::BareFnArg, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Punctuated<ty::Type, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `restriction::VisRestricted`: 32 bytes, alignment: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `restriction::Visibility`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Public`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `std::cell::RefCell<std::vec::Vec<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ffi::NulError`: 32 bytes, alignment: 8 bytes
print-type-size     field `.1`: 24 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(data::Field, ())>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Plus)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (data::Field, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (data::Variant, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (expr::Expr, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (expr::FieldValue, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::GenericParam, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::TypeParamBound, token::Plus)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (lifetime::Lifetime, token::Plus)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (path::GenericArgument, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (path::PathSegment, token::PathSep)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (ty::Type, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, attr::Attribute>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, error::ErrorMessage>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<buffer::Entry>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<lifetime::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<buffer::Entry>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<lifetime::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (std::boxed::Box<str>, std::boxed::Box<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (bool, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Punct, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Span, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (token::Underscore, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Member>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::Lit>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<data::Field, token::Comma>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<data::Variant, token::Comma>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<expr::Expr, token::Comma>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<generics::TypeParamBound, token::Plus>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<ty::Type, token::Comma>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, restriction::Visibility>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::Lit>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<proc_macro2::Ident>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::Abi>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::vec::Vec<attr::Attribute>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 32 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, token::Colon)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Punct, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::boxed::Box<str>, std::boxed::Box<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, punctuated::Pair<&path::PathSegment, &token::PathSep>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lifetime::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<path::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcInner<std::cell::Cell<parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(bool, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Punct, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Span, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(token::Underscore, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::Member, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<lit::Lit, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Group, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Ident, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Literal, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenTree, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<data::Field, token::Comma>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<data::Variant, token::Comma>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<expr::Expr, token::Comma>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<generics::TypeParamBound, token::Plus>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<ty::Type, token::Comma>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<restriction::Visibility, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::ffi::CString, std::ffi::NulError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::Lit>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::Ident>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::TokenTree>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::Abi>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<attr::Attribute>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeParen, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypePtr, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeSlice, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<(data::Field, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(data::Field, token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(generics::TypeParamBound, token::Plus)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(path::PathSegment, token::PathSep)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<data::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<error::ErrorMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<generics::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::Vec<T, A>::retain_mut::BackshiftOnDrop<'_, &str, std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size     field `.processed_len`: 8 bytes
print-type-size     field `.deleted_cnt`: 8 bytes
print-type-size     field `.original_len`: 8 bytes
print-type-size type: `ty::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `bigint::BigInt`: 24 bytes, alignment: 8 bytes
print-type-size     field `.digits`: 24 bytes
print-type-size type: `data::Members<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 16 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIter<'_, data::Field, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `drops::NoDrop<punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `error::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `expr::Member`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `lit::Lit`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `CStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `parse::StepCursor<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `punctuated::Pairs<'_, data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, data::Variant, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, expr::Expr, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, expr::FieldValue, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::TypeParamBound, token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::WherePredicate, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, lifetime::Lifetime, token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, path::GenericArgument, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, path::PathSegment, token::PathSep>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, ty::BareFnArg, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, ty::Type, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `scan_expr::Action`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SetState`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `IncDepth`: 0 bytes
print-type-size     variant `DecDepth`: 0 bytes
print-type-size     variant `Finish`: 0 bytes
print-type-size type: `scan_expr::Input`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Keyword`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `ConsumeAny`: 0 bytes
print-type-size     variant `ConsumeBinOp`: 0 bytes
print-type-size     variant `ConsumeBrace`: 0 bytes
print-type-size     variant `ConsumeDelimiter`: 0 bytes
print-type-size     variant `ConsumeIdent`: 0 bytes
print-type-size     variant `ConsumeLifetime`: 0 bytes
print-type-size     variant `ConsumeLiteral`: 0 bytes
print-type-size     variant `ConsumeNestedBrace`: 0 bytes
print-type-size     variant `ExpectPath`: 0 bytes
print-type-size     variant `ExpectTurbofish`: 0 bytes
print-type-size     variant `ExpectType`: 0 bytes
print-type-size     variant `CanBeginExpr`: 0 bytes
print-type-size     variant `Otherwise`: 0 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::vec::Vec<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::iter::Enumerate<punctuated::Iter<'_, path::PathSegment>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Take<&mut punctuated::Pairs<'_, path::PathSegment, token::PathSep>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (data::Field, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (data::Variant, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (expr::Expr, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (expr::FieldValue, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::GenericParam, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::TypeParamBound, token::Plus)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (lifetime::Lifetime, token::Plus)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (path::GenericArgument, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (path::PathSegment, token::PathSep)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (ty::Type, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, attr::Attribute>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, error::ErrorMessage>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, attr::Attribute>, for<'a, 'b> fn(&'a &'b attr::Attribute) -> bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIter<'_, data::Field, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(data::Field, ())>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(data::Field, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(generics::TypeParamBound, token::Plus)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(path::PathSegment, token::PathSep)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<buffer::Entry>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<data::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<error::ErrorMessage>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<generics::TypeParamBound>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, punctuated::Pair<&path::PathSegment, &token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((), buffer::Cursor<'_>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 1]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 2]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 3]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, bool>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Index>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TraitBoundModifier>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitFloat>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitInt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitStr>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, op::UnOp>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::Span>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<expr::Expr>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<ty::Type>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::LitFloat>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::LitStr>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Colon>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Dyn>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Eq>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Mut>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Star>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Unsafe>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::And>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::As>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Colon>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Const>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dot>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::DotDot>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::DotDotDot>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dyn>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Enum>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Eq>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Extern>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Fn>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::For>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Gt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Impl>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::In>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Lt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Mut>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Not>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::PathSep>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Pound>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Pub>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::RArrow>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::SelfValue>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Semi>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Star>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Struct>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Tilde>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Underscore>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Union>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Unsafe>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Where>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::ReturnType>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeGroup>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, u32>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<buffer::Cursor<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<expr::Member>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::Lit>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&data::Field, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&data::Variant, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&expr::Expr, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&expr::FieldValue, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::GenericParam, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::TypeParamBound, &token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::WherePredicate, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&lifetime::Lifetime, &token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&path::GenericArgument, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&path::PathSegment, &token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&ty::BareFnArg, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&ty::Type, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ty::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&attr::MetaList, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&attr::MetaNameValue, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&parse::ParseBuffer<'_>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&path::Path, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&proc_macro2::Ident, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<((), buffer::Cursor<'_>), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 1], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 2], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 3], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<bool, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<expr::Index, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<generics::TraitBoundModifier, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<lit::LitBool, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<lit::LitByte, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lit::LitByteStr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lit::LitCStr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lit::LitChar, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lit::LitFloat, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lit::LitInt, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<lit::LitStr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<op::BinOp, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<op::UnOp, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<parse::Nothing, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro2::Literal, proc_macro2::LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::Punct, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<proc_macro2::Span, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::boxed::Box<expr::Expr>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<ty::Type>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::LitFloat>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::LitStr>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Colon>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Comma>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Dyn>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Eq>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Mut>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::PathSep>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Plus>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Star>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Unsafe>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<token::Abstract, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::And, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::AndAnd, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::AndEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::As, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Async, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::At, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Auto, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Await, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Become, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Box, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Break, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Caret, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::CaretEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Colon, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Comma, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Const, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Continue, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Crate, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Default, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Do, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Dollar, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Dot, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::DotDot, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::DotDotDot, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::DotDotEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Dyn, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Else, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Enum, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Eq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::EqEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Extern, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::FatArrow, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Final, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Fn, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::For, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Ge, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Gt, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::If, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Impl, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::In, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::LArrow, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Le, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Let, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Loop, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Lt, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Macro, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Match, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Minus, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::MinusEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Mod, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Move, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Mut, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Ne, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Not, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Or, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::OrEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::OrOr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Override, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::PathSep, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Percent, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::PercentEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Plus, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::PlusEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Pound, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Priv, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Pub, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Question, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::RArrow, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Raw, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Ref, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Return, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::SelfType, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::SelfValue, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Semi, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Shl, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::ShlEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Shr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::ShrEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Slash, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::SlashEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Star, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::StarEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Static, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Struct, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Super, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Tilde, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Trait, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Try, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Type, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Typeof, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Underscore, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Union, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Unsafe, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Unsized, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Use, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Virtual, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Where, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::While, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<token::Yield, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ty::Abi, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::ReturnType, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeGroup, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeInfer, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ty::TypeNever, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<u32, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Field, ())>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Field, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Variant, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(expr::Expr, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(expr::FieldValue, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::GenericParam, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::TypeParamBound, token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::WherePredicate, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(lifetime::Lifetime, token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(path::GenericArgument, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(path::PathSegment, token::PathSep)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(ty::BareFnArg, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(ty::Type, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<attr::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<buffer::Entry>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<data::Field>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<generics::TypeParamBound>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `ty::TypeParen`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeSlice`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/token.rs:1010:20: 1010:28}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<data::Field, {closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, ())>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<data::Field, {closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<data::Field, {closure@std::vec::Vec<data::Field>::extend_trusted<std::option::IntoIter<data::Field>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, {closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Plus)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, {closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::option::IntoIter<generics::TypeParamBound>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(data::Field, ()), data::Field, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}, {closure@std::iter::Iterator::for_each::call<data::Field, {closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, ())>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(data::Field, token::Comma), data::Field, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}, {closure@std::iter::Iterator::for_each::call<data::Field, {closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(generics::TypeParamBound, token::Plus), generics::TypeParamBound, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}, {closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, {closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Plus)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, ())>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<data::Field>::extend_trusted<std::option::IntoIter<data::Field>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Plus)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::option::IntoIter<generics::TypeParamBound>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (data::Field, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (data::Variant, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (expr::Expr, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (expr::FieldValue, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (generics::GenericParam, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (generics::TypeParamBound, token::Plus), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (generics::WherePredicate, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (lifetime::Lifetime, token::Plus), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (path::GenericArgument, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (path::PathSegment, token::PathSep), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (ty::BareFnArg, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (ty::Type, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, attr::Attribute, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, error::ErrorMessage, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Field, ())>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Variant, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(expr::Expr, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(expr::FieldValue, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::TypeParamBound, token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::WherePredicate, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(lifetime::Lifetime, token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(path::GenericArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(path::PathSegment, token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(ty::BareFnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(ty::Type, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<attr::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<buffer::Entry>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 16 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `error::Iter<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 16 bytes
print-type-size type: `generics::ConstParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::ConstParamsMut<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::Lifetimes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::LifetimesMut<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::TypeParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::TypeParamsMut<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `lit::StrStyle`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Raw`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Cooked`: 0 bytes
print-type-size type: `mac::MacroDelimiter`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Brace`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Bracket`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `op::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Chain`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 7 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `punctuated::Iter<'_, data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Pair<&data::Field, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&data::Variant, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&expr::Expr, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&expr::FieldValue, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&generics::GenericParam, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&generics::TypeParamBound, &token::Plus>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&generics::WherePredicate, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&lifetime::Lifetime, &token::Plus>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&path::GenericArgument, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&path::PathSegment, &token::PathSep>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&ty::BareFnArg, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `punctuated::Pair<&ty::Type, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterMutTrait<'_, data::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterMutTrait<'_, path::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterTrait<'_, data::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<dyn punctuated::IterTrait<'_, path::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::RefMut<'_, std::vec::Vec<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::Bound<&usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::Bound<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, &str>, {closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, &str>, {closure@std::str::join_generic_copy<str, u8, &str>::{closure#1}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<&mut punctuated::Pairs<'_, path::PathSegment, token::PathSep>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<buffer::Entry>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<bool, &ty::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(char, &proc_macro2::Span)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(data::Field, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(data::Variant, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(expr::Expr, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(expr::FieldValue, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::GenericParam, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::TypeParamBound, token::Plus))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::WherePredicate, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(lifetime::Lifetime, token::Plus))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(path::GenericArgument, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(path::PathSegment, token::PathSep))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(ty::BareFnArg, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(ty::Type, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &attr::Attribute)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &error::ErrorMessage)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &path::PathSegment)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::WeakInner<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::thread::thread_name_string::ThreadNameString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Paren>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(data::Field, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(data::Variant, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(expr::Expr, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(expr::FieldValue, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(generics::GenericParam, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(generics::TypeParamBound, token::Plus)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(generics::WherePredicate, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(lifetime::Lifetime, token::Plus)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(path::GenericArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(path::PathSegment, token::PathSep)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(scan_expr::Input, scan_expr::Action)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(ty::BareFnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(ty::Type, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[attr::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::Span]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterMutTrait<'_, data::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterMutTrait<'_, path::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterTrait<'_, data::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<dyn punctuated::IterTrait<'_, path::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterMutTrait<'_, data::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterMutTrait<'_, path::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterTrait<'_, data::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<dyn punctuated::IterTrait<'_, path::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::rc::Weak<std::cell::Cell<parse::Unexpected>, &std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 8 bytes
print-type-size type: `std::rc::WeakInner<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<'_, std::vec::Vec<&str>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (data::Variant, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (expr::Expr, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (expr::FieldValue, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (generics::TypeParamBound, token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (lifetime::Lifetime, token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (path::GenericArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (path::PathSegment, token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (scan_expr::Input, scan_expr::Action)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (ty::Type, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, attr::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (path::PathSegment, token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Bytes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sys::sync::thread_parking::darwin::Parker`: 16 bytes, alignment: 8 bytes
print-type-size     field `.semaphore`: 8 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::thread::thread_name_string::ThreadNameString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `thread::ThreadBound<error::SpanRange>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `ty::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `ty::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3174:29: 3174:55}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3193:29: 3193:55}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/group.rs:83:16: 83:24}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/scan_expr.rs:202:54: 202:62}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<proc_macro2::TokenTree, 1> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 1>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<proc_macro2::TokenTree, 1> as std::iter::Iterator>::fold<(), {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 1>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<proc_macro2::TokenTree, 8> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 8>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<proc_macro2::TokenTree, 8> as std::iter::Iterator>::fold<(), {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 8>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<proc_macro2::TokenTree, 1> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 1>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<proc_macro2::TokenTree, 1> as std::iter::Iterator>::fold<(), {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 1>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<proc_macro2::TokenTree, 8> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 8>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<proc_macro2::TokenTree, 8> as std::iter::Iterator>::fold<(), {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 8>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::extra::DelimSpan`: 12 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 12 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::extra::DelimSpanEnum`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.join`: 4 bytes
print-type-size         field `.open`: 4 bytes
print-type-size         field `.close`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<token::DotDot>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::PathSep>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `token::Brace`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `token::Bracket`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `token::DotDotDot`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::Paren`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (data::Field, ()), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (data::Field, token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (generics::TypeParamBound, token::Plus), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (path::PathSegment, token::PathSep), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, error::ErrorMessage, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, generics::TypeParamBound, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `attr::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `attr::parsing::DisplayAttrStyle<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `attr::parsing::DisplayPath<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroU64Inner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `error::SpanRange`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `expr::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `generics::ImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `generics::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `generics::Turbofish<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `generics::TypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `lit::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `lit::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitCStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `op::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `path::printing::<impl spanned::Spanned for path::QSelf>::span::QSelfDelimiters<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::As>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Colon>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Const>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Eq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Gt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Lt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::PathSep>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Semi>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<'_, proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::boxed::Box<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIter<'_, data::Field, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<std::iter::Empty<&data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<drops::NoDrop<std::iter::Empty<&mut data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::rc::RcInner<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::BorrowRefMut<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::iter::ByRefSized<'_, std::ops::index_range::IndexRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZero<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::TypeParamBound, token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(lifetime::Lifetime, token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(path::PathSegment, token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::IntoIter<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&token::Comma>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&token::PathSep>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::TypeParamBound, token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(lifetime::Lifetime, token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(path::PathSegment, token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(scan_expr::Input, scan_expr::Action)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&error::SpanRange>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::ConstParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::LifetimeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (path::PathSegment, token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::ConstParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::LifetimeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Span, proc_macro2::Delimiter)>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::LitFloat>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Comma>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Plus>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Star>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::pin::Pin<std::sync::Arc<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__pointer`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::TypeParamBound, token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(lifetime::Lifetime, token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(path::PathSegment, token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(scan_expr::Input, scan_expr::Action)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::sync::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIter<'_, data::Field, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<std::iter::Empty<&data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<drops::NoDrop<std::iter::Empty<&mut data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIter<'_, data::Field, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<std::iter::Empty<&data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<drops::NoDrop<std::iter::Empty<&mut data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::rc::RcInner<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<(), std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<data::Field>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<data::Variant>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<expr::FieldValue>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::Path>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ty::Type>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::DotDot`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::FatArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::LArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::MinusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::PathSep`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::PercentEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::PlusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::SlashEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::StarEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `tt::TokenStreamHelper<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `tt::TokenTreeHelper<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/attr.rs:803:49: 803:57}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/data.rs:397:47: 397:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/data.rs:406:47: 406:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/derive.rs:248:55: 248:63}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/discouraged.rs:213:19: 213:27}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3029:34: 3029:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3050:48: 3050:53}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3455:40: 3455:48}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3581:47: 3581:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3649:42: 3649:50}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3761:40: 3761:48}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3770:47: 3770:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3894:47: 3894:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/expr.rs:3941:47: 3941:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/generics.rs:1272:29: 1272:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/generics.rs:1399:59: 1399:67}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lifetime.rs:135:33: 135:35}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lookahead.rs:114:32: 114:41}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/path.rs:894:48: 894:56}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/path.rs:97:37: 97:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:572:22: 572:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:662:22: 662:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:814:22: 814:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:822:22: 822:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:920:22: 920:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:928:22: 928:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/restriction.rs:170:47: 170:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/scan_expr.rs:198:56: 198:64}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/token.rs:984:20: 984:28}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ty.rs:1092:49: 1092:57}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ty.rs:1101:49: 1101:57}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ty.rs:1140:47: 1140:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ty.rs:1164:47: 1164:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ty.rs:1201:47: 1201:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ty.rs:1210:47: 1210:55}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 1>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 8>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::vec::IntoIter<proc_macro2::TokenTree>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 1>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 8>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 1>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::array::IntoIter<proc_macro2::TokenTree, 8>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::vec::IntoIter<proc_macro2::TokenTree>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 1>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 8>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&error::ErrorMessage, proc_macro2::TokenStream, (), for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 1>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::array::IntoIter<proc_macro2::TokenTree, 8>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:220:22: 220:29}>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &&str, usize, usize, std::option::Option<usize>, {closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}, fn(usize, usize) -> std::option::Option<usize> {core::num::<impl usize>::checked_add}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::escape::EscapeIterInner<4>`: 6 bytes, alignment: 1 bytes
print-type-size     field `.data`: 4 bytes
print-type-size     field `.alive`: 2 bytes
print-type-size type: `std::ascii::EscapeDefault`: 6 bytes, alignment: 1 bytes
print-type-size     field `.0`: 6 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `token::Abstract`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Auto`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Become`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Default`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Do`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Dollar`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Final`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Macro`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Minus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Mod`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Not`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Override`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Percent`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Plus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Priv`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Raw`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::SelfType`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::SelfValue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Slash`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Super`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Tilde`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Trait`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Type`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Typeof`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Unsized`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Use`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Virtual`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::private::WithSpan`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `ty::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `ty::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `std::ops::Range<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `fixup::FixupContext`: 1 bytes, alignment: 1 bytes
print-type-size     field `.next_operator_can_begin_generics`: 1 bytes
print-type-size type: `path::printing::PathStyle`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Expr`: 0 bytes
print-type-size     variant `Mod`: 0 bytes
print-type-size     variant `AsWritten`: 0 bytes
print-type-size type: `precedence::Precedence`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Jump`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size     variant `Or`: 0 bytes
print-type-size     variant `And`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `BitOr`: 0 bytes
print-type-size     variant `BitXor`: 0 bytes
print-type-size     variant `BitAnd`: 0 bytes
print-type-size     variant `Shift`: 0 bytes
print-type-size     variant `Sum`: 0 bytes
print-type-size     variant `Product`: 0 bytes
print-type-size     variant `Cast`: 0 bytes
print-type-size     variant `Prefix`: 0 bytes
print-type-size     variant `Unambiguous`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `CompilerPanic`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ascii::Char`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `StartOfHeading`: 0 bytes
print-type-size     variant `StartOfText`: 0 bytes
print-type-size     variant `EndOfText`: 0 bytes
print-type-size     variant `EndOfTransmission`: 0 bytes
print-type-size     variant `Enquiry`: 0 bytes
print-type-size     variant `Acknowledge`: 0 bytes
print-type-size     variant `Bell`: 0 bytes
print-type-size     variant `Backspace`: 0 bytes
print-type-size     variant `CharacterTabulation`: 0 bytes
print-type-size     variant `LineFeed`: 0 bytes
print-type-size     variant `LineTabulation`: 0 bytes
print-type-size     variant `FormFeed`: 0 bytes
print-type-size     variant `CarriageReturn`: 0 bytes
print-type-size     variant `ShiftOut`: 0 bytes
print-type-size     variant `ShiftIn`: 0 bytes
print-type-size     variant `DataLinkEscape`: 0 bytes
print-type-size     variant `DeviceControlOne`: 0 bytes
print-type-size     variant `DeviceControlTwo`: 0 bytes
print-type-size     variant `DeviceControlThree`: 0 bytes
print-type-size     variant `DeviceControlFour`: 0 bytes
print-type-size     variant `NegativeAcknowledge`: 0 bytes
print-type-size     variant `SynchronousIdle`: 0 bytes
print-type-size     variant `EndOfTransmissionBlock`: 0 bytes
print-type-size     variant `Cancel`: 0 bytes
print-type-size     variant `EndOfMedium`: 0 bytes
print-type-size     variant `Substitute`: 0 bytes
print-type-size     variant `Escape`: 0 bytes
print-type-size     variant `InformationSeparatorFour`: 0 bytes
print-type-size     variant `InformationSeparatorThree`: 0 bytes
print-type-size     variant `InformationSeparatorTwo`: 0 bytes
print-type-size     variant `InformationSeparatorOne`: 0 bytes
print-type-size     variant `Space`: 0 bytes
print-type-size     variant `ExclamationMark`: 0 bytes
print-type-size     variant `QuotationMark`: 0 bytes
print-type-size     variant `NumberSign`: 0 bytes
print-type-size     variant `DollarSign`: 0 bytes
print-type-size     variant `PercentSign`: 0 bytes
print-type-size     variant `Ampersand`: 0 bytes
print-type-size     variant `Apostrophe`: 0 bytes
print-type-size     variant `LeftParenthesis`: 0 bytes
print-type-size     variant `RightParenthesis`: 0 bytes
print-type-size     variant `Asterisk`: 0 bytes
print-type-size     variant `PlusSign`: 0 bytes
print-type-size     variant `Comma`: 0 bytes
print-type-size     variant `HyphenMinus`: 0 bytes
print-type-size     variant `FullStop`: 0 bytes
print-type-size     variant `Solidus`: 0 bytes
print-type-size     variant `Digit0`: 0 bytes
print-type-size     variant `Digit1`: 0 bytes
print-type-size     variant `Digit2`: 0 bytes
print-type-size     variant `Digit3`: 0 bytes
print-type-size     variant `Digit4`: 0 bytes
print-type-size     variant `Digit5`: 0 bytes
print-type-size     variant `Digit6`: 0 bytes
print-type-size     variant `Digit7`: 0 bytes
print-type-size     variant `Digit8`: 0 bytes
print-type-size     variant `Digit9`: 0 bytes
print-type-size     variant `Colon`: 0 bytes
print-type-size     variant `Semicolon`: 0 bytes
print-type-size     variant `LessThanSign`: 0 bytes
print-type-size     variant `EqualsSign`: 0 bytes
print-type-size     variant `GreaterThanSign`: 0 bytes
print-type-size     variant `QuestionMark`: 0 bytes
print-type-size     variant `CommercialAt`: 0 bytes
print-type-size     variant `CapitalA`: 0 bytes
print-type-size     variant `CapitalB`: 0 bytes
print-type-size     variant `CapitalC`: 0 bytes
print-type-size     variant `CapitalD`: 0 bytes
print-type-size     variant `CapitalE`: 0 bytes
print-type-size     variant `CapitalF`: 0 bytes
print-type-size     variant `CapitalG`: 0 bytes
print-type-size     variant `CapitalH`: 0 bytes
print-type-size     variant `CapitalI`: 0 bytes
print-type-size     variant `CapitalJ`: 0 bytes
print-type-size     variant `CapitalK`: 0 bytes
print-type-size     variant `CapitalL`: 0 bytes
print-type-size     variant `CapitalM`: 0 bytes
print-type-size     variant `CapitalN`: 0 bytes
print-type-size     variant `CapitalO`: 0 bytes
print-type-size     variant `CapitalP`: 0 bytes
print-type-size     variant `CapitalQ`: 0 bytes
print-type-size     variant `CapitalR`: 0 bytes
print-type-size     variant `CapitalS`: 0 bytes
print-type-size     variant `CapitalT`: 0 bytes
print-type-size     variant `CapitalU`: 0 bytes
print-type-size     variant `CapitalV`: 0 bytes
print-type-size     variant `CapitalW`: 0 bytes
print-type-size     variant `CapitalX`: 0 bytes
print-type-size     variant `CapitalY`: 0 bytes
print-type-size     variant `CapitalZ`: 0 bytes
print-type-size     variant `LeftSquareBracket`: 0 bytes
print-type-size     variant `ReverseSolidus`: 0 bytes
print-type-size     variant `RightSquareBracket`: 0 bytes
print-type-size     variant `CircumflexAccent`: 0 bytes
print-type-size     variant `LowLine`: 0 bytes
print-type-size     variant `GraveAccent`: 0 bytes
print-type-size     variant `SmallA`: 0 bytes
print-type-size     variant `SmallB`: 0 bytes
print-type-size     variant `SmallC`: 0 bytes
print-type-size     variant `SmallD`: 0 bytes
print-type-size     variant `SmallE`: 0 bytes
print-type-size     variant `SmallF`: 0 bytes
print-type-size     variant `SmallG`: 0 bytes
print-type-size     variant `SmallH`: 0 bytes
print-type-size     variant `SmallI`: 0 bytes
print-type-size     variant `SmallJ`: 0 bytes
print-type-size     variant `SmallK`: 0 bytes
print-type-size     variant `SmallL`: 0 bytes
print-type-size     variant `SmallM`: 0 bytes
print-type-size     variant `SmallN`: 0 bytes
print-type-size     variant `SmallO`: 0 bytes
print-type-size     variant `SmallP`: 0 bytes
print-type-size     variant `SmallQ`: 0 bytes
print-type-size     variant `SmallR`: 0 bytes
print-type-size     variant `SmallS`: 0 bytes
print-type-size     variant `SmallT`: 0 bytes
print-type-size     variant `SmallU`: 0 bytes
print-type-size     variant `SmallV`: 0 bytes
print-type-size     variant `SmallW`: 0 bytes
print-type-size     variant `SmallX`: 0 bytes
print-type-size     variant `SmallY`: 0 bytes
print-type-size     variant `SmallZ`: 0 bytes
print-type-size     variant `LeftCurlyBracket`: 0 bytes
print-type-size     variant `VerticalLine`: 0 bytes
print-type-size     variant `RightCurlyBracket`: 0 bytes
print-type-size     variant `Tilde`: 0 bytes
print-type-size     variant `Delete`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `__private::private`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterMutTrait<'_, data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterMutTrait<'_, path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterTrait<'_, data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterTrait<'_, generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<dyn punctuated::IterTrait<'_, path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<std::iter::Empty<&data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `drops::NoDrop<std::iter::Empty<&mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `expr::ExprArray`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAssign`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAsync`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprAwait`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprBreak`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprClosure`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprConst`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprContinue`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprForLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprIf`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprInfer`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprLet`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprMatch`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprRange`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprRawAddr`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprRepeat`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprReturn`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprTry`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprTryBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprUnsafe`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprWhile`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `expr::ExprYield`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `ext::private::IdentAny`: 0 bytes, alignment: 1 bytes
print-type-size type: `ext::private::PeekFn`: 0 bytes, alignment: 1 bytes
print-type-size type: `generics::PreciseCapture`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `lookahead::End`: 0 bytes, alignment: 1 bytes
print-type-size type: `lookahead::TokenMarker`: 0 bytes, alignment: 1 bytes
print-type-size type: `parse::Nothing`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `restriction::FieldMutability`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Empty<&data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::iter::Empty<&mut data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(data::Variant, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(expr::Expr, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(expr::FieldValue, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::TypeParamBound, token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::WherePredicate, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(lifetime::Lifetime, token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(path::GenericArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(path::PathSegment, token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(scan_expr::Input, scan_expr::Action)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(ty::BareFnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(ty::Type, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&attr::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (path::PathSegment, token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::vec::Vec<&str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Field, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Variant, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(expr::Expr, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(expr::FieldValue, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::TypeParamBound, token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::WherePredicate, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(lifetime::Lifetime, token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(path::GenericArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(path::PathSegment, token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ty::BareFnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ty::Type, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[buffer::Entry]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[error::ErrorMessage; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[error::ErrorMessage]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<buffer::Entry>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<u8>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::sync::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<attr::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<data::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterMutTrait<'_, data::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterMutTrait<'_, path::PathSegment>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterTrait<'_, data::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::GenericParam>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<dyn punctuated::IterTrait<'_, path::PathSegment>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIter<'_, data::Field, token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Plus>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIter<'_, path::PathSegment, token::PathSep>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<punctuated::PrivateIterMut<'_, path::PathSegment, token::PathSep>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<std::iter::Empty<&data::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<drops::NoDrop<std::iter::Empty<&mut data::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn() -> &data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn() -> &mut data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(buffer::Cursor<'_>) -> buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lifetime::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<data::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<expr::Expr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<expr::FieldValue>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lifetime::Lifetime>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitIntRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::Path>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ty::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ty::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::cell::Cell<parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterMutTrait<'_, data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterMutTrait<'_, generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterMutTrait<'_, path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterTrait<'_, data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterTrait<'_, generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterTrait<'_, generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn punctuated::IterTrait<'_, path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::iter::Empty<&data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::iter::Empty<&mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/error.rs:194:66: 194:69}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/error.rs:195:49: 195:52}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ext.rs:88:20: 88:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/generics.rs:150:46: 150:48}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/group.rs:47:56: 47:73}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/group.rs:56:50: 56:67}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/group.rs:65:52: 65:69}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/group.rs:73:49: 73:66}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/ident.rs:78:24: 78:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lifetime.rs:132:24: 132:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:1812:31: 1812:34}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/lit.rs:868:24: 868:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/mac.rs:154:16: 154:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/parse.rs:1186:20: 1186:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/parse.rs:1193:20: 1193:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/parse.rs:1203:20: 1203:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/parse.rs:1217:20: 1217:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/parse.rs:1227:20: 1227:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/path.rs:642:22: 642:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:162:33: 162:36}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:208:34: 208:37}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:210:34: 210:42}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:522:52: 522:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:523:39: 523:42}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:571:18: 571:26}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:661:18: 661:26}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:813:18: 813:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:822:52: 822:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:919:18: 919:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/punctuated.rs:928:52: 928:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/scan_expr.rs:223:39: 223:47}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/scan_expr.rs:228:55: 228:63}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/token.rs:537:20: 537:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::all::check<&path::PathSegment, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/path.rs:642:22: 642:31}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::str::join_generic_copy<str, u8, &str>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `autocfg::AutoCfg`: 184 bytes, alignment: 8 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 72 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.uuid`: 8 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `autocfg::rustc::Rustc`: 72 bytes, alignment: 8 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustc_wrapper`: 24 bytes
print-type-size     field `.rustc_workspace_wrapper`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `autocfg::version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::os_str::bytes::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `{closure@std::rt::lang_start<()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::iter::Zip<core::str::Bytes<'_>, core::str::Bytes<'_>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::option::Option<i128>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i128, core::num::ParseIntError>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 15 bytes
print-type-size         field `.0`: 16 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u128, core::num::ParseIntError>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 31 bytes
print-type-size         padding: 15 bytes
print-type-size         field `.0`: 16 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `core::iter::Enumerate<core::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::option::Option<(char, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::iter::Copied<core::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::num::Wrapping<i128>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::Wrapping<u128>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(char, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::result::Result<f64, ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<f64, core::num::ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::str::Bytes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs:234:48: 234:51}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `core::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `core::num::Wrapping<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::result::Result<f32, ParseFloatError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<f32, core::num::ParseFloatError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<char, core::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::option::Option<(u8, u8)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::num::Wrapping<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::num::Wrapping<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `core::num::ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::num::Wrapping<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::num::dec2flt::FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `core::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::ControlFlow<(), core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs:212:41: 212:49}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<core::str::Chars<'_> as core::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@core::iter::Iterator::all::check<(u8, u8), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs:212:41: 212:49}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `autocfg::AutoCfg`: 184 bytes, alignment: 8 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 72 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.uuid`: 8 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<autocfg::AutoCfg, autocfg::Error>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `autocfg::rustc::Rustc`: 72 bytes, alignment: 8 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustc_wrapper`: 24 bytes
print-type-size     field `.rustc_workspace_wrapper`: 24 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `autocfg::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 24 bytes
print-type-size type: `autocfg::error::ErrorKind`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Utf8`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Io`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Process`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Num`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `autocfg::version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::os_str::bytes::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `{closure@std::rt::lang_start<()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::process::unix::common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::process::unix::common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::os_str::bytes::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::process::unix::common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::io::default_write_fmt::Adapter<'_, std::sys::stdio::unix::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, std::option::Option<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::process::unix::common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `StaticFd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `{closure@std::rt::lang_start<()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::num::niche_types::I32NotAllOnes`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::os::fd::BorrowedFd<'_>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::fd::unix::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::process::unix::common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::os::fd::OwnedFd>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::os_str::bytes::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::stdio::unix::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<&str, 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `core::mem::ManuallyDrop<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     field `.value`: 528 bytes
print-type-size type: `core::mem::MaybeUninit<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 528 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 528 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.data`: 192 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `core::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `core::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 176 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.value`: 192 bytes
print-type-size type: `core::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 192 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 192 bytes
print-type-size type: `alloc::collections::btree_map::Iter<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `alloc::collections::btree_map::Keys<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 72 bytes
print-type-size type: `alloc::collections::btree_set::Iter<'_, &str>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `core::iter::Map<alloc::collections::btree_set::Iter<'_, &str>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/error.rs:21:34: 21:37}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     field `.value`: 66 bytes
print-type-size type: `core::mem::MaybeUninit<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 66 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 66 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree_map::Entry<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree_map::VacantEntry<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `error::ErrorState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.max_err_pos`: 8 bytes
print-type-size     field `.suppress_fail`: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size     field `.reparsing_on_error`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree_map::OccupiedEntry<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::vec::IntoIter<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::array::IntoIter<usize, 2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `alloc::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::BTreeSet<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `core::iter::Enumerate<core::slice::Iter<'_, &str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::iter::TakeWhile<core::iter::Rev<core::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::mem::ManuallyDrop<alloc::vec::Vec<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<(core::ptr::NonNull<u8>, core::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::result::Result<(core::alloc::Layout, usize), core::alloc::LayoutError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<alloc::raw_vec::RawVecInner, alloc::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::alloc::Layout, alloc::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, alloc::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `error::ExpectedSet`: 24 bytes, alignment: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size type: `str::LineCol`: 24 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `RuleResult<()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Matched`: 8 bytes
print-type-size         field `.1`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `RuleResult<char>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Matched`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `alloc::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `alloc::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `alloc::collections::btree::node::LeftOrRight<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Left`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Right`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::search::IndexResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KV`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Edge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::iter::Filter<core::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u8>, {closure@<core::iter::Filter<I, P> as core::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `core::iter::Rev<core::str::Chars<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::mem::ManuallyDrop<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::mem::MaybeUninit<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<core::ops::try_trait::NeverShortCircuit<usize>, core::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::try_trait::NeverShortCircuit<usize>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&&str, &alloc::collections::btree::set_val::SetValZST)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(usize, &&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::result::Result<(), alloc::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::alloc::Layout, core::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, core::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<usize, alloc::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `{closure@<core::iter::TakeWhile<I, P> as core::iter::Iterator>::try_fold::check<'_, char, usize, core::ops::try_trait::NeverShortCircuit<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}, {closure@core::ops::try_trait::NeverShortCircuit<usize>::wrap_mut_2<usize, char, {closure@<core::iter::TakeWhile<core::iter::Rev<core::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}> as core::iter::Iterator>::count::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@alloc::collections::btree_map::VacantEntry<'_, &str, alloc::collections::btree::set_val::SetValZST>::insert_entry::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `<alloc::vec::IntoIter<T, A> as core::ops::Drop>::drop::DropGuard<'_, &str, alloc::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::boxed::Box<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `alloc::boxed::Box<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `alloc::boxed::Box<core::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `alloc::boxed::Box<core::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, alloc::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `core::mem::ManuallyDrop<core::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::MaybeUninit<core::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `core::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `core::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::try_trait::NeverShortCircuit<usize>, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::try_trait::NeverShortCircuitResidual, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ops::try_trait::NeverShortCircuit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&core::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<alloc::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<core::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<core::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `core::result::Result<alloc::boxed::Box<core::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<alloc::boxed::Box<core::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<u8>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::slice::sort::stable::drift::DriftsortRun`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<&str, for<'a, 'b> fn(&'a &str, &'b &str) -> bool {<&str as core::cmp::PartialOrd>::lt}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<char, core::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<alloc::collections::btree::set_val::SetValZST>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `alloc::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut (&str, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut alloc::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::DormantMut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::boxed::Box<(&str, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<core::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<core::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::mem::ManuallyDrop<alloc::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `core::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `core::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/error.rs:21:34: 21:37}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<core::iter::Filter<I, P> as core::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<core::iter::TakeWhile<core::iter::Rev<core::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}> as core::iter::Iterator>::count::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as core::iter::Sum>::sum<core::iter::Map<core::slice::Iter<'_, u8>, {closure@<core::iter::Filter<I, P> as core::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<alloc::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::next_unchecked::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<alloc::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@core::iter::adapters::map::map_fold<&u8, usize, usize, {closure@<core::iter::Filter<I, P> as core::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}, {closure@<usize as core::iter::Sum>::sum<core::iter::Map<core::slice::Iter<'_, u8>, {closure@<core::iter::Filter<I, P> as core::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@core::ops::try_trait::NeverShortCircuit<usize>::wrap_mut_2<usize, char, {closure@<core::iter::TakeWhile<core::iter::Rev<core::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}> as core::iter::Iterator>::count::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::process::unix::common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::iter::Chain<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>, std::iter::Once<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.a`: 48 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 24 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Once<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::IntoIter<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Item<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 24 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Once<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::os_str::bytes::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::process::unix::common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ffi::os_str::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.os_str`: 16 bytes
print-type-size type: `std::io::default_write_fmt::Adapter<'_, std::sys::stdio::unix::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, std::option::Option<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Once<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Once<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<std::ffi::OsString>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::process::unix::common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `StaticFd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/build.rs:170:37: 170:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>>, std::iter::Once<std::ffi::OsString>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::option::IntoIter<std::ffi::OsString>, std::option::IntoIter<std::ffi::OsString>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::rt::lang_start<()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::num::niche_types::I32NotAllOnes`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::niche_types::NonZeroI32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::fs::DirBuilder`: 4 bytes, alignment: 2 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size     field `.recursive`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `std::num::NonZero<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<std::num::NonZero<i32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::BorrowedFd<'_>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::result::Result<(), std::sys::process::unix::unix::ExitStatusError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fd::unix::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::process::unix::unix::ExitStatusError`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fs::unix::DirBuilder`: 2 bytes, alignment: 2 bytes
print-type-size     field `.mode`: 2 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::process::unix::common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::process::unix::common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::os::fd::OwnedFd>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::os_str::bytes::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::stdio::unix::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/build.rs:103:61: 103:70}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/build.rs:105:55: 105:64}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/build.rs:63:58: 63:65}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::UnsafeCell<gemm::MaskBuffer>, !>>`: 288 bytes, alignment: 1 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::UnsafeCell<gemm::MaskBuffer>, ()>>`: 288 bytes, alignment: 1 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::option::Option<std::cell::UnsafeCell<gemm::MaskBuffer>>`: 288 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 287 bytes
print-type-size         field `.0`: 287 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::UnsafeCell<gemm::MaskBuffer>, !>`: 288 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alive`: 287 bytes
print-type-size         field `.0`: 287 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::UnsafeCell<gemm::MaskBuffer>, ()>`: 288 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alive`: 287 bytes
print-type-size         field `.0`: 287 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::UnsafeCell<gemm::MaskBuffer>, !>`: 288 bytes, alignment: 1 bytes
print-type-size     field `.state`: 288 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::UnsafeCell<gemm::MaskBuffer>, ()>`: 288 bytes, alignment: 1 bytes
print-type-size     field `.state`: 288 bytes
print-type-size type: `gemm::MaskBuffer`: 287 bytes, alignment: 1 bytes
print-type-size     field `.buffer`: 287 bytes
print-type-size type: `std::cell::UnsafeCell<gemm::MaskBuffer>`: 287 bytes, alignment: 1 bytes
print-type-size     field `.value`: 287 bytes
print-type-size type: `gemm::GemmParameters<[f64; 2]>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.alpha`: 16 bytes
print-type-size     field `.beta`: 16 bytes
print-type-size     field `.m`: 8 bytes
print-type-size     field `.k`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.a`: 8 bytes
print-type-size     field `.rsa`: 8 bytes
print-type-size     field `.csa`: 8 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.rsb`: 8 bytes
print-type-size     field `.csb`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size     field `.rsc`: 8 bytes
print-type-size     field `.csc`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:317:27: 317:54}`: 128 bytes, alignment: 8 bytes
print-type-size     end padding: 128 bytes
print-type-size type: `gemm::GemmParameters<[f32; 2]>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.m`: 8 bytes
print-type-size     field `.k`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.alpha`: 8 bytes
print-type-size     field `.a`: 8 bytes
print-type-size     field `.rsa`: 8 bytes
print-type-size     field `.csa`: 8 bytes
print-type-size     field `.beta`: 8 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.rsb`: 8 bytes
print-type-size     field `.csb`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size     field `.rsc`: 8 bytes
print-type-size     field `.csc`: 8 bytes
print-type-size type: `gemm::GemmParameters<f64>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.m`: 8 bytes
print-type-size     field `.k`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.alpha`: 8 bytes
print-type-size     field `.a`: 8 bytes
print-type-size     field `.rsa`: 8 bytes
print-type-size     field `.csa`: 8 bytes
print-type-size     field `.beta`: 8 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.rsb`: 8 bytes
print-type-size     field `.csb`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size     field `.rsc`: 8 bytes
print-type-size     field `.csc`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:317:27: 317:54}`: 112 bytes, alignment: 8 bytes
print-type-size     end padding: 112 bytes
print-type-size type: `gemm::GemmParameters<f32>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.m`: 8 bytes
print-type-size     field `.k`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.a`: 8 bytes
print-type-size     field `.rsa`: 8 bytes
print-type-size     field `.csa`: 8 bytes
print-type-size     field `.b`: 8 bytes
print-type-size     field `.rsb`: 8 bytes
print-type-size     field `.csb`: 8 bytes
print-type-size     field `.c`: 8 bytes
print-type-size     field `.rsc`: 8 bytes
print-type-size     field `.csc`: 8 bytes
print-type-size     field `.alpha`: 4 bytes
print-type-size     field `.beta`: 4 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:317:27: 317:54}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:401:19: 401:48}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:401:19: 401:48}`: 88 bytes, alignment: 8 bytes
print-type-size     end padding: 88 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:401:19: 401:48}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `threading::RangeChunkParallel<'_, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:312:31: 312:44}>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.pool`: 8 bytes
print-type-size     field `.range`: 24 bytes
print-type-size     field `.thread_local`: 24 bytes
print-type-size     field `.nthreads`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `threading::RangeChunkParallel<'_, fn()>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pool`: 8 bytes
print-type-size     field `.thread_local`: 8 bytes
print-type-size     field `.range`: 24 bytes
print-type-size     field `.nthreads`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `threading::RangeChunkParallel<'_, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:387:23: 387:32}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.pool`: 8 bytes
print-type-size     field `.range`: 24 bytes
print-type-size     field `.nthreads`: 1 bytes
print-type-size     field `.thread_local`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::core_arch::macros::SimdShuffleIdx<8>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::arch::x86_64::__m256`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::arch::x86_64::__m256d`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m256>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m256d>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m256>`: 32 bytes, alignment: 32 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m256d>`: 32 bytes, alignment: 32 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `aligned_alloc::Alloc<[f32; 2]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `aligned_alloc::Alloc<[f64; 2]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `aligned_alloc::Alloc<f32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `aligned_alloc::Alloc<f64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `util::RangeChunk`: 24 bytes, alignment: 8 bytes
print-type-size     field `.i`: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.chunk`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:312:31: 312:44}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `core::core_arch::macros::SimdShuffleIdx<4>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::arch::x86_64::__m128d`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m128>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m128>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[f32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[f64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::result::Result<*mut u8, std::thread::AccessError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<'_, f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std_detect::detect::cache::Initializer`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::core_arch::macros::SimdShuffleIdx<2>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `ptr::Ptr<*const [f32; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*const [f64; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*const f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*const f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*mut [f32; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*mut [f64; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*mut f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ptr::Ptr<*mut f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::UnsafeCell<gemm::MaskBuffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<&f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::UnsafeCell<gemm::MaskBuffer>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::UnsafeCell<gemm::MaskBuffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::UnsafeCell<gemm::MaskBuffer>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::UnsafeCell<gemm::MaskBuffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std_detect::detect::cache::Cache`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `threading::Registry`: 8 bytes, alignment: 8 bytes
print-type-size     field `.nthreads`: 8 bytes
print-type-size type: `{closure@std_detect::detect::cache::test::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `threading::LoopThreadConfig`: 2 bytes, alignment: 1 bytes
print-type-size     field `.loop3`: 1 bytes
print-type-size     field `.loop2`: 1 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std_detect::detect::arch::x86::Feature`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `aes`: 0 bytes
print-type-size     variant `pclmulqdq`: 0 bytes
print-type-size     variant `rdrand`: 0 bytes
print-type-size     variant `rdseed`: 0 bytes
print-type-size     variant `tsc`: 0 bytes
print-type-size     variant `mmx`: 0 bytes
print-type-size     variant `sse`: 0 bytes
print-type-size     variant `sse2`: 0 bytes
print-type-size     variant `sse3`: 0 bytes
print-type-size     variant `ssse3`: 0 bytes
print-type-size     variant `sse4_1`: 0 bytes
print-type-size     variant `sse4_2`: 0 bytes
print-type-size     variant `sse4a`: 0 bytes
print-type-size     variant `sha`: 0 bytes
print-type-size     variant `avx`: 0 bytes
print-type-size     variant `avx2`: 0 bytes
print-type-size     variant `sha512`: 0 bytes
print-type-size     variant `sm3`: 0 bytes
print-type-size     variant `sm4`: 0 bytes
print-type-size     variant `avx512f`: 0 bytes
print-type-size     variant `avx512cd`: 0 bytes
print-type-size     variant `avx512er`: 0 bytes
print-type-size     variant `avx512pf`: 0 bytes
print-type-size     variant `avx512bw`: 0 bytes
print-type-size     variant `avx512dq`: 0 bytes
print-type-size     variant `avx512vl`: 0 bytes
print-type-size     variant `avx512ifma`: 0 bytes
print-type-size     variant `avx512vbmi`: 0 bytes
print-type-size     variant `avx512vpopcntdq`: 0 bytes
print-type-size     variant `avx512vbmi2`: 0 bytes
print-type-size     variant `gfni`: 0 bytes
print-type-size     variant `vaes`: 0 bytes
print-type-size     variant `vpclmulqdq`: 0 bytes
print-type-size     variant `avx512vnni`: 0 bytes
print-type-size     variant `avx512bitalg`: 0 bytes
print-type-size     variant `avx512bf16`: 0 bytes
print-type-size     variant `avx512vp2intersect`: 0 bytes
print-type-size     variant `avx512fp16`: 0 bytes
print-type-size     variant `avxifma`: 0 bytes
print-type-size     variant `avxneconvert`: 0 bytes
print-type-size     variant `avxvnni`: 0 bytes
print-type-size     variant `avxvnniint16`: 0 bytes
print-type-size     variant `avxvnniint8`: 0 bytes
print-type-size     variant `amx_tile`: 0 bytes
print-type-size     variant `amx_int8`: 0 bytes
print-type-size     variant `amx_bf16`: 0 bytes
print-type-size     variant `amx_fp16`: 0 bytes
print-type-size     variant `amx_complex`: 0 bytes
print-type-size     variant `f16c`: 0 bytes
print-type-size     variant `fma`: 0 bytes
print-type-size     variant `bmi1`: 0 bytes
print-type-size     variant `bmi2`: 0 bytes
print-type-size     variant `lzcnt`: 0 bytes
print-type-size     variant `tbm`: 0 bytes
print-type-size     variant `popcnt`: 0 bytes
print-type-size     variant `fxsr`: 0 bytes
print-type-size     variant `xsave`: 0 bytes
print-type-size     variant `xsaveopt`: 0 bytes
print-type-size     variant `xsaves`: 0 bytes
print-type-size     variant `xsavec`: 0 bytes
print-type-size     variant `cmpxchg16b`: 0 bytes
print-type-size     variant `kl`: 0 bytes
print-type-size     variant `widekl`: 0 bytes
print-type-size     variant `adx`: 0 bytes
print-type-size     variant `rtm`: 0 bytes
print-type-size     variant `movbe`: 0 bytes
print-type-size     variant `ermsb`: 0 bytes
print-type-size     variant `xop`: 0 bytes
print-type-size     variant `_last`: 0 bytes
print-type-size type: `cgemm_kernel::KernelAvx2`: 0 bytes, alignment: 1 bytes
print-type-size type: `cgemm_kernel::KernelFallback`: 0 bytes, alignment: 1 bytes
print-type-size type: `cgemm_kernel::KernelFma`: 0 bytes, alignment: 1 bytes
print-type-size type: `dgemm_kernel::KernelAvx`: 0 bytes, alignment: 1 bytes
print-type-size type: `dgemm_kernel::KernelFallback`: 0 bytes, alignment: 1 bytes
print-type-size type: `dgemm_kernel::KernelFma`: 0 bytes, alignment: 1 bytes
print-type-size type: `dgemm_kernel::KernelFmaAvx2`: 0 bytes, alignment: 1 bytes
print-type-size type: `dgemm_kernel::KernelSse2`: 0 bytes, alignment: 1 bytes
print-type-size type: `gemm::CGemmOption`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Standard`: 0 bytes
print-type-size type: `kernel::U2`: 0 bytes, alignment: 1 bytes
print-type-size type: `kernel::U4`: 0 bytes, alignment: 1 bytes
print-type-size type: `kernel::U8`: 0 bytes, alignment: 1 bytes
print-type-size type: `sgemm_kernel::KernelAvx`: 0 bytes, alignment: 1 bytes
print-type-size type: `sgemm_kernel::KernelFallback`: 0 bytes, alignment: 1 bytes
print-type-size type: `sgemm_kernel::KernelFma`: 0 bytes, alignment: 1 bytes
print-type-size type: `sgemm_kernel::KernelFmaAvx2`: 0 bytes, alignment: 1 bytes
print-type-size type: `sgemm_kernel::KernelSse2`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `threading::ThreadPool`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86::AvxMulAdd`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86::FusedMulAdd`: 0 bytes, alignment: 1 bytes
print-type-size type: `zgemm_kernel::KernelAvx2`: 0 bytes, alignment: 1 bytes
print-type-size type: `zgemm_kernel::KernelFallback`: 0 bytes, alignment: 1 bytes
print-type-size type: `zgemm_kernel::KernelFma`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:387:23: 387:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matrixmultiply-0.3.9/src/gemm.rs:396:37: 396:42}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/rustc/5e17a2a91dd7dbefd8b4a1087c2e42257457deeb/library/std/src/sys/thread_local/native/mod.rs:97:21: 97:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:471:1881: 471:1883}`: 320 bytes, alignment: 8 bytes
print-type-size     end padding: 320 bytes
print-type-size type: `peg::RuleResult<ast::Item>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 312 bytes
print-type-size         field `.1`: 304 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<ast::Rule>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 312 bytes
print-type-size         field `.1`: 304 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `ast::Item`: 304 bytes, alignment: 8 bytes
print-type-size     variant `Rule`: 304 bytes
print-type-size         field `.0`: 304 bytes
print-type-size     variant `Use`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `ast::Rule`: 304 bytes, alignment: 8 bytes
print-type-size     field `.params`: 24 bytes
print-type-size     field `.ty_params`: 24 bytes
print-type-size     field `.ret_type`: 32 bytes
print-type-size     field `.where_clause`: 32 bytes
print-type-size     field `.doc`: 32 bytes
print-type-size     field `.visibility`: 32 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.expr`: 96 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.no_eof`: 1 bytes
print-type-size     field `.cache`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:927:64: 927:66}`: 304 bytes, alignment: 8 bytes
print-type-size     end padding: 304 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.data`: 192 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3017:66: 3017:68}`: 264 bytes, alignment: 8 bytes
print-type-size     end padding: 264 bytes
print-type-size type: `peg::RuleResult<ast::Grammar>`: 200 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 200 bytes
print-type-size         field `.1`: 192 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `translate::Context<'_>`: 200 bytes, alignment: 8 bytes
print-type-size     field `.input_ty`: 32 bytes
print-type-size     field `.parse_state_ty`: 32 bytes
print-type-size     field `.extra_args_call`: 32 bytes
print-type-size     field `.extra_args_def`: 32 bytes
print-type-size     field `.rules`: 8 bytes
print-type-size     field `.rules_from_args`: 48 bytes
print-type-size     field `.grammar_lifetime_params`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3079:66: 3079:68}`: 200 bytes, alignment: 8 bytes
print-type-size     end padding: 200 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 176 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ast::Grammar`: 192 bytes, alignment: 8 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.lifetime_params`: 24 bytes
print-type-size     field `.input_type`: 32 bytes
print-type-size     field `.doc`: 32 bytes
print-type-size     field `.visibility`: 32 bytes
print-type-size     field `.name`: 24 bytes
print-type-size type: `std::result::Result<ast::Grammar, peg::error::ParseError<tokens::Sp>>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:116:1686: 116:1688}`: 192 bytes, alignment: 8 bytes
print-type-size     end padding: 192 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3122:444: 3122:446}`: 168 bytes, alignment: 8 bytes
print-type-size     end padding: 168 bytes
print-type-size type: `peg::RuleResult<ast::TaggedExpr>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 128 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 120 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `ast::TaggedExpr`: 120 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 96 bytes
print-type-size     field `.name`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<ast::TaggedExpr>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<ast::TaggedExpr>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::option::Option<ast::TaggedExpr>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:2933:34: 2933:36}`: 120 bytes, alignment: 8 bytes
print-type-size     end padding: 120 bytes
print-type-size type: `peg::RuleResult<ast::RuleArg>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 104 bytes
print-type-size         field `.1`: 96 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<ast::SpannedExpr>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 104 bytes
print-type-size         field `.1`: 96 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenStream, proc_macro2::TokenStream, proc_macro2::TokenStream, &proc_macro2::Group)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<peg::RuleResult<ast::SpannedExpr>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:2966:46: 2966:48}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3147:299: 3147:301}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3356:46: 3356:48}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3389:54: 3389:56}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3430:58: 3430:60}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3572:823: 3572:825}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `analysis::GrammarAnalysis<'_>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.left_recursion`: 24 bytes
print-type-size     field `.loop_nullability`: 24 bytes
print-type-size     field `.rules`: 48 bytes
print-type-size type: `ast::RuleArg`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Peg`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Rust`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `ast::SpannedExpr`: 96 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 88 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<ast::RuleArg>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<ast::SpannedExpr>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<ast::RuleArg>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<ast::SpannedExpr>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::option::Option<ast::SpannedExpr>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3763:4815: 3763:4817}`: 96 bytes, alignment: 8 bytes
print-type-size     end padding: 96 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3798:72: 3798:74}`: 96 bytes, alignment: 8 bytes
print-type-size     end padding: 96 bytes
print-type-size type: `ast::Expr`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `RuleExpr`: 87 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 32 bytes
print-type-size         field `.2`: 24 bytes
print-type-size     variant `Repeat`: 87 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.sep`: 8 bytes, alignment: 8 bytes
print-type-size         field `.inner`: 8 bytes
print-type-size         field `.bound`: 64 bytes
print-type-size     variant `MethodExpr`: 63 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size         field `.1`: 32 bytes
print-type-size     variant `ActionExpr`: 55 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.1`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `LiteralExpr`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `PatternExpr`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `CustomExpr`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `ChoiceExpr`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `FailExpr`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `PrecedenceExpr`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.levels`: 24 bytes, alignment: 8 bytes
print-type-size     variant `OptionalExpr`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PosAssertExpr`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `NegAssertExpr`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MatchStrExpr`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `QuietExpr`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MarkerExpr`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `PositionExpr`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3700:1491: 3700:1493}`: 88 bytes, alignment: 8 bytes
print-type-size     end padding: 88 bytes
print-type-size type: `peg::RuleResult<(proc_macro2::Ident, std::option::Option<std::vec::Vec<proc_macro2::TokenStream>>, std::vec::Vec<ast::RuleParam>)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 80 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 72 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `std::cell::RefCell<proc_macro::bridge::client::Bridge<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `peg::RuleResult<ast::BoundedRepeat>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 72 bytes
print-type-size         field `.1`: 64 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<ast::RuleParam>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 72 bytes
print-type-size         field `.1`: 64 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::Bridge<'_>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::collections::btree_map::IntoIter<&str, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::hash::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:461:718: 461:720}`: 72 bytes, alignment: 8 bytes
print-type-size     end padding: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `ast::BoundedRepeat`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Both`: 64 bytes
print-type-size         field `.0`: 32 bytes
print-type-size         field `.1`: 32 bytes
print-type-size     variant `Exact`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Plus`: 0 bytes
print-type-size type: `ast::RuleParam`: 64 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 40 bytes
print-type-size     field `.name`: 24 bytes
print-type-size type: `peg::RuleResult<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 64 bytes
print-type-size         field `.1`: 56 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<ast::PrecedenceOperator>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 64 bytes
print-type-size         field `.1`: 56 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3260:62: 3260:64}`: 64 bytes, alignment: 8 bytes
print-type-size     end padding: 64 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:815:62: 815:64}`: 64 bytes, alignment: 8 bytes
print-type-size     end padding: 64 bytes
print-type-size type: `analysis::LeftRecursionVisitor<'_>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stack`: 24 bytes
print-type-size     field `.errors`: 24 bytes
print-type-size     field `.rules`: 8 bytes
print-type-size type: `ast::PrecedenceOperator`: 56 bytes, alignment: 8 bytes
print-type-size     field `.elements`: 24 bytes
print-type-size     field `.action`: 24 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 24 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<ast::PrecedenceOperator>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<ast::PrecedenceOperator>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:2875:42: 2875:44}`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:321:88: 321:90}`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3942:42: 3942:44}`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `grammar::peg::ParseState<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.primary_cache`: 48 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, &ast::Rule, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, (), std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, bool, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::map::HashMap<usize, peg::RuleResult<ast::SpannedExpr>, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::set::HashSet<std::string::String, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size type: `peg::RuleResult<ast::RuleParamTy>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 48 bytes
print-type-size         field `.1`: 40 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::error::ErrorState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.max_err_pos`: 8 bytes
print-type-size     field `.suppress_fail`: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size     field `.reparsing_on_error`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::HashMap<std::string::String, &ast::Rule>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::collections::HashMap<std::string::String, bool>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::collections::HashMap<usize, peg::RuleResult<ast::SpannedExpr>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::collections::HashSet<std::string::String>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&ast::RuleParam, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:201:28: 201:35}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:201:28: 201:35}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `ast::RuleParamTy`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Rust`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Rule`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, &ast::Rule)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, bool)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(usize, peg::RuleResult<ast::SpannedExpr>)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, std::string::String, &ast::Rule>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, std::string::String, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, std::string::String, &ast::Rule>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, std::string::String, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `peg::RuleResult<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 40 bytes
print-type-size         field `.1`: 32 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<proc_macro2::TokenStream>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 40 bytes
print-type-size         field `.1`: 32 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::error::ParseError<tokens::Sp>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.location`: 16 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, std::string::String, &ast::Rule>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, std::string::String, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, std::string::String, &ast::Rule>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, std::string::String, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:201:28: 201:35}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}::{closure#0}}>::{closure#0}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}::{closure#0}}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}::{closure#0}}>::{closure#0}}>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3763:2833: 3763:2835}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:433:24: 433:30}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&ast::RuleArg, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:611:22: 611:27}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleArg>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:611:22: 611:27}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `analysis::LeftRecursionError`: 32 bytes, alignment: 8 bytes
print-type-size     field `.path`: 24 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `analysis::LoopNullabilityVisitor<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.errors`: 24 bytes
print-type-size     field `.rule_nullability`: 8 bytes
print-type-size type: `core::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `hashbrown::raw::FullBucketsIndices`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.group_first_index`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, &ast::Rule)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, bool)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(usize, peg::RuleResult<ast::SpannedExpr>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, &ast::Rule)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, bool)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(usize, peg::RuleResult<ast::SpannedExpr>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTableInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `peg::RuleResult<ast::PrecedenceLevel>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<proc_macro2::Group>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<proc_macro2::Literal>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<proc_macro2::Group>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<proc_macro2::Ident>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<std::vec::Vec<ast::RuleParam>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<std::vec::Vec<proc_macro2::TokenStream>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<(proc_macro2::Ident, proc_macro2::TokenStream)>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::Item>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::PrecedenceLevel>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::PrecedenceOperator>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::RuleArg>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::RuleParam>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::SpannedExpr>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<ast::TaggedExpr>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<proc_macro2::TokenStream>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `proc_macro2::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::TokenTree`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::RuleArg>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:611:22: 611:27}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::SpannedExpr>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:645:22: 645:28}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step_minus_one`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, ast::PrecedenceLevel>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, ast::PrecedenceOperator>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, ast::RuleArg>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, ast::SpannedExpr>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, ast::TaggedExpr>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 32 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTable<(std::string::String, ())>, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::IntoIter<ast::SpannedExpr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<ast::TaggedExpr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `tokens::Token`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Begin`: 32 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size     variant `End`: 9 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:2816:30: 2816:32}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3193:42: 3193:44}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3533:295: 3533:297}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3582:571: 3582:573}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3645:78: 3645:80}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3739:182: 3739:184}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3761:334: 3761:336}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3763:3884: 3763:3886}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3856:64: 3856:66}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:470:855: 470:857}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:710:54: 710:56}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:755:64: 755:66}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:914:60: 914:62}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `ast::PrecedenceLevel`: 24 bytes, alignment: 8 bytes
print-type-size     field `.operators`: 24 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `peg::error::ExpectedSet`: 24 bytes, alignment: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 24 bytes, alignment: 8 bytes
print-type-size     variant `StaticStr`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeSet<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, ast::PrecedenceLevel>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, ast::PrecedenceOperator>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, ast::RuleArg>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, ast::SpannedExpr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, ast::TaggedExpr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<ast::PrecedenceLevel>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<ast::SpannedExpr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<ast::TaggedExpr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<ast::PrecedenceLevel>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Group>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<ast::RuleParam>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<proc_macro2::TokenStream>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::hash::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Alive`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::vec::Vec<()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<analysis::LeftRecursionError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<analysis::LoopNullabilityError>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Item>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::PrecedenceLevel>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::PrecedenceOperator>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::RuleArg>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::RuleParam>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::SpannedExpr>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::TaggedExpr>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<tokens::Token>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `tokens::FlatTokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.tokens`: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:1897:76: 1897:78}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:230:76: 230:78}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:2910:68: 2910:70}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:372:76: 372:78}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3897:22: 3897:24}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:4086:64: 4086:66}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:442:1159: 442:1161}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:868:72: 868:74}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:885:68: 885:70}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:201:28: 201:35}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:33:14: 33:35}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:42:14: 42:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, analysis::LeftRecursionError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:131:14: 131:19}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, analysis::LoopNullabilityError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:138:18: 138:22}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleArg>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:611:22: 611:27}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:201:28: 201:35}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:357:14: 357:21}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&(proc_macro2::Ident, proc_macro2::TokenStream), proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:33:14: 33:35}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:33:14: 33:35}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&(proc_macro2::Ident, proc_macro2::TokenStream), proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:42:14: 42:30}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:42:14: 42:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&analysis::LeftRecursionError, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:131:14: 131:19}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, analysis::LeftRecursionError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:131:14: 131:19}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&analysis::LoopNullabilityError, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:138:18: 138:22}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, analysis::LoopNullabilityError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:138:18: 138:22}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&ast::RuleParam, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:357:14: 357:21}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:357:14: 357:21}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&ast::SpannedExpr, proc_macro2::TokenStream, proc_macro2::TokenStream, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:645:22: 645:28}, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:433:46: 433:67}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:33:14: 33:35}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:42:14: 42:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, analysis::LeftRecursionError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:131:14: 131:19}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, analysis::LoopNullabilityError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:138:18: 138:22}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleArg>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:611:22: 611:27}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:201:28: 201:35}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:357:14: 357:21}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, ast::PrecedenceLevel, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, ast::PrecedenceOperator, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, ast::RuleArg, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, ast::SpannedExpr, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, ast::TaggedExpr, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, std::string::String, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<analysis::LeftRecursionError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<analysis::LoopNullabilityError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::PrecedenceLevel>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::PrecedenceOperator>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::RuleArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::RuleParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::SpannedExpr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::TaggedExpr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<tokens::Token>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::control::group::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::control::group::sse2::Group::static_empty::AlignedTags`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.tags`: 16 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, std::string::String, &ast::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, std::string::String, bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<(usize, &mut hashbrown::raw::RawTable<(std::string::String, ())>), {closure@hashbrown::raw::RawTable<(std::string::String, ())>::clone_from_impl::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size     field `.dropfn`: 0 bytes
print-type-size type: `peg::RuleResult<&tokens::Token>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Matched`: 8 bytes
print-type-size         field `.1`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Matched`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Matched`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<ast::Cache>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Matched`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 16 bytes, alignment: 4 bytes
print-type-size     field `.FreeFunctions`: 4 bytes
print-type-size     field `.TokenStream`: 4 bytes
print-type-size     field `.SourceFile`: 4 bytes
print-type-size     field `.Span`: 4 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, std::string::String, &ast::Rule>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, std::string::String, bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::hash::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<'_, ast::Item>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/ast.rs:16:38: 16:44}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>, {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:33:14: 33:35}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:42:14: 42:30}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, analysis::LeftRecursionError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:131:14: 131:19}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, analysis::LoopNullabilityError>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:138:18: 138:22}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:357:14: 357:21}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, std::string::String>, {closure@std::str::join_generic_copy<str, u8, std::string::String>::{closure#0}::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, std::string::String>, {closure@std::str::join_generic_copy<str, u8, std::string::String>::{closure#1}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &ast::PrecedenceLevel)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &ast::PrecedenceOperator)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &ast::RuleArg)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &ast::SpannedExpr)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &ast::TaggedExpr)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<*const ()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[(proc_macro2::Ident, proc_macro2::TokenStream)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[analysis::LeftRecursionError]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[analysis::LoopNullabilityError]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::Item]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::PrecedenceLevel]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::PrecedenceOperator]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::RuleArg]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::RuleParam]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::SpannedExpr]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::TaggedExpr]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*const (), std::thread::AccessError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(std::string::String, ())>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(usize, peg::RuleResult<ast::SpannedExpr>)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, analysis::LeftRecursionError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, analysis::LoopNullabilityError>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::PrecedenceLevel>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::PrecedenceOperator>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::RuleArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::RuleParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::SpannedExpr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::TaggedExpr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `tokens::Sp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:611:22: 611:27}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:645:22: 645:28}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, &ast::Rule)>::find<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, &ast::Rule>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, &ast::Rule)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, &ast::Rule, std::hash::RandomState>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::find<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, ()>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, ()>::{closure#0}}, {closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, bool)>::find<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, bool>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, bool)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, bool, std::hash::RandomState>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(usize, peg::RuleResult<ast::SpannedExpr>)>::find<{closure@hashbrown::map::equivalent_key<usize, usize, peg::RuleResult<ast::SpannedExpr>>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(usize, peg::RuleResult<ast::SpannedExpr>)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<usize, usize, peg::RuleResult<ast::SpannedExpr>>::{closure#0}}, {closure@hashbrown::map::make_hasher<usize, peg::RuleResult<ast::SpannedExpr>, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}::{closure#0}}>::{closure#0}::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, &str, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, ast::SpannedExpr, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, ast::TaggedExpr, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, alloc::collections::btree::set_val::SetValZST>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, &ast::Rule)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, bool)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(usize, peg::RuleResult<ast::SpannedExpr>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::InsertSlot`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<'_, proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::state::set::RestoreOnDrop`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<ast::SpannedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ast::SpannedExpr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &ast::PrecedenceLevel>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &ast::PrecedenceOperator>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &ast::RuleArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &ast::SpannedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &ast::TaggedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&&ast::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::string::String, &ast::Rule)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::string::String, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::string::String, bool)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, peg::RuleResult<ast::SpannedExpr>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::PrecedenceLevel>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::PrecedenceOperator>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Rule>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::RuleArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::RuleParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::SpannedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::TaggedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<*const ()>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&peg::RuleResult<ast::SpannedExpr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ast::SpannedExpr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<proc_macro2::TokenStream>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&tokens::Token>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, &ast::Rule)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, bool)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(usize, peg::RuleResult<ast::SpannedExpr>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ast::SpannedExpr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<unsafe fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, &ast::Rule)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, bool)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(usize, peg::RuleResult<ast::SpannedExpr>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<analysis::LeftRecursionError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<analysis::LoopNullabilityError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::PrecedenceLevel>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::PrecedenceOperator>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::RuleArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::RuleParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::SpannedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::TaggedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ast::SpannedExpr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<ast::SpannedExpr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ast::SpannedExpr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<*const ()>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ast::SpannedExpr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/analysis.rs:252:62: 252:67}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/analysis.rs:96:35: 96:48}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:1160:56: 1160:58}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3563:670: 3563:672}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3763:1800: 3763:1802}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3763:829: 3763:831}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:433:46: 433:67}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:445:31: 445:43}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:465:33: 465:35}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:713:37: 713:42}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<std::string::String, (), std::hash::RandomState> as std::iter::Extend<(std::string::String, ())>>::extend<std::iter::Map<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>, {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::token_stream::IntoIter>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::option::Option<proc_macro2::TokenTree>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<proc_macro2::token_stream::IntoIter, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, &ast::Rule>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, ()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, bool>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<usize, usize, peg::RuleResult<ast::SpannedExpr>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, &ast::Rule, std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, bool, std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<usize, peg::RuleResult<ast::SpannedExpr>, std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, &ast::Rule)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, &ast::Rule, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, bool)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, bool, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(usize, peg::RuleResult<ast::SpannedExpr>)>::reserve_rehash<{closure@hashbrown::map::make_hasher<usize, peg::RuleResult<ast::SpannedExpr>, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, &ast::Rule, std::hash::RandomState>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, bool, std::hash::RandomState>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(std::string::String, ()), {closure@<hashbrown::map::HashMap<std::string::String, (), std::hash::RandomState> as std::iter::Extend<(std::string::String, ())>>::extend<std::iter::Map<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>, {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::token_stream::IntoIter>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::option::Option<proc_macro2::TokenTree>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<proc_macro2::token_stream::IntoIter, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&ast::RuleParam, std::string::String, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}, {closure@std::iter::adapters::map::map_fold<std::string::String, (std::string::String, ()), (), {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(std::string::String, ()), {closure@<hashbrown::map::HashMap<std::string::String, (), std::hash::RandomState> as std::iter::Extend<(std::string::String, ())>>::extend<std::iter::Map<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>, {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, {closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<proc_macro2::token_stream::IntoIter, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<std::string::String, (std::string::String, ()), (), {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(std::string::String, ()), {closure@<hashbrown::map::HashMap<std::string::String, (), std::hash::RandomState> as std::iter::Extend<(std::string::String, ())>>::extend<std::iter::Map<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>, {closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &std::string::String, usize, usize, std::option::Option<usize>, {closure@std::str::join_generic_copy<str, u8, std::string::String>::{closure#0}::{closure#0}}, fn(usize, usize) -> std::option::Option<usize> {core::num::<impl usize>::checked_add}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::thread::LocalKey<std::cell::Cell<*const ()>>::replace::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `analysis::LoopNullabilityError`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `quote::__private::get_span::GetSpan<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `quote::__private::get_span::GetSpanBase<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `quote::__private::get_span::GetSpanInner<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroU16Inner`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::num::NonZero<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u16>>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ast::Cache`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Simple`: 0 bytes
print-type-size     variant `Recursive`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `hashbrown::control::tag::Tag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<ast::Cache>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(proc_macro2::Ident, proc_macro2::TokenStream)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&analysis::LeftRecursionError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&analysis::LoopNullabilityError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::PrecedenceLevel>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::PrecedenceOperator>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::RuleArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::RuleParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::SpannedExpr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::TaggedExpr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, &ast::Rule)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, bool)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, peg::RuleResult<ast::SpannedExpr>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<analysis::LeftRecursionError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<analysis::LoopNullabilityError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::PrecedenceLevel>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::PrecedenceOperator>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::RuleArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::RuleParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::SpannedExpr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::TaggedExpr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<core::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(&str, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ast::SpannedExpr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<tokens::Token>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/ast.rs:16:38: 16:44}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3293:64: 3293:66}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3827:38: 3827:50}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:3966:37: 3966:49}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:4083:53: 4083:65}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:4102:37: 4102:49}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:4112:14: 4112:26}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:4125:14: 4125:26}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:4138:14: 4138:26}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:525:50: 525:52}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:574:62: 574:64}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:605:89: 605:91}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:632:80: 632:82}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/grammar.rs:661:81: 661:83}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/tokens.rs:127:17: 127:19}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/tokens.rs:128:17: 128:20}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:131:14: 131:19}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:138:18: 138:22}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:164:63: 164:65}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:191:28: 191:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:217:55: 217:57}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:33:14: 33:35}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:349:55: 349:57}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:357:14: 357:21}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:42:14: 42:30}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<hashbrown::set::HashSet<std::string::String, std::hash::RandomState> as std::iter::Extend<std::string::String>>::extend<std::iter::Map<std::slice::Iter<'_, ast::RuleParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-macros-0.8.5/translate.rs:232:40: 232:47}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, &ast::Rule)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, &ast::Rule, std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::clone_from_impl::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, bool)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, bool, std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(usize, peg::RuleResult<ast::SpannedExpr>)>::reserve_rehash<{closure@hashbrown::map::make_hasher<usize, peg::RuleResult<ast::SpannedExpr>, std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {parser}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::state::BRIDGE_STATE::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::KEYS::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::str::join_generic_copy<str, u8, std::string::String>::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::str::join_generic_copy<str, u8, std::string::String>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<64>`: 256 bytes, alignment: 256 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<32>`: 128 bytes, alignment: 128 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `__private::ser::content::Content`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TupleVariant`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size         field `.3`: 24 bytes
print-type-size     variant `StructVariant`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size         field `.3`: 24 bytes
print-type-size     variant `NewtypeVariant`: 47 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size         field `.3`: 8 bytes
print-type-size     variant `TupleStruct`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `Struct`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `UnitVariant`: 39 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NewtypeStruct`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Seq`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnitStruct`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `I32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `F32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `U16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `I16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `U8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `std::option::Option<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::simd::Simd<i8, 64>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<16>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::simd::Swizzle::swizzle::{constant#0}::SimdShuffleIdx<16>`: 64 bytes, alignment: 64 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `__private::ser::AdjacentlyTaggedEnumVariant`: 40 bytes, alignment: 8 bytes
print-type-size     field `.enum_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size     field `.variant_index`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#3}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `__private::de::content::Content<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `ByteBuf`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Seq`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Str`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Newtype`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `I32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `F32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `U16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `I16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `U8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `__private::de::content::InternallyTaggedUnitVisitor<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.type_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size type: `__private::de::content::TagContentOtherFieldVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tag`: 16 bytes
print-type-size     field `.content`: 16 bytes
print-type-size type: `__private::de::content::TagOrContent<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Content`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size type: `__private::de::content::TagOrContentFieldVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tag`: 16 bytes
print-type-size     field `.content`: 16 bytes
print-type-size type: `__private::de::content::UntaggedUnitVisitor<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.type_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 32>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::simd::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx<8>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#2}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `de::Unexpected<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Str`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Unsigned`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Signed`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `Option`: 0 bytes
print-type-size     variant `NewtypeStruct`: 0 bytes
print-type-size     variant `Seq`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size     variant `NewtypeVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size type: `format::Buf<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `std::borrow::Cow<'_, str>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Borrowed`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, &str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(&str, __private::ser::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(__private::ser::content::Content, __private::ser::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<__private::de::content::Content<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<__private::ser::content::Content>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `{closure@std::iter::DoubleEndedIterator::rfind::check<usize, {closure@std::str::pattern::simd_contains::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `<de::WithDecimalPoint as std::fmt::Display>::fmt::LookForDecimalPoint<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size     field `.has_decimal_point`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `__private::de::content::TagOrContentVisitor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&str, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(__private::ser::content::Content, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<__private::de::content::Content<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<__private::ser::content::Content>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `de::OneOf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.names`: 16 bytes
print-type-size type: `de::value::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.err`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::simd::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::WithDecimalPoint`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::impls::StringInPlaceVisitor<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::value::ExpectedInMap`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::value::ExpectedInSeq`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn de::Expected>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<de::WithDecimalPoint>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::simd::Simd<i8, 8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/src/private/de.rs:2744:51: 2744:57}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<&str as core::slice::cmp::SliceContains>::slice_contains::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::any::check<&[u8], {closure@std::str::pattern::simd_contains::{closure#1}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::str::pattern::simd_contains::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `__private::de::content::TagContentOtherField`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size     variant `Content`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `__private::de::content::TagOrContentField`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size     variant `Content`: 0 bytes
print-type-size type: `__private::ser::Unsupported`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Boolean`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `String`: 0 bytes
print-type-size     variant `ByteArray`: 0 bytes
print-type-size     variant `Optional`: 0 bytes
print-type-size     variant `Sequence`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::collections::Bound<T>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size     variant `Included`: 0 bytes
print-type-size     variant `Excluded`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::IpAddrKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V4`: 0 bytes
print-type-size     variant `V6`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::SocketAddrKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V4`: 0 bytes
print-type-size     variant `V6`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::result::Result<T, E>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `de::impls::OsStringKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unix`: 0 bytes
print-type-size     variant `Windows`: 0 bytes
print-type-size type: `de::impls::range::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Start`: 0 bytes
print-type-size     variant `End`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<i8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<i8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 1>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<i8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::collections::Bound<T>>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::IpAddrKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::SocketAddrKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::result::Result<T, E>>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::OsStringKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::range::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::range_from::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::range_to::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::borrow_cow_bytes::CowBytesVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::borrow_cow_str::CowStrVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::content::ContentVisitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `__private::doc::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `actually_private::T`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::core_simd::swizzle::<impl std::simd::Simd<T, N>>::resize::Resize<16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::ignored_any::IgnoredAny`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for f32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for f64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i128>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i16>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i8>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for isize>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::EnumVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::EnumVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<i128>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<i16>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<i32>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<i64>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<i8>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<isize>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<u128>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<u16>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<u32>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<u64>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<u8>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZero<usize>>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<i128>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<i16>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<i32>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<i64>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<i8>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<isize>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<u128>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<u16>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<u32>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<u64>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<u8>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::Saturating<usize>>::deserialize::SaturatingVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::DurationVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::DurationVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u128>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u16>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u8>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for usize>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::BoolVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::BytesVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::CStringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::CharVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::OsStringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::PathBufVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::PathVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::StrVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::StringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::UnitVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::range_from::Field`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Start`: 0 bytes
print-type-size type: `de::impls::range_to::Field`: 0 bytes, alignment: 1 bytes
print-type-size     variant `End`: 0 bytes
print-type-size type: `ser::impossible::Impossible<(), std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.void`: 0 bytes
print-type-size     field `.ok`: 0 bytes
print-type-size     field `.error`: 0 bytes
print-type-size type: `ser::impossible::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(__private::ser::content::Content, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::de::content::Content<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::de::content::TagOrContent<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::ser::content::Content>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn de::Expected>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ser::impossible::Impossible<(), std::fmt::Error>, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<T, N>::splat::splat_rt::Splat`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::MatchOnly`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::RejectAndMatch`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `Complex<i128>`: 32 bytes, alignment: 16 bytes
print-type-size     field `.re`: 16 bytes
print-type-size     field `.im`: 16 bytes
print-type-size type: `Complex<u128>`: 32 bytes, alignment: 16 bytes
print-type-size     field `.re`: 16 bytes
print-type-size     field `.im`: 16 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `Complex<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.re`: 8 bytes
print-type-size     field `.im`: 8 bytes
print-type-size type: `Complex<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.re`: 8 bytes
print-type-size     field `.im`: 8 bytes
print-type-size type: `Complex<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.re`: 8 bytes
print-type-size     field `.im`: 8 bytes
print-type-size type: `Complex<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.re`: 8 bytes
print-type-size     field `.im`: 8 bytes
print-type-size type: `Complex<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.re`: 8 bytes
print-type-size     field `.im`: 8 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `Complex<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.re`: 4 bytes
print-type-size     field `.im`: 4 bytes
print-type-size type: `Complex<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.re`: 4 bytes
print-type-size     field `.im`: 4 bytes
print-type-size type: `Complex<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.re`: 4 bytes
print-type-size     field `.im`: 4 bytes
print-type-size type: `core::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `Complex<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     field `.re`: 2 bytes
print-type-size     field `.im`: 2 bytes
print-type-size type: `Complex<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     field `.re`: 2 bytes
print-type-size     field `.im`: 2 bytes
print-type-size type: `Complex<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.re`: 1 bytes
print-type-size     field `.im`: 1 bytes
print-type-size type: `Complex<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.re`: 1 bytes
print-type-size     field `.im`: 1 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::rt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `ExtendedGcd<i128>`: 48 bytes, alignment: 16 bytes
print-type-size     field `.gcd`: 16 bytes
print-type-size     field `.x`: 16 bytes
print-type-size     field `.y`: 16 bytes
print-type-size type: `ExtendedGcd<u128>`: 48 bytes, alignment: 16 bytes
print-type-size     field `.gcd`: 16 bytes
print-type-size     field `.x`: 16 bytes
print-type-size     field `.y`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u128>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `ExtendedGcd<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `ExtendedGcd<isize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `ExtendedGcd<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `ExtendedGcd<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/roots.rs:262:32: 262:39}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ExtendedGcd<i32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.gcd`: 4 bytes
print-type-size     field `.x`: 4 bytes
print-type-size     field `.y`: 4 bytes
print-type-size type: `ExtendedGcd<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.gcd`: 4 bytes
print-type-size     field `.x`: 4 bytes
print-type-size     field `.y`: 4 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<u32>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/roots.rs:309:32: 309:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/roots.rs:373:32: 373:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `ExtendedGcd<i16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `.gcd`: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size type: `ExtendedGcd<u16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `.gcd`: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Continue`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `ExtendedGcd<i8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.gcd`: 1 bytes
print-type-size     field `.x`: 1 bytes
print-type-size     field `.y`: 1 bytes
print-type-size type: `ExtendedGcd<u8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.gcd`: 1 bytes
print-type-size     field `.x`: 1 bytes
print-type-size     field `.y`: 1 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<syn::GenericParam, std::convert::Infallible>>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<syn::GenericParam, std::convert::Infallible>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size type: `std::ops::ControlFlow<syn::GenericParam>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::IntoIter<syn::GenericParam>`: 456 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 456 bytes
print-type-size type: `std::option::Item<syn::GenericParam>`: 456 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 456 bytes
print-type-size type: `std::option::Option<syn::GenericParam>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ConstParam`: 456 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.default`: 168 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `syn::GenericParam`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Const`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Type`: 328 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `syn::TypeParam`: 320 bytes, alignment: 8 bytes
print-type-size     field `.default`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<syn::WherePredicate, std::convert::Infallible>>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<syn::WherePredicate, std::convert::Infallible>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size type: `std::ops::ControlFlow<syn::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::IntoIter<syn::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 312 bytes
print-type-size type: `std::option::Item<syn::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 312 bytes
print-type-size type: `std::option::Option<syn::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::AssocType`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Field`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.mutability`: 0 bytes
print-type-size type: `syn::GenericArgument`: 312 bytes, alignment: 8 bytes
print-type-size     variant `AssocType`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `AssocConst`: 264 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 256 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 232 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Const`: 176 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Constraint`: 128 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `syn::PredicateType`: 312 bytes, alignment: 8 bytes
print-type-size     field `.bounded_ty`: 224 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WherePredicate`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Lifetime`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size type: `syn::BareFnArg`: 280 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 32 bytes
print-type-size type: `syn::Variant`: 280 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.discriminant`: 176 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `attribute::BitcodeAttrs`: 272 bytes, alignment: 8 bytes
print-type-size     field `.attr_type`: 224 bytes
print-type-size     field `.crate_name`: 48 bytes
print-type-size type: `std::ops::ControlFlow<attribute::BitcodeAttrs, std::convert::Infallible>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size type: `std::ops::ControlFlow<attribute::BitcodeAttrs>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<attribute::BitcodeAttrs, std::convert::Infallible>>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<attribute::BitcodeAttrs>, std::convert::Infallible>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<attribute::BitcodeAttrs>>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::ControlFlow<attribute::BitcodeAttrs>, std::convert::Infallible>>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, attribute::BitcodeAttrs>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<attribute::BitcodeAttrs>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attribute::BitcodeAttrs, syn::Error>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::AssocConst`: 256 bytes, alignment: 8 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.value`: 168 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Attribute`: 248 bytes, alignment: 8 bytes
print-type-size     field `.meta`: 224 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 240 bytes, alignment: 8 bytes
print-type-size     field `.data`: 72 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `attribute::AttrType`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Field`: 224 bytes
print-type-size         field `.bound_type`: 224 bytes
print-type-size     variant `Derive`: 0 bytes
print-type-size     variant `Variant`: 0 bytes
print-type-size type: `attribute::BitcodeAttr`: 224 bytes, alignment: 8 bytes
print-type-size     variant `BoundType`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `CrateAlias`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, attribute::BitcodeAttr>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Meta>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::IntoIter<syn::Meta>`: 224 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 224 bytes
print-type-size type: `std::option::Item<syn::Meta>`: 224 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 224 bytes
print-type-size type: `std::option::Option<syn::Meta>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attribute::BitcodeAttr, syn::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::Meta, syn::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::Type, syn::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::FieldValue`: 224 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 168 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.member`: 24 bytes
print-type-size type: `syn::Meta`: 224 bytes, alignment: 8 bytes
print-type-size     variant `NameValue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `List`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `syn::MetaNameValue`: 224 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.value`: 168 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Type`: 224 bytes, alignment: 8 bytes
print-type-size     variant `BareFn`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Array`: 200 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `syn::TypeBareFn`: 224 bytes, alignment: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.variadic`: 80 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, [proc_macro2::TokenStream; 6]>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<[proc_macro2::TokenStream; 6]>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.0`: 192 bytes
print-type-size type: `std::result::Result<[proc_macro2::TokenStream; 6], syn::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::TypeArray`: 192 bytes, alignment: 8 bytes
print-type-size     field `.len`: 168 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::option::Option<(syn::token::Eq, syn::Expr)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Expr`: 168 bytes, alignment: 8 bytes
print-type-size     variant `MethodCall`: 168 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Call`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Binary`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Index`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Cast`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Unary`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Async`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Await`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Const`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `ForLoop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Infer`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `RawAddr`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Repeat`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Try`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `TryBlock`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Unsafe`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `While`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Yield`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprStruct`: 168 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `syn::ExprMethodCall`: 160 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.turbofish`: 56 bytes
print-type-size     field `.method`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, [proc_macro2::TokenStream; 4]>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<[proc_macro2::TokenStream; 4]>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::result::Result<[proc_macro2::TokenStream; 4], syn::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `bound::with_bound::FindTyParams<'_>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.associated_type_usage`: 24 bytes
print-type-size     field `.all_type_params`: 48 bytes
print-type-size     field `.relevant_type_params`: 48 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 120 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size type: `std::option::Option<syn::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Constraint`: 120 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TraitBound`: 120 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.paren_token`: 16 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `syn::TypeParamBound`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Trait`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `PreciseCapture`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 112 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 104 bytes
print-type-size type: `std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>, std::vec::IntoIter<syn::Type>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:210:14: 210:26}>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 96 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>, std::vec::IntoIter<syn::Type>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.a`: 64 bytes
print-type-size     field `.b`: 32 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size type: `std::option::Option<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::LifetimeParam`: 96 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size type: `syn::MetaList`: 96 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>, proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::PathSegment`: 88 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::cell::RefCell<proc_macro::bridge::client::Bridge<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::option::Option<syn::BareVariadic>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::TypePath>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::BareVariadic`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.comma`: 8 bytes
print-type-size     field `.name`: 32 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::Bridge<'_>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::hash::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `syn::Data`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Union`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 72 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PredicateLifetime`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::map::IntoIter<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `hashbrown::raw::RawIntoIter<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.allocation`: 24 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.key`: 48 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::IntoIter<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.base`: 64 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.base`: 64 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ExprField`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.member`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ParenthesizedGenericArguments`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     variant `AngleBracketed`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Parenthesized`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 24 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.a`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size type: `std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Field>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}>, std::result::Result<std::convert::Infallible, syn::Error>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.residual`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 56 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprIndex`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unnamed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::TypeReference`: 56 bytes, alignment: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::lit::LitFloatRepr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `syn::lit::LitIntRepr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `bound::FieldBounds`: 48 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 48 bytes
print-type-size type: `hashbrown::map::HashMap<proc_macro2::Ident, (), std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::map::HashMap<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>), std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size type: `std::collections::HashMap<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::collections::HashSet<proc_macro2::Ident>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Map<std::array::drain::Drain<'_, decode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::Map<std::array::drain::Drain<'_, encode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<'_, syn::Field>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}>, std::result::Result<std::convert::Infallible, syn::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.residual`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::Path, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataEnum`: 48 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprLit`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lit`: 24 bytes
print-type-size type: `syn::ExprParen`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTuple`: 48 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&syn::Field, (), {closure@std::iter::adapters::map::map_fold<(usize, &syn::Field), proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `{closure@std::array::try_from_trusted_iterator::next<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, std::iter::Map<std::array::drain::Drain<'_, decode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}>>::{closure#0}}`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `{closure@std::array::try_from_trusted_iterator::next<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, std::iter::Map<std::array::drain::Drain<'_, encode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}>>::{closure#0}}`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `hashbrown::raw::RawIter<(proc_macro2::Ident, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::array::drain::Drain<'_, decode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::array::drain::Drain<'_, encode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 24 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}::{closure#0}}>::{closure#0}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}::{closure#0}}>::{closure#0}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}::{closure#0}}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}::{closure#0}}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}::{closure#0}}>::{closure#0}}>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}::{closure#0}}>::{closure#0}}>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<syn::Lifetime, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::lit::LitRepr`: 40 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@std::array::try_from_trusted_iterator::next<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, std::iter::Map<std::array::drain::Drain<'_, decode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}>>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@std::array::try_from_trusted_iterator::next<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, std::iter::Map<std::array::drain::Drain<'_, encode::Item>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}>>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(usize, &syn::Field), proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `core::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `hashbrown::raw::FullBucketsIndices`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.group_first_index`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTableInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `proc_macro2::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::TokenTree`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.it`: 32 bytes
print-type-size type: `std::iter::Filter<syn::punctuated::IntoIter<syn::GenericParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:208:17: 208:24}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<syn::punctuated::IntoIter<syn::WherePredicate>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:213:21: 213:32}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::Meta, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step_minus_one`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual, std::convert::Infallible>, proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<syn::Lifetime, std::convert::Infallible>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual, proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::vec::Vec<attribute::BitcodeAttrs>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::vec::Vec<std::vec::Vec<attribute::BitcodeAttrs>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::punctuated::Punctuated<syn::Meta, syn::token::Comma>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<syn::Lifetime, std::convert::Infallible>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ops::ControlFlow<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, syn::token::Colon)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<syn::Type>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<attribute::BitcodeAttrs>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<std::vec::Vec<attribute::BitcodeAttrs>>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::vec::IntoIter<&syn::TypePath>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(syn::Meta, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<syn::GenericParam>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<syn::Meta>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<syn::Type>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<syn::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<syn::WherePredicate>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `syn::Lifetime`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::VisRestricted`: 32 bytes, alignment: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `syn::Visibility`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Public`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `syn::buffer::Entry`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 32 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ident`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `End`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::GenericParam>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::Meta>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::WherePredicate>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Meta, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:101:27: 101:29}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::array::<impl [decode::Item; 4]>::try_map<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::array::<impl [encode::Item; 6]>::try_map<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:115:31: 115:37}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 24 bytes, alignment: 8 bytes
print-type-size     variant `StaticStr`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::array::Guard<'_, proc_macro2::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.array_mut`: 16 bytes
print-type-size     field `.initialized`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:179:14: 179:22}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&syn::TypePath>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::GenericParam, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::Meta, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::GenericParam>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::Meta>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::Type>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Ident, std::convert::Infallible>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<proc_macro2::Ident, std::convert::Infallible>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>, std::convert::Infallible>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>, std::convert::Infallible>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>, std::convert::Infallible>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Colon>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>, std::convert::Infallible>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout, std::alloc::Global)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<attribute::BitcodeAttrs>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::BareFnArg, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::Expr, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::Field, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::FieldValue, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::GenericArgument, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::GenericParam, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::Lifetime, &mut syn::token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::PathSegment, &mut syn::token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::Type, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::TypeParamBound, &mut syn::token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&mut syn::Variant, &mut syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&syn::PathSegment, &syn::token::PathSep>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::hash::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::token::Colon, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<syn::token::Comma, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Alive`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::vec::Vec<&syn::TypePath>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Meta, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::PathSep)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<attribute::BitcodeAttrs>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<attribute::BitcodeAttrs>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Field>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::GenericParam>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Meta>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::TypeParamBound>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::WherePredicate>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::Lit`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `CStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::TypeParen`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `syn::punctuated::Pairs<'_, syn::PathSegment, syn::token::PathSep>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::Expr, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::Field, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::FieldValue, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::GenericParam, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::Lifetime, syn::token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::PathSegment, syn::token::PathSep>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::TypeParamBound, syn::token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PairsMut<'_, syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:182:27: 182:29}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:204:30: 204:32}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:212:30: 212:32}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::array::<impl [decode::Item; 4]>::try_map<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::array::<impl [encode::Item; 6]>::try_map<std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>, {closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<syn::GenericParam, {closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<syn::GenericParam, {closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::option::IntoIter<syn::GenericParam>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<syn::Meta, {closure@std::vec::Vec<syn::Meta>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Meta, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<syn::Meta, {closure@std::vec::Vec<syn::Meta>::extend_trusted<std::option::IntoIter<syn::Meta>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<syn::WherePredicate, {closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<syn::WherePredicate, {closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::option::IntoIter<syn::WherePredicate>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(syn::GenericParam, syn::token::Comma), syn::GenericParam, (), {closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}, {closure@std::iter::Iterator::for_each::call<syn::GenericParam, {closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(syn::Meta, syn::token::Comma), syn::Meta, (), {closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}, {closure@std::iter::Iterator::for_each::call<syn::Meta, {closure@std::vec::Vec<syn::Meta>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Meta, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(syn::WherePredicate, syn::token::Comma), syn::WherePredicate, (), {closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}, {closure@std::iter::Iterator::for_each::call<syn::WherePredicate, {closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &syn::Field, std::result::Result<attribute::BitcodeAttrs, syn::Error>, (), std::ops::ControlFlow<std::ops::ControlFlow<attribute::BitcodeAttrs>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}, {closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Field>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<attribute::BitcodeAttrs, std::ops::ControlFlow<attribute::BitcodeAttrs>, fn(attribute::BitcodeAttrs) -> std::ops::ControlFlow<attribute::BitcodeAttrs> {std::ops::ControlFlow::<attribute::BitcodeAttrs>::Break}>::{closure#0}}, std::ops::ControlFlow<attribute::BitcodeAttrs>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &syn::Variant, std::result::Result<std::vec::Vec<attribute::BitcodeAttrs>, syn::Error>, (), std::ops::ControlFlow<std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}, {closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<std::vec::Vec<attribute::BitcodeAttrs>, std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>, fn(std::vec::Vec<attribute::BitcodeAttrs>) -> std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>> {std::ops::ControlFlow::<std::vec::Vec<attribute::BitcodeAttrs>>::Break}>::{closure#0}}, std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<decode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<proc_macro2::TokenStream>::wrap_mut_1<encode::Item, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:140:31: 140:37}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::option::IntoIter<syn::GenericParam>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<syn::Meta>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Meta, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<syn::Meta>::extend_trusted<std::option::IntoIter<syn::Meta>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, {closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::option::IntoIter<syn::WherePredicate>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::TypePath>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Meta, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<attribute::BitcodeAttrs>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<attribute::BitcodeAttrs>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Meta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::control::group::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::control::group::sse2::Group::static_empty::AlignedTags`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.tags`: 16 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 16 bytes, alignment: 4 bytes
print-type-size     field `.FreeFunctions`: 4 bytes
print-type-size     field `.TokenStream`: 4 bytes
print-type-size     field `.SourceFile`: 4 bytes
print-type-size     field `.Span`: 4 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `shared::ReplaceLifetimes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::array::drain::Drain<'_, decode::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::array::drain::Drain<'_, encode::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Type>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::hash::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:250:29: 250:32}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>, {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<*const ()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Paren>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[(syn::BareFnArg, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::Expr, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::FieldValue, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::GenericArgument, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::GenericParam, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::Lifetime, syn::token::Plus)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::PathSegment, syn::token::PathSep)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::Type, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::TypeParamBound, syn::token::Plus)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[decode::Item]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[encode::Item]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Type>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Type>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*const (), std::thread::AccessError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(proc_macro2::Ident, ())>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Lifetime, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::PathSegment, syn::token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::TypeParamBound, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Lifetime, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::PathSegment, syn::token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::TypeParamBound, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, decode::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, encode::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::MacroDelimiter`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Brace`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Bracket`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 16 bytes
print-type-size type: `syn::generics::TypeParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Chain`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 7 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::BareFnArg, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::Expr, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::Field, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::FieldValue, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::GenericArgument, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::GenericParam, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::Lifetime, &mut syn::token::Plus>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::PathSegment, &mut syn::token::PathSep>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::Type, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::TypeParamBound, &mut syn::token::Plus>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&mut syn::Variant, &mut syn::token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::punctuated::Pair<&syn::PathSegment, &syn::token::PathSep>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:205:51: 205:53}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:113:27: 113:29}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:136:27: 136:29}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:159:35: 159:37}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:178:27: 178:29}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:213:51: 213:53}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:144:25: 144:28}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:152:25: 152:34}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:196:25: 196:27}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Field>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<attribute::BitcodeAttrs, std::ops::ControlFlow<attribute::BitcodeAttrs>, fn(attribute::BitcodeAttrs) -> std::ops::ControlFlow<attribute::BitcodeAttrs> {std::ops::ControlFlow::<attribute::BitcodeAttrs>::Break}>::{closure#0}}, std::ops::ControlFlow<attribute::BitcodeAttrs>>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<std::vec::Vec<attribute::BitcodeAttrs>, std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>, fn(std::vec::Vec<attribute::BitcodeAttrs>) -> std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>> {std::ops::ControlFlow::<std::vec::Vec<attribute::BitcodeAttrs>>::Break}>::{closure#0}}, std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::find<{closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}}, {closure@hashbrown::map::make_hasher<proc_macro2::Ident, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>), std::hash::RandomState>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}::{closure#0}}>::{closure#0}::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}::{closure#0}}>::{closure#0}::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}, {closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &syn::TypeParam, proc_macro2::Ident, (), std::ops::ControlFlow<proc_macro2::Ident>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}, {closure@std::iter::Iterator::find::check<proc_macro2::Ident, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::extra::DelimSpan`: 12 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 12 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::extra::DelimSpanEnum`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.join`: 4 bytes
print-type-size         field `.open`: 4 bytes
print-type-size         field `.close`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::DotDot>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::PathSep>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Brace`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::Bracket`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::DotDotDot`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::Paren`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, &syn::TypePath, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::GenericParam, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::Meta, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::WherePredicate, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::GenericParam, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::Meta, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::Type, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::WherePredicate, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::InsertSlot`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<'_, proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::bridge::client::state::set::RestoreOnDrop`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `shared::ReplaceSelves<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Meta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, hashbrown::raw::Bucket<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Lifetime, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::PathSegment, syn::token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::TypeParamBound, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Lifetime, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::PathSegment, syn::token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::TypeParamBound, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<*const ()>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Span, proc_macro2::Delimiter)>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(proc_macro2::Ident, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Meta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Comma>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<unsafe fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Lifetime, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Meta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::PathSegment, syn::token::PathSep)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::TypeParamBound, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<decode::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<encode::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Meta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Meta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<*const ()>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::ImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitCStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::attr::parsing::DisplayAttrStyle<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::attr::parsing::DisplayPath<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DotDot`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MinusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PathSep`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PercentEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PlusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SlashEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::StarEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::tt::TokenStreamHelper<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::tt::TokenTreeHelper<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/attribute.rs:29:47: 29:50}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/attribute.rs:45:34: 45:37}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:210:14: 210:26}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:145:39: 145:41}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:171:31: 171:41}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:177:29: 177:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:55:26: 55:41}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:60:37: 60:39}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::hash::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>, {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, fn(syn::TypePath) -> syn::Type {syn::Type::Path}>, std::vec::IntoIter<syn::Type>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Expr, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Field, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::FieldValue, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::GenericParam, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Lifetime, syn::token::Plus> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::PathSegment, syn::token::PathSep> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::TypeParamBound, syn::token::Plus> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<proc_macro2::Ident, (), std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>), std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<proc_macro2::Ident, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>::reserve_rehash<{closure@hashbrown::map::make_hasher<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>), std::hash::RandomState>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<proc_macro2::Ident, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:202:17: 202:21}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<syn::GenericParam, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:208:17: 208:24}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<syn::WherePredicate, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:213:21: 213:32}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find_map::check<&syn::GenericParam, syn::Lifetime, &mut {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:250:29: 250:32}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), {closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::hash::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>, {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&syn::TypeParam, proc_macro2::Ident, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}, {closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), {closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::hash::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>, {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), {closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::hash::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>, {closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}, {closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, {closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>, {closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::thread::LocalKey<std::cell::Cell<*const ()>>::replace::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[encode::Item; 6]>`: 6 bytes, alignment: 1 bytes
print-type-size     field `.value`: 6 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<[decode::Item; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Minus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Not`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Percent`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Plus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Slash`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::private::WithSpan`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroU16Inner`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `std::num::NonZero<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u16>>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `decode::Item`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size     variant `Populate`: 0 bytes
print-type-size     variant `Decode`: 0 bytes
print-type-size     variant `DecodeInPlace`: 0 bytes
print-type-size type: `encode::Item`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size     variant `Encode`: 0 bytes
print-type-size     variant `EncodeVectored`: 0 bytes
print-type-size     variant `CollectInto`: 0 bytes
print-type-size     variant `Reserve`: 0 bytes
print-type-size type: `hashbrown::control::tag::Tag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `CompilerPanic`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `decode::Decode`: 0 bytes, alignment: 1 bytes
print-type-size type: `encode::Encode`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Lifetime, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::PathSegment, syn::token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::TypeParamBound, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Lifetime, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::PathSegment, syn::token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::TypeParamBound, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut decode::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut encode::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::TypePath>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::Ident, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Meta, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::TypeParamBound; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::TypeParamBound]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::buffer::Entry]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<attribute::BitcodeAttrs>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<core::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<attribute::BitcodeAttrs>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Meta>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Type>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual, std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::ExprArray`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAssign`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAsync`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAwait`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBreak`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprClosure`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprConst`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprContinue`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprIf`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprInfer`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLet`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprMatch`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRange`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRawAddr`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRepeat`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprReturn`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTry`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTryBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprUnsafe`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprWhile`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprYield`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::FieldMutability`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::generics::PreciseCapture`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:201:14: 201:21}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:203:14: 203:18}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:114:27: 114:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:133:27: 133:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:250:29: 250:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:126:27: 126:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:197:27: 197:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:209:27: 209:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:179:14: 179:22}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:195:14: 195:18}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:208:17: 208:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:213:21: 213:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::hash::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/bound.rs:185:14: 185:21}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:51:18: 51:35}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:116:66: 116:69}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:138:26: 138:29}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:184:34: 184:37}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/decode.rs:99:66: 99:69}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:118:66: 118:69}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:128:66: 128:69}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:138:34: 138:37}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:155:26: 155:29}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>, {closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/encode.rs:201:66: 201:69}>>::{closure#0}}>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::result::Result<std::vec::Vec<attribute::BitcodeAttrs>, syn::Error> as std::iter::FromIterator<std::result::Result<attribute::BitcodeAttrs, syn::Error>>>::from_iter<std::iter::Map<syn::punctuated::Iter<'_, syn::Field>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:93:18: 93:25}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::result::Result<std::vec::Vec<std::vec::Vec<attribute::BitcodeAttrs>>, syn::Error> as std::iter::FromIterator<std::result::Result<std::vec::Vec<attribute::BitcodeAttrs>, syn::Error>>>::from_iter<std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode_derive-0.6.5/src/shared.rs:133:26: 133:35}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Expr, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Field, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::FieldValue, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::GenericParam, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Lifetime, syn::token::Plus> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::PathSegment, syn::token::PathSep> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::TypeParamBound, syn::token::Plus> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PairsMut<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Punctuated<syn::Meta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<proc_macro2::Ident, (), std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>))>::reserve_rehash<{closure@hashbrown::map::make_hasher<syn::Path, (std::vec::Vec<syn::Field>, std::vec::Vec<syn::Type>), std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_decode}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_encode}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::state::BRIDGE_STATE::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::KEYS::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<attribute::BitcodeAttrs, std::ops::ControlFlow<attribute::BitcodeAttrs>, fn(attribute::BitcodeAttrs) -> std::ops::ControlFlow<attribute::BitcodeAttrs> {std::ops::ControlFlow::<attribute::BitcodeAttrs>::Break}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<std::vec::Vec<attribute::BitcodeAttrs>, std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>>, fn(std::vec::Vec<attribute::BitcodeAttrs>) -> std::ops::ControlFlow<std::vec::Vec<attribute::BitcodeAttrs>> {std::ops::ControlFlow::<std::vec::Vec<attribute::BitcodeAttrs>>::Break}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<&proc_macro2::Ident, 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 992 bytes, alignment: 8 bytes
print-type-size     field `.data`: 896 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 992 bytes, alignment: 8 bytes
print-type-size     field `.value`: 992 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 992 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 992 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 992 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 896 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 616 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 896 bytes, alignment: 8 bytes
print-type-size     field `.value`: 896 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 896 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 896 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 896 bytes
print-type-size type: `std::mem::ManuallyDrop<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     field `.value`: 528 bytes
print-type-size type: `std::mem::MaybeUninit<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 528 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 528 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.data`: 280 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.data`: 280 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `ast::Input<'_>`: 336 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Struct`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Enum`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, ast::Input<'_>>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 336 bytes
print-type-size         field `.0`: 336 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ast::Input<'_>, syn::Error>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 336 bytes
print-type-size         field `.0`: 336 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ast::Enum<'_>`: 328 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 24 bytes
print-type-size     field `.attrs`: 272 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.generics`: 8 bytes
print-type-size type: `ast::Struct<'_>`: 328 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 24 bytes
print-type-size     field `.attrs`: 272 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.generics`: 8 bytes
print-type-size type: `ast::Variant<'_>`: 328 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 24 bytes
print-type-size     field `.attrs`: 272 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.original`: 8 bytes
print-type-size type: `std::ops::ControlFlow<ast::Variant<'_>, std::convert::Infallible>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size type: `std::ops::ControlFlow<ast::Variant<'_>>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<ast::Variant<'_>, std::convert::Infallible>>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<ast::Variant<'_>>, std::convert::Infallible>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<ast::Variant<'_>>>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::ControlFlow<ast::Variant<'_>>, std::convert::Infallible>>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, ast::Variant<'_>>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ast::Variant<'_>>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ast::Enum<'_>, syn::Error>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ast::Struct<'_>, syn::Error>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ast::Variant<'_>, syn::Error>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ast::Field<'_>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 272 bytes
print-type-size     field `.member`: 24 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.contains_generic`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<ast::Field<'_>, std::convert::Infallible>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size type: `std::ops::ControlFlow<ast::Field<'_>>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>, std::convert::Infallible>>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>>, std::convert::Infallible>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>>>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>>, std::convert::Infallible>>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, ast::Field<'_>>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ast::Field<'_>>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ast::Field<'_>, syn::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::TypeParam`: 320 bytes, alignment: 8 bytes
print-type-size     field `.default`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::WherePredicate>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::WherePredicate, syn::Error>`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::AssocType`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Field`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.mutability`: 0 bytes
print-type-size type: `syn::GenericArgument`: 312 bytes, alignment: 8 bytes
print-type-size     variant `AssocType`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `AssocConst`: 264 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 256 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 232 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Const`: 176 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Constraint`: 128 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `syn::PredicateType`: 312 bytes, alignment: 8 bytes
print-type-size     field `.bounded_ty`: 224 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WherePredicate`: 312 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 312 bytes
print-type-size         field `.0`: 312 bytes
print-type-size     variant `Lifetime`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.data`: 192 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `syn::Variant`: 280 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.discriminant`: 176 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `attr::Attrs<'_>`: 272 bytes, alignment: 8 bytes
print-type-size     field `.display`: 104 bytes
print-type-size     field `.fmt`: 112 bytes
print-type-size     field `.source`: 16 bytes
print-type-size     field `.backtrace`: 8 bytes
print-type-size     field `.from`: 16 bytes
print-type-size     field `.transparent`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, attr::Attrs<'_>>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<attr::Attrs<'_>, syn::Error>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::AssocConst`: 256 bytes, alignment: 8 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.value`: 168 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Attribute`: 248 bytes, alignment: 8 bytes
print-type-size     field `.meta`: 224 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 240 bytes, alignment: 8 bytes
print-type-size     field `.data`: 72 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<syn::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::Type, syn::Error>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::Meta`: 224 bytes, alignment: 8 bytes
print-type-size     variant `NameValue`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `List`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `syn::MetaNameValue`: 224 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.value`: 168 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Type`: 224 bytes, alignment: 8 bytes
print-type-size     variant `BareFn`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Array`: 200 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `syn::TypeBareFn`: 224 bytes, alignment: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.variadic`: 80 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 200 bytes, alignment: 8 bytes
print-type-size     field `.data`: 104 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 200 bytes, alignment: 8 bytes
print-type-size     field `.value`: 200 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 200 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 200 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 200 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 176 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.value`: 192 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 192 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 192 bytes
print-type-size type: `syn::TypeArray`: 192 bytes, alignment: 8 bytes
print-type-size     field `.len`: 168 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::option::Option<(syn::token::Eq, syn::Expr)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::Expr, syn::Error>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::Expr`: 168 bytes, alignment: 8 bytes
print-type-size     variant `MethodCall`: 168 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Call`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Binary`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Index`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Cast`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Unary`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Async`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Await`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Const`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `ForLoop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Infer`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `RawAddr`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Repeat`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Try`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `TryBlock`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Unsafe`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `While`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Yield`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprStruct`: 168 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `syn::ExprMethodCall`: 160 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.turbofish`: 56 bytes
print-type-size     field `.method`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::Constraint`: 120 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.generics`: 56 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.kv`: 80 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.kv`: 80 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.kv`: 80 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `attr::Fmt<'_>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.path`: 104 bytes
print-type-size     field `.original`: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<attr::Fmt<'_>>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 88 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `attr::Display<'_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bindings`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.implied_bounds`: 24 bytes
print-type-size     field `.requires_fmt_machinery`: 1 bytes
print-type-size     field `.has_bonus_display`: 1 bytes
print-type-size     field `.infinite_recursive`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::ExprPath>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<attr::Display<'_>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::ExprPath, syn::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::MetaList`: 96 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::PathSegment`: 88 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::cell::RefCell<proc_macro::bridge::client::Bridge<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::option::Option<syn::BareVariadic>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::BareVariadic`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.comma`: 8 bytes
print-type-size     field `.name`: 32 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::Bridge<'_>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::collections::btree_map::IntoIter<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::collections::btree_map::IntoIter<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::collections::btree_map::IntoIter<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::collections::btree_set::IntoIter<(usize, attr::Trait)>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::hash::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> std::result::Result<syn::Index, syn::Error> {syn::parse_str::<syn::Index>}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `syn::Data`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Union`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 72 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PredicateLifetime`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     field `.value`: 66 bytes
print-type-size type: `std::mem::MaybeUninit<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 66 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 66 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::ExprField`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.member`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ParenthesizedGenericArguments`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     variant `AngleBracketed`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Parenthesized`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:145:41: 145:47}`: 64 bytes, alignment: 8 bytes
print-type-size     end padding: 64 bytes
print-type-size type: `alloc::collections::btree::node::BalancingContext<'_, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 24 bytes
print-type-size     field `.left_child`: 16 bytes
print-type-size     field `.right_child`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size type: `fmt::FmtArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.first_unnamed`: 32 bytes
print-type-size     field `.named`: 24 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 24 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}>, std::result::Result<std::convert::Infallible, syn::Error>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.residual`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::ManuallyDrop<(std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<(std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, fmt::FmtArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(syn::buffer::Cursor<'_>, proc_macro2::extra::DelimSpan, syn::buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<fmt::FmtArguments, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::AngleBracketedGenericArguments, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::group::Braces<'_>, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::group::Brackets<'_>, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::group::Parens<'_>, syn::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 56 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprIndex`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unnamed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::TypeReference`: 56 bytes, alignment: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::parse::Lookahead1<'_>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.comparisons`: 32 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::dedup_sorted_iter::DedupSortedIter<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, std::iter::Map<std::vec::IntoIter<&proc_macro2::Ident>, {closure@std::collections::BTreeSet<&proc_macro2::Ident>::from_sorted_iter<std::vec::IntoIter<&proc_macro2::Ident>>::{closure#0}}>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size type: `generics::InferredBounds`: 48 bytes, alignment: 8 bytes
print-type-size     field `.order`: 24 bytes
print-type-size     field `.bounds`: 24 bytes
print-type-size type: `hashbrown::map::HashMap<&unraw::MemberUnraw, usize, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `std::collections::HashMap<&unraw::MemberUnraw, usize>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:439:55: 439:64}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::iter::Peekable<std::iter::Map<std::vec::IntoIter<&proc_macro2::Ident>, {closure@std::collections::BTreeSet<&proc_macro2::Ident>::from_sorted_iter<std::vec::IntoIter<&proc_macro2::Ident>>::{closure#0}}>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, syn::buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::buffer::Cursor<'_>, proc_macro2::Delimiter, proc_macro2::extra::DelimSpan, syn::buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataEnum`: 48 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprLit`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lit`: 24 bytes
print-type-size type: `syn::ExprParen`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTuple`: 48 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::group::Braces<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::group::Brackets<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::group::Parens<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::raw::RawIter<(&unraw::MemberUnraw, usize)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::iter::adapters::GenericShunt<'_, std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}>, std::result::Result<std::convert::Infallible, syn::Error>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.residual`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}::{closure#0}}>::{closure#0}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<syn::Lifetime>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, syn::buffer::Cursor<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::parse::ParseBuffer<'_>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}::{closure#0}}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}::{closure#0}}>::{closure#0}}>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<syn::Lifetime>, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::lit::LitRepr`: 40 bytes, alignment: 8 bytes
print-type-size     field `.token`: 24 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:166:44: 166:56}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&ast::Variant<'_>, proc_macro2::TokenStream, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:388:46: 388:55}, {closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:388:46: 388:55}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<&proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `hashbrown::raw::FullBucketsIndices`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.group_first_index`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(&unraw::MemberUnraw, usize)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(&unraw::MemberUnraw, usize)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTableInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `proc_macro2::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::TokenTree`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecIntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::array::IntoIter<usize, 2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::cell::RefCell<std::vec::Vec<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Map<std::slice::Iter<'_, ast::Field<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:497:41: 497:48}>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:501:36: 501:44}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:219:46: 219:55}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:272:46: 272:55}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:388:46: 388:55}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<&proc_macro2::Ident>, {closure@std::collections::BTreeSet<&proc_macro2::Ident>::from_sorted_iter<std::vec::IntoIter<&proc_macro2::Ident>>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::iter::Peekable<std::iter::Map<std::slice::Iter<'_, ast::Field<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:497:41: 497:48}>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step_minus_one`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, (attr::parse_error_attribute::kw::fmt, syn::buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, (attr::parse_error_attribute::kw::transparent, syn::buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, (bool, syn::buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<proc_macro2::Ident>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<syn::Lit>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::vec::Vec<ast::Field<'_>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::vec::Vec<ast::Variant<'_>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, unraw::IdentUnraw>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 32 bytes
print-type-size type: `std::option::Option<(&str, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, syn::token::Colon)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Punct, syn::buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<proc_macro2::TokenStream>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(attr::parse_error_attribute::kw::fmt, syn::buffer::Cursor<'_>), syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(attr::parse_error_attribute::kw::transparent, syn::buffer::Cursor<'_>), syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(bool, syn::buffer::Cursor<'_>), syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::Ident, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenTree, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::Ident>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::TokenTree>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<syn::Lit>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<ast::Field<'_>>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<ast::Variant<'_>>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<unraw::IdentUnraw, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<&proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `syn::Lifetime`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::VisRestricted`: 32 bytes, alignment: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `syn::Visibility`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Public`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `syn::buffer::Entry`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 32 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ident`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `End`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/attr.rs:130:26: 130:46}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:439:55: 439:64}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &syn::Field, (), std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>>>, {closure@std::iter::adapters::map::map_try_fold<'_, (usize, &syn::Field), std::result::Result<ast::Field<'_>, syn::Error>, (), std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}, {closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<ast::Field<'_>, std::ops::ControlFlow<ast::Field<'_>>, fn(ast::Field<'_>) -> std::ops::ControlFlow<ast::Field<'_>> {std::ops::ControlFlow::<ast::Field<'_>>::Break}>::{closure#0}}, std::ops::ControlFlow<ast::Field<'_>>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<&proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<&proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `generics::ParamsInScope<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.names`: 24 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 24 bytes, alignment: 8 bytes
print-type-size     variant `StaticStr`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `scan_expr::Action`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `SetState`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `IncDepth`: 0 bytes
print-type-size     variant `DecDepth`: 0 bytes
print-type-size     variant `Finish`: 0 bytes
print-type-size type: `scan_expr::Input`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Keyword`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `ConsumeAny`: 0 bytes
print-type-size     variant `ConsumeBinOp`: 0 bytes
print-type-size     variant `ConsumeBrace`: 0 bytes
print-type-size     variant `ConsumeDelimiter`: 0 bytes
print-type-size     variant `ConsumeIdent`: 0 bytes
print-type-size     variant `ConsumeLifetime`: 0 bytes
print-type-size     variant `ConsumeLiteral`: 0 bytes
print-type-size     variant `ConsumeNestedBrace`: 0 bytes
print-type-size     variant `ExpectPath`: 0 bytes
print-type-size     variant `ExpectTurbofish`: 0 bytes
print-type-size     variant `ExpectType`: 0 bytes
print-type-size     variant `CanBeginExpr`: 0 bytes
print-type-size     variant `Otherwise`: 0 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::vec::Vec<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeMap<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeSet<&proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::BTreeSet<(usize, attr::Trait)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::BTreeSet<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::BTreeSet<unraw::IdentUnraw>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, &proc_macro2::Ident>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (usize, attr::Trait)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, ast::Field<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, unraw::IdentUnraw>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&proc_macro2::Ident>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<unraw::IdentUnraw>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<unraw::IdentUnraw>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, &syn::Path>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, attr::parse_error_attribute::kw::fmt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, attr::parse_error_attribute::kw::transparent>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, bool>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Index>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::LitFloat>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::LitStr>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Dot>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Eq>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<syn::Index, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lit>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&proc_macro2::TokenStream, &syn::token::Plus>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&syn::Path, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<attr::parse_error_attribute::kw::fmt, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<attr::parse_error_attribute::kw::transparent, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<bool, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::hash::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<syn::token::Comma>, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<syn::BinOp, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::Index, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<syn::LitFloat, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::LitStr, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::token::Comma, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<syn::token::Dot, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<syn::token::Eq, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Alive`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::vec::Vec<&proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(proc_macro2::TokenStream, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::PathSep)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Field<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<ast::Variant<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::Lit`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `CStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::TypeParen`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `syn::parse::StepCursor<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::Pairs<'_, proc_macro2::TokenStream, syn::token::Plus>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `unraw::IdentUnraw`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `unraw::MemberUnraw`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, {closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:388:46: 388:55}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &syn::Variant, std::result::Result<ast::Variant<'_>, syn::Error>, (), std::ops::ControlFlow<std::ops::ControlFlow<ast::Variant<'_>>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}, {closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<ast::Variant<'_>, std::ops::ControlFlow<ast::Variant<'_>>, fn(ast::Variant<'_>) -> std::ops::ControlFlow<ast::Variant<'_>> {std::ops::ControlFlow::<ast::Variant<'_>>::Break}>::{closure#0}}, std::ops::ControlFlow<ast::Variant<'_>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, (usize, &syn::Field), std::result::Result<ast::Field<'_>, syn::Error>, (), std::ops::ControlFlow<std::ops::ControlFlow<ast::Field<'_>>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}, {closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<ast::Field<'_>, std::ops::ControlFlow<ast::Field<'_>>, fn(ast::Field<'_>) -> std::ops::ControlFlow<ast::Field<'_>> {std::ops::ControlFlow::<ast::Field<'_>>::Break}>::{closure#0}}, std::ops::ControlFlow<ast::Field<'_>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, ast::Variant<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:388:46: 388:55}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, (proc_macro2::Ident, proc_macro2::TokenStream), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `alloc::collections::btree::node::LeftOrRight<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Left`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Right`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::search::IndexResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KV`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Edge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(proc_macro2::TokenStream, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Field<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<ast::Variant<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `attr::From<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `attr::Source<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `attr::Transparent<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::control::group::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::control::group::sse2::Group::static_empty::AlignedTags`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.tags`: 16 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 16 bytes, alignment: 4 bytes
print-type-size     field `.FreeFunctions`: 4 bytes
print-type-size     field `.TokenStream`: 4 bytes
print-type-size     field `.SourceFile`: 4 bytes
print-type-size     field `.Span`: 4 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::hash::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/attr.rs:331:51: 331:68}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/attr.rs:332:51: 332:68}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::Field<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:395:54: 395:61}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, ast::Field<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:497:41: 497:48}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams<'_>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/generics.rs:15:47: 15:54}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<(usize, attr::Trait)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<(usize, attr::Trait)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<((usize, attr::Trait), alloc::collections::btree::set_val::SetValZST)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &&proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(proc_macro2::Ident, proc_macro2::TokenStream))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(usize, attr::Trait))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &ast::Field<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &unraw::IdentUnraw)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, attr::Trait)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<attr::From<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<attr::Source<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<attr::Transparent<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<*const ()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<&unraw::MemberUnraw>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<(&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST)>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[&proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(proc_macro2::Ident, proc_macro2::TokenStream)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(proc_macro2::TokenStream, syn::token::Plus)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(scan_expr::Input, scan_expr::Action)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(usize, attr::Trait)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::Field<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[ast::Variant<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[unraw::IdentUnraw]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*const (), std::thread::AccessError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(&unraw::MemberUnraw, usize)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (proc_macro2::Ident, proc_macro2::TokenStream)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (proc_macro2::TokenStream, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (scan_expr::Input, scan_expr::Action)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (usize, attr::Trait)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::Field<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::Variant<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, unraw::IdentUnraw>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::MacroDelimiter`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Brace`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Bracket`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 16 bytes
print-type-size type: `syn::generics::TypeParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Chain`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 7 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Pair<&proc_macro2::TokenStream, &syn::token::Plus>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:219:46: 219:55}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:272:46: 272:55}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:388:46: 388:55}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/scan_expr.rs:202:54: 202:62}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<ast::Field<'_>, std::ops::ControlFlow<ast::Field<'_>>, fn(ast::Field<'_>) -> std::ops::ControlFlow<ast::Field<'_>> {std::ops::ControlFlow::<ast::Field<'_>>::Break}>::{closure#0}}, std::ops::ControlFlow<ast::Field<'_>>>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}>, std::result::Result<std::convert::Infallible, syn::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<ast::Variant<'_>, std::ops::ControlFlow<ast::Variant<'_>>, fn(ast::Variant<'_>) -> std::ops::ControlFlow<ast::Variant<'_>> {std::ops::ControlFlow::<ast::Variant<'_>>::Break}>::{closure#0}}, std::ops::ControlFlow<ast::Variant<'_>>>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(&unraw::MemberUnraw, usize)>::find<{closure@hashbrown::map::equivalent_key<unraw::MemberUnraw, &unraw::MemberUnraw, usize>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(&unraw::MemberUnraw, usize)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<&unraw::MemberUnraw, &unraw::MemberUnraw, usize>::{closure#0}}, {closure@hashbrown::map::make_hasher<&unraw::MemberUnraw, usize, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}::{closure#0}}>::{closure#0}::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::collections::btree_map::VacantEntry<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>::insert_entry::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::collections::btree_map::VacantEntry<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>::insert_entry::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::collections::btree_map::VacantEntry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>::insert_entry::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::collections::btree_map::VacantEntry<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>::insert_entry::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::extra::DelimSpan`: 12 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 12 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::extra::DelimSpanEnum`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.join`: 4 bytes
print-type-size         field `.open`: 4 bytes
print-type-size         field `.close`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::DotDot>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::PathSep>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Brace`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::Bracket`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::DotDotDot`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::Paren`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, &proc_macro2::Ident, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, alloc::collections::btree::set_val::SetValZST>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::slice::sort::stable::drift::DriftsortRun`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(&unraw::MemberUnraw, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::InsertSlot`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVecMut<'_, proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::state::set::RestoreOnDrop`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&&syn::Index>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&syn::Index>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&unraw::MemberUnraw>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(proc_macro2::Ident, proc_macro2::TokenStream)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(usize, attr::Trait)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &unraw::IdentUnraw>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&unraw::MemberUnraw>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&unraw::MemberUnraw, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(proc_macro2::Ident, proc_macro2::TokenStream)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(proc_macro2::TokenStream, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(scan_expr::Input, scan_expr::Action)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, attr::Trait)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::set_val::SetValZST>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&attr::Display<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<&unraw::MemberUnraw>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<(&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<*const ()>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<proc_macro2::TokenStream>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&unraw::IdentUnraw>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&unraw::MemberUnraw>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Span, proc_macro2::Delimiter)>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(&unraw::MemberUnraw, usize)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<proc_macro2::TokenStream>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Comma>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<unsafe fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&unraw::MemberUnraw, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::TokenStream, syn::token::Plus)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(scan_expr::Input, scan_expr::Action)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(usize, attr::Trait)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<unraw::IdentUnraw>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<*const ()>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::ImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitCStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::TypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::attr::parsing::DisplayAttrStyle<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::attr::parsing::DisplayPath<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DotDot`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MinusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PathSep`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PercentEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PlusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SlashEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::StarEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:73:54: 73:71}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/prop.rs:131:33: 131:45}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/scan_expr.rs:198:56: 198:64}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::Pairs<'_, proc_macro2::TokenStream, syn::token::Plus> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<&proc_macro2::Ident, for<'a, 'b> fn(&'a &proc_macro2::Ident, &'b &proc_macro2::Ident) -> bool {<&proc_macro2::Ident as std::cmp::PartialOrd>::lt}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<&unraw::MemberUnraw, &unraw::MemberUnraw, usize>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<unraw::MemberUnraw, &unraw::MemberUnraw, usize>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<&unraw::MemberUnraw, usize, std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(&unraw::MemberUnraw, usize)>::reserve_rehash<{closure@hashbrown::map::make_hasher<&unraw::MemberUnraw, usize, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, {closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Peekable<std::iter::Map<std::slice::Iter<'_, ast::Field<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:497:41: 497:48}>>::peek::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Peekable<std::iter::Map<std::vec::IntoIter<&proc_macro2::Ident>, {closure@std::collections::BTreeSet<&proc_macro2::Ident>::from_sorted_iter<std::vec::IntoIter<&proc_macro2::Ident>>::{closure#0}}>>::peek::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::thread::LocalKey<std::cell::Cell<*const ()>>::replace::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `attr::parse_error_attribute::kw::fmt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `attr::parse_error_attribute::kw::transparent`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `quote::__private::get_span::GetSpan<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `quote::__private::get_span::GetSpanBase<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `quote::__private::get_span::GetSpanInner<proc_macro2::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Minus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Not`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Percent`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Plus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::SelfType`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Slash`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::private::WithSpan`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroU16Inner`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::num::NonZero<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u16>>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ast::ContainerKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size     variant `UnitStruct`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size type: `attr::Trait`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Debug`: 0 bytes
print-type-size     variant `Display`: 0 bytes
print-type-size     variant `Octal`: 0 bytes
print-type-size     variant `LowerHex`: 0 bytes
print-type-size     variant `UpperHex`: 0 bytes
print-type-size     variant `Pointer`: 0 bytes
print-type-size     variant `Binary`: 0 bytes
print-type-size     variant `LowerExp`: 0 bytes
print-type-size     variant `UpperExp`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `hashbrown::control::tag::Tag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `CompilerPanic`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::set_val::SetValZST>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(proc_macro2::Ident, proc_macro2::TokenStream)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(proc_macro2::TokenStream, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(scan_expr::Input, scan_expr::Action)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(usize, attr::Trait)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Field<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Variant<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ((usize, attr::Trait), alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>))>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&unraw::IdentUnraw>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&unraw::MemberUnraw, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::DormantMut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::Ident, proc_macro2::TokenStream)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::TokenStream, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::buffer::Entry]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Field<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Variant<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<core::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(syn::buffer::Cursor<'_>) -> syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<((usize, attr::Trait), alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>))>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::string::String, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<(usize, attr::Trait), alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>)>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::ExprArray`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAssign`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAsync`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAwait`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBreak`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprClosure`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprConst`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprContinue`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprIf`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprInfer`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLet`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprMatch`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRange`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRawAddr`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRepeat`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprReturn`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTry`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTryBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprUnsafe`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprWhile`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprYield`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::FieldMutability`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::ext::private::PeekFn`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::parse::End`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.100/src/custom_keyword.rs:148:28: 148:36}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/attr.rs:331:51: 331:68}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/attr.rs:332:51: 332:68}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:376:59: 376:62}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:380:32: 380:41}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:395:54: 395:61}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:497:41: 497:48}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:501:36: 501:44}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:532:41: 532:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/expand.rs:64:41: 64:47}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/generics.rs:15:47: 15:54}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/prop.rs:29:18: 29:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/prop.rs:35:18: 35:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/prop.rs:45:22: 45:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/prop.rs:49:22: 49:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/scan_expr.rs:223:39: 223:47}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/scan_expr.rs:228:55: 228:63}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/valid.rs:245:28: 245:38}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/valid.rs:24:63: 24:66}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/valid.rs:76:63: 76:66}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::result::Result<std::vec::Vec<ast::Field<'_>>, syn::Error> as std::iter::FromIterator<std::result::Result<ast::Field<'_>, syn::Error>>>::from_iter<std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:135:18: 135:30}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::result::Result<std::vec::Vec<ast::Variant<'_>>, syn::Error> as std::iter::FromIterator<std::result::Result<ast::Variant<'_>, syn::Error>>>::from_iter<std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/ast.rs:92:18: 92:24}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::Pairs<'_, proc_macro2::TokenStream, syn::token::Plus> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &proc_macro2::Ident, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, (usize, attr::Trait), alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, (std::collections::BTreeSet<std::string::String>, syn::punctuated::Punctuated<proc_macro2::TokenStream, syn::token::Plus>), alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, unraw::IdentUnraw, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(&unraw::MemberUnraw, usize)>::reserve_rehash<{closure@hashbrown::map::make_hasher<&unraw::MemberUnraw, usize, std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_error}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::state::BRIDGE_STATE::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::collections::BTreeSet<&proc_macro2::Ident>::from_sorted_iter<std::vec::IntoIter<&proc_macro2::Ident>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::KEYS::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<ast::Field<'_>, std::ops::ControlFlow<ast::Field<'_>>, fn(ast::Field<'_>) -> std::ops::ControlFlow<ast::Field<'_>> {std::ops::ControlFlow::<ast::Field<'_>>::Break}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<ast::Variant<'_>, std::ops::ControlFlow<ast::Variant<'_>>, fn(ast::Variant<'_>) -> std::ops::ControlFlow<ast::Variant<'_>> {std::ops::ControlFlow::<ast::Variant<'_>>::Break}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<&str, 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `std::mem::ManuallyDrop<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     field `.value`: 528 bytes
print-type-size type: `std::mem::MaybeUninit<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 528 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 528 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.data`: 192 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 176 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.value`: 192 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 192 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 192 bytes
print-type-size type: `std::collections::btree_map::Iter<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Keys<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 72 bytes
print-type-size type: `std::collections::btree_set::Iter<'_, &str>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::collections::btree_set::Iter<'_, &str>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/error.rs:21:34: 21:37}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     field `.value`: 66 bytes
print-type-size type: `std::mem::MaybeUninit<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 66 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 66 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.kv`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `error::ErrorState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.max_err_pos`: 8 bytes
print-type-size     field `.suppress_fail`: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size     field `.reparsing_on_error`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Occupied`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.key`: 16 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `std::array::IntoIter<usize, 2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, &str, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::option::Option<(&mut [&str], &mut [&str])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `error::ExpectedSet`: 24 bytes, alignment: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size type: `std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeSet<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, &str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::TakeWhile<std::iter::Rev<std::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.flag`: 1 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<core::slice::sort::shared::smallsort::CopyOnDrop<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::raw_vec::RawVecInner, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `str::LineCol`: 24 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `RuleResult<()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Matched`: 8 bytes
print-type-size         field `.1`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `RuleResult<char>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Matched`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `alloc::collections::btree::node::LeftOrRight<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Left`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Right`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::search::IndexResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KV`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Edge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u8>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::str::Chars<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<usize>, std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<usize>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<*mut &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&&str, &alloc::collections::btree::set_val::SetValZST)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `{closure@<std::iter::TakeWhile<I, P> as std::iter::Iterator>::try_fold::check<'_, char, usize, std::ops::try_trait::NeverShortCircuit<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}, {closure@std::ops::try_trait::NeverShortCircuit<usize>::wrap_mut_2<usize, char, {closure@<std::iter::TakeWhile<std::iter::Rev<std::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}> as std::iter::Iterator>::count::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::collections::btree_map::VacantEntry<'_, &str, alloc::collections::btree::set_val::SetValZST>::insert_entry::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, &str, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::slice::sort::stable::drift::DriftsortRun`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<(&str, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<usize>, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(usize, std::option::Option<usize>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(&str, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `{closure@<std::array::IntoIter<usize, 2> as std::iter::Iterator>::next::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::collections::btree_set::Iter<'_, &str>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/error.rs:21:34: 21:37}> as std::iter::Iterator>::collect<std::vec::Vec<&str>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<&str, for<'a, 'b> fn(&'a &str, &'b &str) -> bool {<&str as std::cmp::PartialOrd>::lt}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::set_val::SetValZST>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::DormantMut`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Immut<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `alloc::collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Mut<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `alloc::collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (&str, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::DormantMut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(&str, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/error.rs:21:34: 21:37}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::collections::btree_map::Keys<'_, &str, alloc::collections::btree::set_val::SetValZST> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::iter::TakeWhile<std::iter::Rev<std::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}> as std::iter::Iterator>::count::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u8>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, {closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::next_unchecked::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, usize, usize, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}, {closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u8>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:39:52: 39:57}>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<usize>::wrap_mut_2<usize, char, {closure@<std::iter::TakeWhile<std::iter::Rev<std::str::Chars<'_>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/peg-runtime-0.8.5/str.rs:40:54: 40:58}> as std::iter::Iterator>::count::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::NonNull<&PodCastError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<&checked::CheckedCastError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `PodCastError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TargetAlignmentGreaterAndInputNotAligned`: 0 bytes
print-type-size     variant `OutputSliceWouldHaveSlop`: 0 bytes
print-type-size     variant `SizeMismatch`: 0 bytes
print-type-size     variant `AlignmentMismatch`: 0 bytes
print-type-size type: `checked::CheckedCastError`: 1 bytes, alignment: 1 bytes
print-type-size     variant `PodCastError`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidBitPattern`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<([usize; 32], [usize; 0])>`: 256 bytes, alignment: 8 bytes
print-type-size     field `.value`: 256 bytes
print-type-size type: `std::mem::MaybeUninit<([usize; 32], [usize; 0])>`: 256 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 256 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 256 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `permutations::PermutationState`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Loaded`: 32 bytes
print-type-size         field `.indices`: 16 bytes
print-type-size         field `.cycles`: 16 bytes
print-type-size     variant `Buffered`: 16 bytes
print-type-size         field `.k`: 8 bytes
print-type-size         field `.min_n`: 8 bytes
print-type-size     variant `Start`: 8 bytes
print-type-size         field `.k`: 8 bytes
print-type-size     variant `End`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &usize, usize, std::option::Option<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/combinations_with_replacement.rs:184:53: 184:67}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `groupbylazy::ChunkIndex`: 24 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/combinations_with_replacement.rs:184:53: 184:67}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &usize, usize, std::option::Option<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/combinations.rs:304:53: 304:67}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::boxed::Box<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/combinations.rs:304:53: 304:67}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &usize, usize, std::option::Option<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/permutations.rs:177:72: 177:86}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/permutations.rs:177:72: 177:86}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/permutations.rs:179:35: 179:42}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/powerset.rs:130:34: 130:42}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/size_hint.rs:26:22: 26:27}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/size_hint.rs:35:17: 35:22}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/size_hint.rs:56:22: 56:27}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `with_position::Position`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `First`: 0 bytes
print-type-size     variant `Middle`: 0 bytes
print-type-size     variant `Last`: 0 bytes
print-type-size     variant `Only`: 0 bytes
print-type-size type: `adaptors::coalesce::DedupEq`: 0 bytes, alignment: 1 bytes
print-type-size type: `adaptors::coalesce::NoCount`: 0 bytes, alignment: 1 bytes
print-type-size type: `adaptors::coalesce::WithCount`: 0 bytes, alignment: 1 bytes
print-type-size type: `cons_tuples_impl::ConsTuplesFn`: 0 bytes, alignment: 1 bytes
print-type-size type: `duplicates_impl::private::ById`: 0 bytes, alignment: 1 bytes
print-type-size type: `kmerge_impl::KMergeByLt`: 0 bytes, alignment: 1 bytes
print-type-size type: `merge_join::MergeLte`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[usize]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/combinations_with_replacement.rs:154:17: 154:37}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/permutations.rs:161:24: 161:30}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itertools-0.14.0/src/permutations.rs:163:58: 163:66}`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>`: 208 bytes, alignment: 8 bytes
print-type-size     field `.value`: 208 bytes
print-type-size type: `std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>`: 208 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 208 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 208 bytes
print-type-size type: `std::mem::ManuallyDrop<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.value`: 192 bytes
print-type-size type: `std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 192 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 192 bytes
print-type-size type: `serde::de::SerdeDecoder<'_>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Seq`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Str`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Enum`: 96 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `U8`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `U16`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `U128`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `F32`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Unspecified`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.length`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Unpopulated`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<serde::de::SerdeDecoder<'_>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `str::StrDecoder<'_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.strings`: 16 bytes
print-type-size type: `serde::ser::LazyEncoder`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Specified`: 96 bytes
print-type-size         field `.specified`: 88 bytes
print-type-size         field `.index`: 8 bytes
print-type-size     variant `Unspecified`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.reserved`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>, std::array::IntoIter<u8, 16>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 40 bytes
print-type-size     field `.backiter`: 40 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<serde::ser::LazyEncoder>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<serde::ser::LazyEncoder>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `length::LengthDecoder<'_>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.small`: 40 bytes
print-type-size     field `.large`: 40 bytes
print-type-size     field `.sum`: 8 bytes
print-type-size type: `serde::ser::SpecifiedEncoder`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Str`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Map`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Seq`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Enum`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Bool`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `F32`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `I8`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `I16`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `I32`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `I64`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `I128`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `U8`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `U16`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `U32`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `U64`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `U128`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Tuple`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `derive::duration::DurationDecoder<'_>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 40 bytes
print-type-size     field `.subsec_nanos`: 40 bytes
print-type-size type: `derive::vec::VecEncoder<u8_char::U8Char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.elements`: 24 bytes
print-type-size     field `.vectored_impl`: 8 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::Flatten<std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>, std::array::IntoIter<u8, 2>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>, std::array::IntoIter<u8, 4>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>, std::array::IntoIter<u8, 8>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>, std::array::IntoIter<u8, 2>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>, std::array::IntoIter<u8, 4>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>, std::array::IntoIter<u8, 2>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>, std::array::IntoIter<u8, 8>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>, std::array::IntoIter<u8, 2>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>, std::array::IntoIter<u8, 4>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>, std::option::IntoIter<&mut dyn coder::Buffer>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 24 bytes
print-type-size     field `.backiter`: 24 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `str::StrEncoder`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `serde::variant::VariantDecoder<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 40 bytes
print-type-size     field `.histogram`: 24 bytes
print-type-size     field `.spooky`: 0 bytes
print-type-size type: `buffer::Buffer`: 48 bytes, alignment: 8 bytes
print-type-size     field `.registry`: 24 bytes
print-type-size     field `.out`: 24 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `derive::duration::DurationEncoder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 24 bytes
print-type-size     field `.subsec_nanos`: 24 bytes
print-type-size type: `length::LengthEncoder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.small`: 24 bytes
print-type-size     field `.large`: 24 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<u128>>`: 48 bytes, alignment: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 16 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(i128, i128)>`: 48 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u128, u128)>`: 48 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<u128>, error::Error>`: 48 bytes, alignment: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `bool::BoolDecoder<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `fast::CowSlice<'_, [u8; 16]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `fast::CowSlice<'_, [u8; 1]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `fast::CowSlice<'_, [u8; 2]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `fast::CowSlice<'_, [u8; 4]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `fast::CowSlice<'_, [u8; 8]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `fast::CowSlice<'_, bool>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `fast::CowSlice<'_, u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `int::CheckedIntDecoder<'_, derive::duration::Nanoseconds, u32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `int::IntDecoder<'_, u128>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `int::IntDecoder<'_, u16>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `int::IntDecoder<'_, u32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `int::IntDecoder<'_, u64>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `int::IntDecoder<'_, u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `int::IntDecoder<'_, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::option::Option<std::array::IntoIter<u8, 16>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::RefCell<std::vec::Vec<u8>>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::slice::ChunksExact<'_, u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.rem`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::thread::local_impl::EagerStorage<std::cell::RefCell<std::vec::Vec<u8>>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.val`: 32 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `f32::F32Decoder<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.mantissa`: 16 bytes
print-type-size     field `.sign_exp`: 16 bytes
print-type-size type: `serde::ser::MapSerializer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.encoders`: 8 bytes
print-type-size     field `.index_alloc`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.key_serialized`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::array::IntoIter<u8, 16>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::cell::RefCell<std::vec::Vec<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::cell::RefCell<std::vec::Vec<u8>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::iter::Fuse<std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `V6`: 30 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 28 bytes, alignment: 4 bytes
print-type-size     variant `V4`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::vec::Vec<[u8; 8]>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(&[i128], &[i128])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[i16], &[i16])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[i32], &[i32])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[i64], &[i64])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[i8], &[i8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[u128], &[u128])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[u16], &[u16])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[u32], &[u32])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[u64], &[u64])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[u8], &[u8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [[u32; 256]], &mut [[u32; 256]])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [std::mem::MaybeUninit<u8>], &mut [std::mem::MaybeUninit<u8>])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::array::IntoIter<u8, 2>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::array::IntoIter<u8, 4>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::array::IntoIter<u8, 8>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<u128, error::Error>>`: 32 bytes, alignment: 16 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u128>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 16 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<serde::ser::MapSerializer<'_>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<serde::ser::SeqSerializer<'_>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<serde::ser::TupleSerializer<'_>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::net::SocketAddrV4, std::net::SocketAddrV6>`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Err`: 30 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `std::result::Result<std::vec::Vec<[u8; 8]>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<u128, error::Error>`: 32 bytes, alignment: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/str.rs:93:43: 93:46}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::fmt::DebugStruct<'_, '_>::field_with<{closure@<*const [u8; 8] as std::fmt::Pointer>::fmt::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::fmt::DebugStruct<'_, '_>::field_with<{closure@<*const u8 as std::fmt::Pointer>::fmt::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.ip`: 16 bytes
print-type-size     field `.flowinfo`: 4 bytes
print-type-size     field `.scope_id`: 4 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `bool::BoolEncoder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `buffer::Registry`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `core::fmt::builders::PadAdapter<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.state`: 8 bytes
print-type-size type: `error::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `f32::F32Encoder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `fast::FastVec<bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<f32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<i16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<u16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<u8_char::U8Char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastVec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `int::IntEncoder<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<i16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<u16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `int::IntEncoder<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `serde::ser::SeqSerializer<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lazy`: 8 bytes
print-type-size     field `.index_alloc`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `serde::ser::TupleSerializer<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.encoders`: 16 bytes
print-type-size     field `.index_alloc`: 8 bytes
print-type-size type: `serde::variant::VariantEncoder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `std::array::IntoIter<u8, 2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size     field `.data`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::array::IntoIter<u8, 4>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size     field `.data`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::array::IntoIter<u8, 8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `std::borrow::Cow<'_, str>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Borrowed`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::IterMut<'_, serde::de::SerdeDecoder<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}>::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::adapters::GenericShunt<'_, std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}>, std::result::Result<std::convert::Infallible, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.residual`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<bool>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<f32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<i128>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<i16>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<i32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<i64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<u128>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<u16>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<u64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<u8_char::U8Char>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<fast::FastVec<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<bool>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<f32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i128>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i16>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<serde::de::SerdeDecoder<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<serde::ser::LazyEncoder>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<std::option::Option<&mut dyn coder::Buffer>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u128>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u16>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u8_char::U8Char>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, &[[u8; 16]]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, &[[u8; 1]]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, &[[u8; 2]]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, &[[u8; 4]]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, &[[u8; 8]]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, &[u8]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (pack::Packing, bool)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (pack_ints::Packing, bool)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [u8; 8]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, serde::ser::EncoderWrapper<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<u16>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 2 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<u64>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, u64>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(i64, i64)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u64, u64)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<core::fmt::builders::PadAdapter<'_, '_>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<&mut dyn coder::Buffer>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<&mut dyn coder::Buffer>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::convert::Infallible, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<u16, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<u32, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<u64, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<u8, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&[[u8; 16]], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[[u8; 1]], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[[u8; 2]], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[[u8; 4]], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[[u8; 8]], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&[u8], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(pack::Packing, bool), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<(pack_ints::Packing, bool), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<[u8; 8], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<serde::ser::EncoderWrapper<'_>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<u16>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 2 bytes
print-type-size type: `std::result::Result<std::option::Option<u32>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::option::Option<u64>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<u8>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::result::Result<(), error::Error>, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u16, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `std::result::Result<u32, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<u64, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u8, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<usize, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::slice::Chunks<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(std::any::TypeId, buffer::ErasedBox)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 16]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 1]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 2]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 4]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 8]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<f32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<serde::de::SerdeDecoder<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<serde::ser::LazyEncoder>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::option::Option<&mut dyn coder::Buffer>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u16>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8_char::U8Char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `u8_char::U8CharEncoder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:243:18: 243:21}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:258:26: 258:33}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:264:26: 264:38}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &mut serde::de::SerdeDecoder<'_>, (), std::result::Result<(), error::Error>, {closure@std::iter::Iterator::try_for_each::call<(usize, &mut serde::de::SerdeDecoder<'_>), std::result::Result<(), error::Error>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/de.rs:74:39: 74:53}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::Take<I> as std::iter::adapters::take::SpecTake>::spec_for_each::check<'_, serde::de::SerdeDecoder<'_>, {closure@std::vec::Vec<serde::de::SerdeDecoder<'_>>::extend_trusted<std::iter::Take<std::iter::RepeatWith<fn() -> serde::de::SerdeDecoder<'_> {<serde::de::SerdeDecoder<'_> as std::default::Default>::default}>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::Take<I> as std::iter::adapters::take::SpecTake>::spec_for_each::check<'_, serde::ser::LazyEncoder, {closure@std::vec::Vec<serde::ser::LazyEncoder>::extend_trusted<std::iter::Take<std::iter::RepeatWith<fn() -> serde::ser::LazyEncoder {<serde::ser::LazyEncoder as std::default::Default>::default}>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::Take<I> as std::iter::adapters::take::SpecTake>::spec_for_each::check<'_, std::option::Option<&mut dyn coder::Buffer>, {closure@std::vec::Vec<std::option::Option<&mut dyn coder::Buffer>>::extend_trusted<std::iter::Take<std::iter::RepeatWith<fn() -> std::option::Option<&mut dyn coder::Buffer> {<std::option::Option<&mut dyn coder::Buffer> as std::default::Default>::default}>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 16>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 8>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 8>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 16]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 2], {closure@std::vec::Vec<[u8; 2]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 2], {closure@std::vec::Vec<[u8; 2]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 4], {closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 4], {closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 4], {closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u64, {closure@std::vec::Vec<u64>::extend_trusted<std::iter::Map<std::slice::Iter<'_, usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:92:67: 92:71}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 16], [u8; 16], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}, {closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 16]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 2], [u8; 16], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}, {closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 2], [u8; 2], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}, {closure@std::iter::Iterator::for_each::call<[u8; 2], {closure@std::vec::Vec<[u8; 2]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 2], [u8; 4], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}, {closure@std::iter::Iterator::for_each::call<[u8; 4], {closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 2], [u8; 8], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}, {closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 4], [u8; 16], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}, {closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 4], [u8; 4], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}, {closure@std::iter::Iterator::for_each::call<[u8; 4], {closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 4], [u8; 8], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}, {closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 8], [u8; 16], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}, {closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&[u8; 8], [u8; 8], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}, {closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u128, u8, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}, {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u16, u8, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}, {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u32, u8, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}, {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u64, u8, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}, {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, [u8; 16], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}, {closure@std::iter::Iterator::for_each::call<[u8; 16], {closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, [u8; 2], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}, {closure@std::iter::Iterator::for_each::call<[u8; 2], {closure@std::vec::Vec<[u8; 2]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, [u8; 4], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}, {closure@std::iter::Iterator::for_each::call<[u8; 4], {closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, [u8; 8], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}, {closure@std::iter::Iterator::for_each::call<[u8; 8], {closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&usize, u64, (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:92:67: 92:71}, {closure@std::iter::Iterator::for_each::call<u64, {closure@std::vec::Vec<u64>::extend_trusted<std::iter::Map<std::slice::Iter<'_, usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:92:67: 92:71}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &[u8; 8], std::result::Result<[u8; 8], error::Error>, (), std::ops::ControlFlow<std::ops::ControlFlow<[u8; 8]>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}, {closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}>, std::result::Result<std::convert::Infallible, error::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<[u8; 8], std::ops::ControlFlow<[u8; 8]>, fn([u8; 8]) -> std::ops::ControlFlow<[u8; 8]> {std::ops::ControlFlow::<[u8; 8]>::Break}>::{closure#0}}, std::ops::ControlFlow<[u8; 8]>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 16]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 16]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 2]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 2]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 4]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<[u8; 8]>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<serde::de::SerdeDecoder<'_>>::extend_trusted<std::iter::Take<std::iter::RepeatWith<fn() -> serde::de::SerdeDecoder<'_> {<serde::de::SerdeDecoder<'_> as std::default::Default>::default}>>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<serde::ser::LazyEncoder>::extend_trusted<std::iter::Take<std::iter::RepeatWith<fn() -> serde::ser::LazyEncoder {<serde::ser::LazyEncoder as std::default::Default>::default}>>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<std::option::Option<&mut dyn coder::Buffer>>::extend_trusted<std::iter::Take<std::iter::RepeatWith<fn() -> std::option::Option<&mut dyn coder::Buffer> {<std::option::Option<&mut dyn coder::Buffer> as std::default::Default>::default}>>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u64>::extend_trusted<std::iter::Map<std::slice::Iter<'_, usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:92:67: 92:71}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<u8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `std::net::IpAddr`: 17 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::net::Ipv4Addr, std::net::Ipv6Addr>`: 17 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::any::TypeId, buffer::ErasedBox)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 1]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<serde::de::SerdeDecoder<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<serde::ser::LazyEncoder>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::option::Option<&mut dyn coder::Buffer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8_char::U8Char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `buffer::ErasedBox`: 16 bytes, alignment: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `bytemuck::must_cast::Transmute<i128, u128>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `Transmute`: 16 bytes
print-type-size         field `.src`: 16 bytes
print-type-size         field `.dst`: 16 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size type: `bytemuck::must_cast::Transmute<u128, u128>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `Transmute`: 16 bytes
print-type-size         field `.src`: 16 bytes
print-type-size         field `.dst`: 16 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `fast::FastSlice<'_, [u8; 16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, [u8; 1]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, [u8; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, [u8; 3]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, [u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, [u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `fast::FastSlice<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `serde::de::DecoderWrapper<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.decoder`: 8 bytes
print-type-size     field `.input`: 8 bytes
print-type-size type: `serde::ser::EncoderWrapper<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lazy`: 8 bytes
print-type-size     field `.index_alloc`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::any::TypeId`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::boxed::Box<[serde::de::SerdeDecoder<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[serde::ser::LazyEncoder]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<serde::ser::LazyEncoder>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<std::option::Option<&mut dyn coder::Buffer>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[std::option::Option<&mut dyn coder::Buffer>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::RefMut<'_, std::vec::Vec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::io::default_write_fmt::Adapter<'_, std::sys::stdio::unix::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<'_, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 16]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 2]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 4]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:163:45: 163:49}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u8>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:92:67: 92:71}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<serde::de::SerdeDecoder<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<serde::ser::LazyEncoder>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<std::option::Option<&mut dyn coder::Buffer>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<i128>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<serde::ser::LazyEncoder>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<std::option::Option<&mut dyn coder::Buffer>>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::option::Option<&mut dyn coder::Buffer>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<&mut dyn coder::Buffer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<u128>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<&mut dyn coder::Buffer>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 1 bytes
print-type-size     field `.octets`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<*const [u8; 16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const [u8; 1]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const [u8; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const [u8; 3]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const [u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const [u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*const u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut dyn coder::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::option::Item<&mut dyn coder::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 16 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut dyn coder::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u128>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u16>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u32>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, u64>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[[[u8; 4]; 4]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[[u32; 256]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[[u8; 16]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[[u8; 1]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[[u8; 2]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[[u8; 4]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[[u8; 8]]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[i128]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[i16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[i32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[i64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[serde::de::SerdeDecoder<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[serde::ser::LazyEncoder]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<serde::ser::LazyEncoder>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<std::option::Option<&mut dyn coder::Buffer>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::option::Option<&mut dyn coder::Buffer>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u128]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[serde::de::SerdeDecoder<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[serde::ser::LazyEncoder]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<serde::ser::LazyEncoder>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<std::option::Option<&mut dyn coder::Buffer>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[std::option::Option<&mut dyn coder::Buffer>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<&[[[u8; 4]; 4]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u32; 4]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u8; 16]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u8; 1]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u8; 2]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u8; 3]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u8; 4]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[[u8; 8]], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&[u8], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<&mut [u64], bytemuck::PodCastError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<'_, std::vec::Vec<u8>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u128, std::convert::Infallible>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, [[u8; 4]; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, [u32; 256]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, [u8; 16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, [u8; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, [u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, [u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, [u8; 16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, [u8; 1]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, [u8; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, [u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, [u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, serde::de::SerdeDecoder<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, serde::ser::LazyEncoder>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, std::mem::MaybeUninit<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:439:33: 439:38}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/de.rs:74:39: 74:53}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/de.rs:92:57: 92:60}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/ser.rs:141:49: 141:52}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/ser.rs:161:47: 161:50}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 16> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 4> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 4> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 4> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 8> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::array::IntoIter<u8, 8> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::adapters::GenericShunt<'_, std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}>, std::result::Result<std::convert::Infallible, error::Error>> as std::iter::Iterator>::try_fold<(), {closure@std::iter::Iterator::try_for_each::call<[u8; 8], std::ops::ControlFlow<[u8; 8]>, fn([u8; 8]) -> std::ops::ControlFlow<[u8; 8]> {std::ops::ControlFlow::<[u8; 8]>::Break}>::{closure#0}}, std::ops::ControlFlow<[u8; 8]>>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@core::slice::<impl [(std::any::TypeId, buffer::ErasedBox)]>::binary_search_by_key<'_, std::any::TypeId, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/buffer.rs:56:55: 56:63}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<&mut serde::de::SerdeDecoder<'_>, std::result::Result<(), error::Error>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/de.rs:92:57: 92:60}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<(usize, &mut serde::de::SerdeDecoder<'_>), std::result::Result<(), error::Error>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/de.rs:74:39: 74:53}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 16> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 2> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 4> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 4> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 4> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 8> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), usize, {closure@<std::array::IntoIter<u8, 8> as std::iter::Iterator>::fold<(), &mut {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<[[u8; 4]; 3]>`: 12 bytes, alignment: 1 bytes
print-type-size     field `.value`: 12 bytes
print-type-size type: `std::mem::MaybeUninit<[[u8; 4]; 3]>`: 12 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 12 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 12 bytes
print-type-size type: `std::option::Option<(i32, i32)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u32, u32)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ops::ControlFlow<[u8; 8]>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<[u8; 8], std::convert::Infallible>>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<[u8; 8]>, std::convert::Infallible>`: 9 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         field `.0`: 9 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<[u8; 8]>>`: 9 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         field `.0`: 9 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::ControlFlow<[u8; 8]>, std::convert::Infallible>>`: 9 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         field `.0`: 9 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<[u8; 8]>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<[u8; 8], std::num::TryFromIntError>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, std::option::Option<&mut dyn coder::Buffer>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bytemuck::must_cast::Transmute<[u8; 8], usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `bytemuck::must_cast::Transmute<i64, u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `bytemuck::must_cast::Transmute<u64, u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `bytemuck::must_cast::Transmute<usize, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fast::SetOwned<'_, '_, [u8; 16]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fast::SetOwned<'_, '_, [u8; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fast::SetOwned<'_, '_, [u8; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fast::SetOwned<'_, '_, [u8; 8]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fast::SetOwned<'_, '_, bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `fast::SetOwned<'_, '_, u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<serde::de::SerdeDecoder<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<serde::ser::LazyEncoder>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<serde::ser::LazyEncoder>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::BorrowRefMut<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::iter::ByRefSized<'_, std::ops::index_range::IndexRange>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Take<std::iter::RepeatWith<fn() -> serde::de::SerdeDecoder<'_> {<serde::de::SerdeDecoder<'_> as std::default::Default>::default}>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 0 bytes
print-type-size type: `std::iter::Take<std::iter::RepeatWith<fn() -> serde::ser::LazyEncoder {<serde::ser::LazyEncoder as std::default::Default>::default}>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 0 bytes
print-type-size type: `std::iter::Take<std::iter::RepeatWith<fn() -> std::option::Option<&mut dyn coder::Buffer> {<std::option::Option<&mut dyn coder::Buffer> as std::default::Default>::default}>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 8]>`: 8 bytes, alignment: 1 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<serde::ser::LazyEncoder>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<[u8; 8], std::convert::Infallible>`: 8 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::RefCell<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[[u8; 4]; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u32; 256]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 8]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut [u8; 16]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut [u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut [u8; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut [u8; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut [u8; 8]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut fast::FastSlice<'_, fast::Unaligned<bool>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut fast::FastVec<bool>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut fast::FastVec<f32>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut fast::FastVec<u8_char::U8Char>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut serde::de::SerdeDecoder<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut serde::ser::LazyEncoder>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::mem::MaybeUninit<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::RefCell<std::vec::Vec<u8>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<std::option::Option<&mut dyn coder::Buffer>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::array::IntoIter<u8, 16>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::array::IntoIter<u8, 2>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::array::IntoIter<u8, 4>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::array::IntoIter<u8, 8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::RefCell<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn buffer::non_static_type_id::NonStaticAny>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn coder::Buffer>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::any::TypeId, buffer::ErasedBox)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(usize, std::option::Option<usize>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[[u8; 4]; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u32; 256]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 16]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 8]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<bytemuck::PodCastError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<serde::de::SerdeDecoder<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<serde::ser::LazyEncoder>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::borrow::Cow<'_, str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<serde::ser::LazyEncoder>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::option::Option<&mut dyn coder::Buffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8_char::U8Char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(std::any::TypeId, buffer::ErasedBox)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8; 16]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8; 2]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8; 8]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<serde::de::SerdeDecoder<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<serde::ser::LazyEncoder>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<serde::ser::LazyEncoder>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::option::Option<&mut dyn coder::Buffer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8_char::U8Char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::RefCell<std::vec::Vec<u8>>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<serde::ser::LazyEncoder>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::RefCell<std::vec::Vec<u8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/fast.rs:98:32: 98:35}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack.rs:165:34: 165:36}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:354:25: 354:31}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:463:32: 463:34}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:475:23: 475:28}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/ser.rs:88:53: 88:56}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<*const [u8; 8] as std::fmt::Pointer>::fmt::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<*const u8 as std::fmt::Pointer>::fmt::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@alloc::raw_vec::RawVecInner::shrink_unchecked::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, {closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, {closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 16], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 16>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 4], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 4], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 4], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 8], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 8>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 8], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 8>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u128, [u8; 16], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 16], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 16>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 16], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u128, [u8; 2], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u128, [u8; 4], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 4], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u128, [u8; 8], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 8], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 8>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u128>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u16, [u8; 2], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u16>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u32, [u8; 2], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u32, [u8; 4], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 4], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u32>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u64, [u8; 2], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 2], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 2>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 2], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u64, [u8; 4], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 4], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 4>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 4], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u64, [u8; 8], (), {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}, {closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_fold::flatten<[u8; 8], (), {closure@<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::fold::flatten<std::array::IntoIter<u8, 8>, (), {closure@std::iter::Iterator::for_each::call<u8, {closure@std::vec::Vec<u8>::extend_trusted<std::iter::FlatMap<std::slice::Iter<'_, u64>, [u8; 8], {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}>>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, usize, usize, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}>::{closure#0}}, {closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::ops::Range<usize>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::sys::thread_local::native::eager::destroy<std::cell::RefCell<std::vec::Vec<u8>>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::net::SocketAddrV4`: 6 bytes, alignment: 2 bytes
print-type-size     field `.ip`: 4 bytes
print-type-size     field `.port`: 2 bytes
print-type-size type: `std::option::Option<(i16, i16)>`: 6 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u16, u16)>`: 6 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `bytemuck::must_cast::Transmute<[u8; 4], u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Transmute`: 4 bytes
print-type-size         field `.src`: 4 bytes
print-type-size         field `.dst`: 4 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `bytemuck::must_cast::Transmute<i32, u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Transmute`: 4 bytes
print-type-size         field `.src`: 4 bytes
print-type-size         field `.dst`: 4 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `bytemuck::must_cast::Transmute<u32, u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Transmute`: 4 bytes
print-type-size         field `.src`: 4 bytes
print-type-size         field `.dst`: 4 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `core::num::niche_types::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `derive::duration::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<[u8; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 1 bytes
print-type-size     field `.octets`: 4 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 3]>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.value`: 3 bytes
print-type-size type: `std::mem::MaybeUninit<[u8; 3]>`: 3 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 3 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 3 bytes
print-type-size type: `std::option::Option<(i8, i8)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u8, u8)>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `bytemuck::must_cast::Transmute<i16, u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Transmute`: 2 bytes
print-type-size         field `.src`: 2 bytes
print-type-size         field `.dst`: 2 bytes, offset: 0 bytes, alignment: 2 bytes
print-type-size type: `bytemuck::must_cast::Transmute<u16, u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Transmute`: 2 bytes
print-type-size         field `.src`: 2 bytes
print-type-size         field `.dst`: 2 bytes, offset: 0 bytes, alignment: 2 bytes
print-type-size type: `std::cell::UnsafeCell<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::cell::UnsafeCell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `std::sync::atomic::AtomicU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `bytemuck::PodCastError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TargetAlignmentGreaterAndInputNotAligned`: 0 bytes
print-type-size     variant `OutputSliceWouldHaveSlop`: 0 bytes
print-type-size     variant `SizeMismatch`: 0 bytes
print-type-size     variant `AlignmentMismatch`: 0 bytes
print-type-size type: `bytemuck::must_cast::Transmute<i8, u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Transmute`: 1 bytes
print-type-size         field `.src`: 1 bytes
print-type-size         field `.dst`: 1 bytes, offset: 0 bytes, alignment: 1 bytes
print-type-size type: `bytemuck::must_cast::Transmute<u8, u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Transmute`: 1 bytes
print-type-size         field `.src`: 1 bytes
print-type-size         field `.dst`: 1 bytes, offset: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::builders::PadAdapterState`: 1 bytes, alignment: 1 bytes
print-type-size     field `.on_newline`: 1 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `pack::Packing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `_256`: 0 bytes
print-type-size     variant `_16`: 0 bytes
print-type-size     variant `_6`: 0 bytes
print-type-size     variant `_4`: 0 bytes
print-type-size     variant `_3`: 0 bytes
print-type-size     variant `_2`: 0 bytes
print-type-size type: `pack_ints::Packing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `_128`: 0 bytes
print-type-size     variant `_64`: 0 bytes
print-type-size     variant `_32`: 0 bytes
print-type-size     variant `_16`: 0 bytes
print-type-size     variant `_8`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::thread_local::native::eager::State>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::eager::State>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::stdio::unix::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sys::thread_local::native::eager::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Alive`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size type: `u8_char::U8Char`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::fmt::rt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `derive::empty::EmptyCoder`: 0 bytes, alignment: 1 bytes
print-type-size type: `derive::impls::_::TupleDecoder<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `derive::impls::_::TupleEncoder`: 0 bytes, alignment: 1 bytes
print-type-size type: `serde::Never`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::RepeatWith<fn() -> serde::de::SerdeDecoder<'_> {<serde::de::SerdeDecoder<'_> as std::default::Default>::default}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.repeater`: 0 bytes
print-type-size type: `std::iter::RepeatWith<fn() -> serde::ser::LazyEncoder {<serde::ser::LazyEncoder as std::default::Default>::default}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.repeater`: 0 bytes
print-type-size type: `std::iter::RepeatWith<fn() -> std::option::Option<&mut dyn coder::Buffer> {<std::option::Option<&mut dyn coder::Buffer> as std::default::Default>::default}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.repeater`: 0 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[[u8; 4]; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u32; 256]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 16]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 2]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8; 16]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8; 2]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut [u8; 8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut serde::de::SerdeDecoder<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut serde::ser::LazyEncoder>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::mem::MaybeUninit<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::any::TypeId, buffer::ErasedBox)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[serde::de::SerdeDecoder<'_>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[serde::ser::LazyEncoder]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<serde::ser::LazyEncoder>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<std::option::Option<&mut dyn coder::Buffer>>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::option::Option<&mut dyn coder::Buffer>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 16]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 2]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<derive::duration::Nanoseconds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn buffer::non_static_type_id::NonStaticAny>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn coder::Buffer>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<serde::de::SerdeDecoder<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<serde::ser::LazyEncoder>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<(serde::de::SerdeDecoder<'_>, serde::de::SerdeDecoder<'_>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<(serde::ser::LazyEncoder, serde::ser::LazyEncoder)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<serde::de::SerdeDecoder<'_>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<serde::ser::LazyEncoder>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::option::Option<&mut dyn coder::Buffer>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<bool>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<f32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i128>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i16>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i64>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u128>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u16>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u64>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8_char::U8Char>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8_char::U8Char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::stdio::unix::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/buffer.rs:56:55: 56:63}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/consume.rs:50:21: 50:23}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:163:45: 163:49}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:184:29: 184:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:189:43: 189:46}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack.rs:387:36: 387:40}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:156: 104:159}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:206:46: 206:50}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:215:42: 215:46}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:224:42: 224:46}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:229:26: 229:30}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:24:55: 24:58}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:259:43: 259:47}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:271:46: 271:50}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:395:31: 395:43}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:92:67: 92:71}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/variant.rs:45:49: 45:52}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/variant.rs:59:24: 59:27}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/variant.rs:60:18: 60:21}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/rustc/5e17a2a91dd7dbefd8b4a1087c2e42257457deeb/library/std/src/sys/thread_local/native/mod.rs:63:21: 63:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::result::Result<std::vec::Vec<[u8; 8]>, error::Error> as std::iter::FromIterator<std::result::Result<[u8; 8], error::Error>>>::from_iter<std::iter::Map<std::slice::Iter<'_, [u8; 8]>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/pack_ints.rs:104:84: 104:88}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<u64 as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:163:45: 163:49}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::ops::Range<usize>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/int.rs:95:21: 95:24}>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u8>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::rposition::check<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/variant.rs:59:24: 59:27}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::try_for_each::call<[u8; 8], std::ops::ControlFlow<[u8; 8]>, fn([u8; 8]) -> std::ops::ControlFlow<[u8; 8]> {std::ops::ControlFlow::<[u8; 8]>::Break}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::copied::copy_try_fold<usize, usize, std::ops::ControlFlow<usize, usize>, {closure@std::iter::Iterator::rposition::check<usize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/serde/variant.rs:59:24: 59:27}>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, u64, u64, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:163:45: 163:49}, {closure@<u64 as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u8>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:163:45: 163:49}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&u8, usize, usize, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}>::{closure#0}}, {closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u8>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&u8, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitcode-0.6.6/src/length.rs:172:48: 172:53}>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::os_str::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.os_str`: 16 bytes
print-type-size type: `std::path::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error + core::marker::Send + core::marker::Sync + core::panic::UnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error + core::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::NonNull<core::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync + core::panic::UnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error + core::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/itertools.rs:98:9: 98:13}>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 96 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, std::slice::Iter<'_, usize>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.a`: 56 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:111:18: 111:28}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:127:18: 127:28}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:288:18: 288:28}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:96:18: 96:28}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `dimension::dim::Dim<[usize; 6]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.index`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `dimension::dim::Dim<[usize; 5]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.index`: 40 bytes
print-type-size type: `dimension::dim::Dim<dimension::dynindeximpl::IxDynImpl>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.index`: 40 bytes
print-type-size type: `dimension::dynindeximpl::IxDynImpl`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `dimension::dynindeximpl::IxDynRepr<usize>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inline`: 36 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 32 bytes
print-type-size     variant `Alloc`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `dimension::dim::Dim<[usize; 4]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.index`: 32 bytes
print-type-size type: `slice::Slice`: 32 bytes, alignment: 8 bytes
print-type-size     field `.end`: 16 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.step`: 8 bytes
print-type-size type: `slice::SliceInfoElem`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 32 bytes
print-type-size         field `.end`: 16 bytes
print-type-size         field `.start`: 8 bytes
print-type-size         field `.step`: 8 bytes
print-type-size     variant `Index`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `NewAxis`: 0 bytes
print-type-size type: `std::option::Option<dimension::dim::Dim<[usize; 3]>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `arrayformat::FormatOptions`: 24 bytes, alignment: 8 bytes
print-type-size     field `.axis_collapse_limit`: 8 bytes
print-type-size     field `.axis_collapse_limit_next_last`: 8 bytes
print-type-size     field `.axis_collapse_limit_last`: 8 bytes
print-type-size type: `dimension::axes::AxisDescription`: 24 bytes, alignment: 8 bytes
print-type-size     field `.axis`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `dimension::dim::Dim<[usize; 3]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.index`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::iter::Filter<std::ops::Range<usize>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/layout/layoutfmt.rs:22:28: 22:32}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::RangeInclusive<isize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(&usize, &usize, &usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<((&usize, &usize), &usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(isize, isize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<dimension::dim::Dim<[usize; 2]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<alloc::raw_vec::RawVecInner, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `dimension::dim::Dim<[usize; 2]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.index`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<usize>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<usize>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&usize, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<dimension::dim::Dim<[usize; 1]>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[slice::SliceInfoElem]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<usize>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<usize>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<'_, slice::SliceInfoElem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `{closure@std::iter::adapters::filter::filter_try_fold<'_, usize, (), std::result::Result<(), std::fmt::Error>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/layout/layoutfmt.rs:22:28: 22:32}, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/layout/layoutfmt.rs:22:63: 22:69}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::ops::RangeInclusive<i32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `dimension::axis::Axis`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `dimension::dim::Dim<[usize; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `low_level_util::AbortIfPanic`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::RangeToInclusive<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::RangeToInclusive<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<dimension::dim::Dim<[usize; 0]>>`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b> std::ops::FnMut(&'a mut std::fmt::Formatter<'b>, usize) -> std::result::Result<(), std::fmt::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&error::ShapeError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<error::ErrorKind>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<slice::SliceInfoElem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/layout/layoutfmt.rs:22:28: 22:32}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/layout/layoutfmt.rs:22:63: 22:69}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@alloc::raw_vec::RawVecInner::shrink_unchecked::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `layout::Layout`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::RangeFrom<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size type: `std::ops::RangeTo<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeToInclusive<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `dimension::CanIndexCheckMode`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `OwnedMutable`: 0 bytes
print-type-size     variant `ReadOnly`: 0 bytes
print-type-size type: `error::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `IncompatibleShape`: 0 bytes
print-type-size     variant `IncompatibleLayout`: 0 bytes
print-type-size     variant `RangeLimited`: 0 bytes
print-type-size     variant `OutOfBounds`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size type: `error::ShapeError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.repr`: 1 bytes
print-type-size type: `order::Order`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `RowMajor`: 0 bytes
print-type-size     variant `ColumnMajor`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::rt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `dimension::dim::Dim<[usize; 0]>`: 0 bytes, alignment: 8 bytes
print-type-size     field `.index`: 0 bytes
print-type-size type: `private::PrivateMarker`: 0 bytes, alignment: 1 bytes
print-type-size type: `shape_builder::Contiguous`: 0 bytes, alignment: 1 bytes
print-type-size type: `slice::NewAxis`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&slice::SliceInfoElem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<usize>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[usize]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b> std::ops::FnMut(&'a mut std::fmt::Formatter<'b>, usize) -> std::result::Result<(), std::fmt::Error>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/conversion.rs:174:41: 174:44}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:111:18: 111:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:127:18: 127:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:288:18: 288:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:96:18: 96:28}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/itertools.rs:98:9: 98:13}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<isize as std::iter::Sum>::sum<std::iter::Map<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:288:18: 288:28}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}>::{closure#0}}>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&slice::SliceInfoElem, usize, usize, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}>::{closure#0}}, {closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:413:28: 413:31}>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&slice::SliceInfoElem, usize, usize, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}>::{closure#0}}, {closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, slice::SliceInfoElem>, {closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&slice::SliceInfoElem, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/slice.rs:418:28: 418:31}>::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<(&usize, &usize), isize, isize, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:288:18: 288:28}, {closure@<isize as std::iter::Sum>::sum<std::iter::Map<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>, {closure@/Users/jhelland/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ndarray-0.16.1/src/dimension/ndindex.rs:288:18: 288:28}>>::{closure#0}}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::ConstParam`: 456 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.default`: 168 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `syn::GenericParam`: 456 bytes, alignment: 8 bytes
print-type-size     variant `Const`: 456 bytes
print-type-size         field `.0`: 456 bytes
print-type-size     variant `Type`: 328 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `syn::TypeParam`: 320 bytes, alignment: 8 bytes
print-type-size     field `.default`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `syn::Field`: 312 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 224 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.mutability`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 240 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 240 bytes
print-type-size         field `.0`: 240 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 240 bytes, alignment: 8 bytes
print-type-size     field `.data`: 72 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.vis`: 32 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size type: `std::option::Option<syn::Type>`: 224 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Type`: 224 bytes, alignment: 8 bytes
print-type-size     variant `BareFn`: 224 bytes
print-type-size         field `.0`: 224 bytes
print-type-size     variant `Array`: 200 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `syn::TypeBareFn`: 224 bytes, alignment: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.variadic`: 80 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `syn::TypeArray`: 192 bytes, alignment: 8 bytes
print-type-size     field `.len`: 168 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Expr`: 168 bytes, alignment: 8 bytes
print-type-size     variant `MethodCall`: 168 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 160 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Call`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 80 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Binary`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Index`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Cast`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Unary`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Async`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Await`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Block`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Closure`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Const`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `ForLoop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `If`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Infer`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Let`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Loop`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `RawAddr`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Repeat`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Return`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Try`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `TryBlock`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Unsafe`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `While`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Yield`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprStruct`: 168 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `syn::ExprMethodCall`: 160 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.turbofish`: 56 bytes
print-type-size     field `.method`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::TypeParamBound>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::TypeParamBound, syn::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::TraitBound`: 120 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.paren_token`: 16 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `syn::TypeParamBound`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Trait`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `PreciseCapture`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.tokens`: 32 bytes
print-type-size     field `.delimiter`: 16 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::LifetimeParam`: 96 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `std::cell::RefCell<proc_macro::bridge::client::Bridge<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::option::Option<syn::BareVariadic>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::BareVariadic`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.comma`: 8 bytes
print-type-size     field `.name`: 32 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 80 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::Bridge<'_>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `syn::Data`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Union`: 64 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 72 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 56 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::ExprField`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.member`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::option::Option<syn::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 56 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprIndex`: 56 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unnamed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::TypeReference`: 56 bytes, alignment: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.lifetime`: 32 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataEnum`: 48 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprLit`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lit`: 24 bytes
print-type-size type: `syn::ExprParen`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 48 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTuple`: 48 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}::{closure#0}}>::{closure#0}}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}::{closure#0}}>::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}::{closure#0}}>::{closure#0}}>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.op`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}::{closure#0}}>::{closure#0}}`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::option::Option<(syn::Ident, syn::token::Colon)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Lifetime`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 24 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::VisRestricted`: 32 bytes, alignment: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size type: `syn::Visibility`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Public`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `syn::buffer::Entry`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 32 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ident`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `End`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Punct`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::PathSep>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Plus>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `proc_macro2::Group`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro2::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sym`: 16 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::imp::Group`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Fallback`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `proc_macro2::imp::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 24 bytes, alignment: 8 bytes
print-type-size     variant `StaticStr`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, {closure@/Users/jhelland/Documents/repos/smoot/hashable/src/lib.rs:19:52: 19:64}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::PathSep)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Plus)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::Ident`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `syn::Lit`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `CStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::TypeParen`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 24 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::PathSep)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Plus)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `proc_macro2::fallback::Group`: 16 bytes, alignment: 8 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 16 bytes, alignment: 4 bytes
print-type-size     field `.FreeFunctions`: 4 bytes
print-type-size     field `.TokenStream`: 4 bytes
print-type-size     field `.SourceFile`: 4 bytes
print-type-size     field `.Span`: 4 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<*const ()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Paren>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<*const (), std::thread::AccessError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrAssign`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrAssign`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::MacroDelimiter`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Brace`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Bracket`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.entries`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `{closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, {closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}::{closure#0}}>::{closure#0}::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::extra::DelimSpan`: 12 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 12 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::extra::DelimSpanEnum`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.join`: 4 bytes
print-type-size         field `.open`: 4 bytes
print-type-size         field `.close`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::DotDot>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::PathSep>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Brace`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::Bracket`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::DotDotDot`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::Paren`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro2::rcvec::RcVec<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::bridge::client::state::set::RestoreOnDrop`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<*const ()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<*const ()>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Span, proc_macro2::Delimiter)>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Comma>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::rc::Rc<std::vec::Vec<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<*const ()>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<*const ()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `syn::ImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitCStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DotDot`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MinusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PathSep`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PercentEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::PlusEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SlashEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::StarEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::thread::LocalKey<std::cell::Cell<*const ()>>::replace::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroU32Inner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u32>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Minus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Not`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Percent`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Plus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Slash`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `CStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `CStr`: 0 bytes
print-type-size     variant `ErrWithGuar`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::marker::ProcMacroAutoTraits`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::PathSep)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Plus)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::buffer::Entry]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::Rc<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcInner<std::vec::Vec<proc_macro2::TokenTree>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::ExprArray`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAssign`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAsync`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprAwait`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprBreak`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprClosure`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprConst`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprContinue`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprIf`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprInfer`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLet`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprLoop`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprMatch`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRange`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRawAddr`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprRepeat`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprReturn`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTry`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprTryBlock`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprUnsafe`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprWhile`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::ExprYield`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `syn::FieldMutability`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::drops::NoDrop<dyn syn::punctuated::IterTrait<'_, syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::generics::PreciseCapture`: 0 bytes, alignment: 1 bytes
print-type-size     field `._noconstruct`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/Users/jhelland/Documents/repos/smoot/hashable/src/lib.rs:19:52: 19:64}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_hashable}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@proc_macro::bridge::client::state::BRIDGE_STATE::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `xxh3::Xxh3`: 576 bytes, alignment: 64 bytes
print-type-size     field `.buffer`: 256 bytes
print-type-size     field `.acc`: 64 bytes
print-type-size     field `.custom_secret`: 192 bytes
print-type-size     field `.nb_stripes_acc`: 8 bytes
print-type-size     field `.total_len`: 8 bytes
print-type-size     field `.seed`: 8 bytes
print-type-size     field `.buffered_size`: 2 bytes
print-type-size     end padding: 38 bytes
print-type-size type: `xxh3::Xxh3Default`: 384 bytes, alignment: 64 bytes
print-type-size     field `.buffer`: 256 bytes
print-type-size     field `.acc`: 64 bytes
print-type-size     field `.nb_stripes_acc`: 8 bytes
print-type-size     field `.total_len`: 8 bytes
print-type-size     field `.buffered_size`: 2 bytes
print-type-size     end padding: 46 bytes
print-type-size type: `xxh3::Aligned64<[core::mem::MaybeUninit<u8>; 256]>`: 256 bytes, alignment: 64 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `xxh3::Xxh3Builder`: 200 bytes, alignment: 8 bytes
print-type-size     field `.secret`: 192 bytes
print-type-size     field `.seed`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<[u8; 192]>`: 192 bytes, alignment: 1 bytes
print-type-size     field `.value`: 192 bytes
print-type-size type: `core::mem::MaybeUninit<[u8; 192]>`: 192 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 192 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 192 bytes
print-type-size type: `xxh3::Aligned64<[u8; 192]>`: 192 bytes, alignment: 64 bytes
print-type-size     field `.0`: 192 bytes
print-type-size type: `core::mem::ManuallyDrop<[u8; 64]>`: 64 bytes, alignment: 1 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `core::mem::MaybeUninit<[u8; 64]>`: 64 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `xxh3::Acc`: 64 bytes, alignment: 16 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `core::option::Option<core::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `utils::Buffer<*mut u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `core::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::core_arch::macros::SimdShuffleIdx<4>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::core_arch::simd::i32x4`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::core_arch::simd::i64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::core_arch::simd::u64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<core::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::mem::MaybeUninit<core::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::core_arch::macros::SimdShuffleIdx<2>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::core_arch::simd::u64x2::splat::JustOne`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `core::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::MaybeUninit<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `xxh3::Xxh3DefaultBuilder`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::result::Result<[u8; 8], core::array::TryFromSliceError>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `FxHasher`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `seeded_state::FxSeededState`: 8 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 8 bytes
print-type-size type: `core::result::Result<[u8; 4], core::array::TryFromSliceError>`: 5 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `FxBuildHasher`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::array::TryFromSliceError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<&base_unit::BaseUnit, 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<(&std::string::String, &i32), 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<base_unit::BaseUnit, 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<i8, 4096>`: 4096 bytes, alignment: 1 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `core::slice::sort::stable::AlignedStorage<usize, 4096>`: 4096 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.storage`: 4096 bytes
print-type-size type: `registry::registry::_::RegistryDecoder<'_>`: 2080 bytes, alignment: 8 bytes
print-type-size     field `.units`: 504 bytes
print-type-size     field `.root_units`: 440 bytes
print-type-size     field `.dimensions`: 232 bytes
print-type-size     field `.prefix_definitions`: 568 bytes
print-type-size     field `.symbols`: 296 bytes
print-type-size     field `.checksum`: 40 bytes
print-type-size type: `registry::registry::_::RegistryEncoder`: 1392 bytes, alignment: 8 bytes
print-type-size     field `.units`: 336 bytes
print-type-size     field `.symbols`: 208 bytes
print-type-size     field `.root_units`: 280 bytes
print-type-size     field `.dimensions`: 152 bytes
print-type-size     field `.prefix_definitions`: 392 bytes
print-type-size     field `.checksum`: 24 bytes
print-type-size type: `unit::_::UnitDecoder<'_>`: 928 bytes, alignment: 8 bytes
print-type-size     field `.numerator_units`: 400 bytes
print-type-size     field `.denominator_units`: 400 bytes
print-type-size     field `.dimensionality`: 128 bytes
print-type-size type: `unit::_::UnitEncoder`: 608 bytes, alignment: 8 bytes
print-type-size     field `.dimensionality`: 80 bytes
print-type-size     field `.numerator_units`: 264 bytes
print-type-size     field `.denominator_units`: 264 bytes
print-type-size type: `bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 568 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.keys`: 104 bytes
print-type-size     field `.values`: 376 bytes
print-type-size type: `std::mem::ManuallyDrop<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     field `.value`: 528 bytes
print-type-size type: `std::mem::MaybeUninit<[core::slice::sort::stable::drift::DriftsortRun; 66]>`: 528 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 528 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 528 bytes
print-type-size type: `bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit>`: 504 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.keys`: 104 bytes
print-type-size     field `.values`: 312 bytes
print-type-size type: `bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit>`: 440 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.keys`: 40 bytes
print-type-size     field `.values`: 312 bytes
print-type-size type: `bitcode::derive::vec::VecDecoder<'_, base_unit::BaseUnit>`: 400 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.elements`: 312 bytes
print-type-size type: `bitcode::derive::map::MapEncoder<std::string::String, registry::registry_parser::PrefixDefinition>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.keys`: 80 bytes
print-type-size     field `.values`: 264 bytes
print-type-size type: `registry::registry_parser::_::PrefixDefinitionDecoder<'_>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.name`: 104 bytes
print-type-size     field `.multiplier`: 40 bytes
print-type-size     field `.aliases`: 192 bytes
print-type-size     field `.lineno`: 40 bytes
print-type-size type: `bitcode::derive::map::MapEncoder<std::string::String, base_unit::BaseUnit>`: 336 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.keys`: 80 bytes
print-type-size     field `.values`: 208 bytes
print-type-size type: `base_unit::_::BaseUnitDecoder<'_>`: 312 bytes, alignment: 8 bytes
print-type-size     field `.name`: 104 bytes
print-type-size     field `.multiplier`: 40 bytes
print-type-size     field `.dimensionality`: 128 bytes
print-type-size     field `.power`: 40 bytes
print-type-size type: `bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String>`: 296 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.keys`: 104 bytes
print-type-size     field `.values`: 104 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.data`: 192 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `bitcode::derive::map::MapEncoder<i8, base_unit::BaseUnit>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.values`: 208 bytes
print-type-size     field `.keys`: 24 bytes
print-type-size type: `bitcode::derive::vec::VecEncoder<base_unit::BaseUnit>`: 264 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.elements`: 208 bytes
print-type-size     field `.vectored_impl`: 8 bytes
print-type-size type: `registry::registry_parser::_::PrefixDefinitionEncoder`: 264 bytes, alignment: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.multiplier`: 24 bytes
print-type-size     field `.aliases`: 136 bytes
print-type-size     field `.lineno`: 24 bytes
print-type-size type: `bitcode::derive::map::MapDecoder<'_, i8, std::string::String>`: 232 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.keys`: 40 bytes
print-type-size     field `.values`: 104 bytes
print-type-size type: `base_unit::_::BaseUnitEncoder`: 208 bytes, alignment: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.dimensionality`: 80 bytes
print-type-size     field `.multiplier`: 24 bytes
print-type-size     field `.power`: 24 bytes
print-type-size type: `bitcode::derive::map::MapEncoder<std::string::String, std::string::String>`: 208 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.keys`: 80 bytes
print-type-size     field `.values`: 80 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.keys`: 176 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `bitcode::derive::vec::VecDecoder<'_, std::string::String>`: 192 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.elements`: 104 bytes
print-type-size type: `linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 184 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.value`: 144 bytes
print-type-size     field `.next`: 8 bytes
print-type-size     field `.prev`: 8 bytes
print-type-size type: `registry::registry::Registry`: 168 bytes, alignment: 8 bytes
print-type-size     field `.units`: 32 bytes
print-type-size     field `.root_units`: 32 bytes
print-type-size     field `.dimensions`: 32 bytes
print-type-size     field `.prefix_definitions`: 32 bytes
print-type-size     field `.symbols`: 32 bytes
print-type-size     field `.checksum`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<registry::registry::Registry>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.value`: 168 bytes
print-type-size type: `std::mem::MaybeUninit<registry::registry::Registry>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 168 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 168 bytes
print-type-size type: `std::result::Result<registry::registry::Registry, bitcode::Error>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<registry::registry::Registry, error::SmootError>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `{closure@src/registry/registry.rs:139:18: 139:21}`: 168 bytes, alignment: 8 bytes
print-type-size     end padding: 168 bytes
print-type-size type: `{closure@src/parser.rs:82:13: 82:57}`: 160 bytes, alignment: 8 bytes
print-type-size     end padding: 160 bytes
print-type-size type: `{closure@src/parser.rs:87:13: 87:57}`: 160 bytes, alignment: 8 bytes
print-type-size     end padding: 160 bytes
print-type-size type: `{closure@src/parser.rs:95:39: 95:50}`: 160 bytes, alignment: 8 bytes
print-type-size     end padding: 160 bytes
print-type-size type: `{closure@src/parser.rs:96:39: 96:50}`: 160 bytes, alignment: 8 bytes
print-type-size     end padding: 160 bytes
print-type-size type: `bitcode::derive::map::MapEncoder<i8, std::string::String>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.values`: 80 bytes
print-type-size     field `.keys`: 24 bytes
print-type-size type: `peg::RuleResult<registry::registry_parser::UnitDefinition<'_>>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 152 bytes
print-type-size         field `.1`: 144 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `registry::registry_parser::UnitDefinition<'_>`: 144 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.modifiers`: 24 bytes
print-type-size     field `.aliases`: 24 bytes
print-type-size     field `.expression`: 48 bytes
print-type-size     field `.symbol`: 16 bytes
print-type-size     field `.lineno`: 8 bytes
print-type-size type: `std::result::Result<registry::registry_parser::UnitDefinition<'_>, peg::error::ParseError<peg::str::LineCol>>`: 144 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `{closure@src/parser.rs:58:39: 58:50}`: 144 bytes, alignment: 8 bytes
print-type-size     end padding: 144 bytes
print-type-size type: `{closure@src/parser.rs:59:32: 59:43}`: 144 bytes, alignment: 8 bytes
print-type-size     end padding: 144 bytes
print-type-size type: `{closure@src/parser.rs:65:39: 65:50}`: 144 bytes, alignment: 8 bytes
print-type-size     end padding: 144 bytes
print-type-size type: `bitcode::derive::vec::VecEncoder<std::string::String>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.elements`: 80 bytes
print-type-size     field `.vectored_impl`: 8 bytes
print-type-size type: `bitcode::derive::vec::VecDecoder<'_, i8>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.elements`: 40 bytes
print-type-size type: `ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 128 bytes
print-type-size type: `ndarray::iter::Iter<'_, i64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 128 bytes
print-type-size type: `ndarray::iterators::Baseiter<f64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.index`: 40 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ndarray::iterators::Baseiter<i64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.index`: 40 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 128 bytes
print-type-size     field `.life`: 0 bytes
print-type-size type: `ndarray::iterators::ElementsBase<'_, i64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 128 bytes
print-type-size     field `.life`: 0 bytes
print-type-size type: `ndarray::iterators::ElementsBaseMut<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 128 bytes
print-type-size     field `.life`: 0 bytes
print-type-size type: `ndarray::iterators::ElementsRepr<std::slice::Iter<'_, f64>, ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Counted`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `ndarray::iterators::ElementsRepr<std::slice::Iter<'_, i64>, ndarray::iterators::ElementsBase<'_, i64, ndarray::Dim<ndarray::IxDynImpl>>>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Counted`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:221:13: 234:14}`: 128 bytes, alignment: 8 bytes
print-type-size     end padding: 128 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::OwnedRepr<i64>, ndarray::Dim<ndarray::IxDynImpl>>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `peg::RuleResult<registry::registry_parser::DimensionDefinition<'_>>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 112 bytes
print-type-size         field `.1`: 104 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `bitcode::str::StrDecoder<'_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 88 bytes
print-type-size     field `.strings`: 16 bytes
print-type-size type: `registry::registry_parser::DimensionDefinition<'_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.modifiers`: 24 bytes
print-type-size     field `.aliases`: 24 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.dimension`: 16 bytes
print-type-size     field `.symbol`: 16 bytes
print-type-size     field `.lineno`: 8 bytes
print-type-size type: `std::option::Option<registry::registry_parser::DimensionDefinition<'_>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<registry::registry_parser::DimensionDefinition<'_>, peg::error::ParseError<peg::str::LineCol>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:200:21: 200:74}`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `registry::registry::UnitAliasData<'_>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.aliases`: 24 bytes
print-type-size     field `.modifiers`: 24 bytes
print-type-size     field `.lineno`: 8 bytes
print-type-size     field `.symbol`: 16 bytes
print-type-size type: `std::option::Option<registry::registry::UnitAliasData<'_>>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:198:21: 198:69}`: 96 bytes, alignment: 8 bytes
print-type-size     end padding: 96 bytes
print-type-size type: `bitcode::length::LengthDecoder<'_>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.small`: 40 bytes
print-type-size     field `.large`: 40 bytes
print-type-size     field `.sum`: 8 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::ViewRepr<&f64>, ndarray::Dim<ndarray::IxDynImpl>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::ViewRepr<&i64>, ndarray::Dim<ndarray::IxDynImpl>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::ViewRepr<&mut f64>, ndarray::Dim<ndarray::IxDynImpl>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `peg::RuleResult<quantity::Quantity<f64, f64>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 88 bytes
print-type-size         field `.1`: 80 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, (linked_hash_map::LinkedHashMap<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::vec::Vec<registry::registry_parser::DimensionDefinition<'_>>)>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<(linked_hash_map::LinkedHashMap<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::vec::Vec<registry::registry_parser::DimensionDefinition<'_>>), error::SmootError>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `{closure@src/parser.rs:100:51: 100:65}`: 88 bytes, alignment: 8 bytes
print-type-size     end padding: 88 bytes
print-type-size type: `{closure@src/parser.rs:99:52: 99:66}`: 88 bytes, alignment: 8 bytes
print-type-size     end padding: 88 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:242:13: 245:14}`: 88 bytes, alignment: 8 bytes
print-type-size     end padding: 88 bytes
print-type-size type: `bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.elements`: 24 bytes
print-type-size     field `.vectored_impl`: 8 bytes
print-type-size type: `bitcode::derive::vec::VecEncoder<i8>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.lengths`: 48 bytes
print-type-size     field `.elements`: 24 bytes
print-type-size     field `.vectored_impl`: 8 bytes
print-type-size type: `bitcode::str::StrEncoder`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `ndarray::StrideShape<ndarray::Dim<ndarray::IxDynImpl>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 40 bytes
print-type-size type: `peg::RuleResult<unit::Unit>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 80 bytes
print-type-size         field `.1`: 72 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `quantity::Quantity<f64, f64>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.unit`: 72 bytes
print-type-size     field `.magnitude`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Map<std::str::Lines<'_>, {closure@src/registry/registry.rs:201:18: 201:24}>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::iter::Enumerate<std::iter::Map<std::str::Lines<'_>, {closure@src/registry/registry.rs:201:18: 201:24}>>, {closure@src/registry/registry.rs:203:18: 203:34}>, {closure@src/registry/registry.rs:204:21: 204:32}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::iter::Map<std::str::Lines<'_>, {closure@src/registry/registry.rs:201:18: 201:24}>>, {closure@src/registry/registry.rs:203:18: 203:34}>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 80 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::result::Result<(f64, unit::Unit), error::SmootError>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 64 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(f64, unit::Unit), peg::error::ParseError<peg::str::LineCol>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 64 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<quantity::Quantity<f64, f64>, &str>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<quantity::Quantity<f64, f64>, error::SmootError>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<quantity::Quantity<f64, f64>, peg::error::ParseError<peg::str::LineCol>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `{closure@src/parser.rs:102:38: 102:43}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:103:44: 103:50}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:104:57: 104:65}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:60:43: 60:72}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:61:36: 61:65}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:62:43: 62:72}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:63:36: 63:65}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:66:43: 66:72}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:67:43: 67:72}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:77:13: 77:51}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:92:42: 92:47}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:93:42: 93:47}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `{closure@src/parser.rs:97:74: 97:83}`: 80 bytes, alignment: 8 bytes
print-type-size     end padding: 80 bytes
print-type-size type: `core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `peg::RuleResult<registry::registry_parser::PrefixDefinition>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 72 bytes
print-type-size         field `.1`: 64 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `std::collections::btree_map::IntoIter<&str, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::hash::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::iter::Map<std::str::Lines<'_>, {closure@src/registry/registry.rs:201:18: 201:24}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::str::SplitInclusive<'_, char>, core::str::LinesMap>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<unit::Unit>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::mem::MaybeUninit<unit::Unit>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 72 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 72 bytes
print-type-size type: `std::option::Option<unit::Unit>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<unit::Unit, &str>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<unit::Unit, error::SmootError>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<unit::Unit, peg::error::ParseError<peg::str::LineCol>>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::str::Lines<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::SplitInclusive<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `unit::Unit`: 72 bytes, alignment: 8 bytes
print-type-size     field `.numerator_units`: 24 bytes
print-type-size     field `.denominator_units`: 24 bytes
print-type-size     field `.dimensionality`: 24 bytes
print-type-size type: `{closure@src/parser.rs:71:34: 71:39}`: 72 bytes, alignment: 8 bytes
print-type-size     end padding: 72 bytes
print-type-size type: `{closure@src/parser.rs:72:62: 72:70}`: 72 bytes, alignment: 8 bytes
print-type-size     end padding: 72 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     field `.value`: 66 bytes
print-type-size type: `std::mem::MaybeUninit<[u8; 66]>`: 66 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 66 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 66 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `base_unit::BaseUnit`: 64 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.dimensionality`: 24 bytes
print-type-size     field `.multiplier`: 8 bytes
print-type-size     field `.power`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `bitcode::fast::Unaligned<base_unit::BaseUnit>`: 64 bytes, alignment: 1 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `linked_hash_map::LinkedHashMap<std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.free`: 8 bytes
print-type-size type: `registry::registry_parser::PrefixDefinition`: 64 bytes, alignment: 8 bytes
print-type-size     field `.name`: 24 bytes
print-type-size     field `.aliases`: 24 bytes
print-type-size     field `.multiplier`: 8 bytes
print-type-size     field `.lineno`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 64]>`: 64 bytes, alignment: 1 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 64]>`: 64 bytes, alignment: 1 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<base_unit::BaseUnit>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<registry::registry_parser::PrefixDefinition>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 64]>`: 64 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 64]>`: 64 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<base_unit::BaseUnit>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<registry::registry_parser::PrefixDefinition>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, base_unit::BaseUnit>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<base_unit::BaseUnit>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<registry::registry_parser::PrefixDefinition>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<base_unit::BaseUnit, error::SmootError>>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<base_unit::BaseUnit, error::SmootError>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<registry::registry_parser::PrefixDefinition, peg::error::ParseError<peg::str::LineCol>>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:203:21: 203:79}`: 64 bytes, alignment: 8 bytes
print-type-size     end padding: 64 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 24 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `peg::RuleResult<registry::registry_parser::ParseTree>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 56 bytes
print-type-size         field `.1`: 48 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `std::iter::Rev<std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::IterMut<'_, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size type: `std::iter::Zip<std::iter::Rev<std::slice::Iter<'_, usize>>, std::iter::Rev<std::slice::Iter<'_, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::iter::Rev<std::slice::IterMut<'_, usize>>, std::iter::Rev<std::slice::Iter<'_, usize>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, base_unit::BaseUnit>, std::slice::Iter<'_, base_unit::BaseUnit>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::Iter<'_, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, usize>, std::slice::IterMut<'_, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<'_, usize>, std::slice::Iter<'_, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&str, peg::error::ParseError<peg::str::LineCol>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<i32, peg::error::ParseError<peg::str::LineCol>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<registry::registry_parser::ParseTree, peg::error::ParseError<peg::str::LineCol>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:250:13: 256:14}`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:263:13: 270:14}`: 56 bytes, alignment: 8 bytes
print-type-size     end padding: 56 bytes
print-type-size type: `bitcode::length::LengthEncoder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.small`: 24 bytes
print-type-size     field `.large`: 24 bytes
print-type-size type: `core::fmt::rt::Placeholder`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `error::SmootError`: 48 bytes, alignment: 8 bytes
print-type-size     variant `IncompatibleUnitTypes`: 48 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `InvalidOperation`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NoSuchElement`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `DimensionError`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `ParseTreeError`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `ExpressionError`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `CacheError`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `FileError`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `InvalidArrayDimensionality`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MismatchedArrayShape`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::map::HashMap<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::hash::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<[usize; 1]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.dim`: 8 bytes
print-type-size     field `.strides`: 8 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::OwnedRepr<i64>, ndarray::Dim<[usize; 1]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.dim`: 8 bytes
print-type-size     field `.strides`: 8 bytes
print-type-size type: `ndarray::Shape<ndarray::Dim<ndarray::IxDynImpl>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.dim`: 40 bytes
print-type-size     field `.strides`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `peg::error::ErrorState`: 48 bytes, alignment: 8 bytes
print-type-size     field `.max_err_pos`: 8 bytes
print-type-size     field `.suppress_fail`: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size     field `.reparsing_on_error`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `peg::error::ParseError<peg::str::LineCol>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.location`: 24 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size type: `registry::registry_parser::ParseTree`: 48 bytes, alignment: 8 bytes
print-type-size     field `.val`: 32 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `std::collections::HashMap<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size type: `std::iter::Cloned<std::iter::FlatMap<std::slice::Iter<'_, base_unit::BaseUnit>, std::slice::Iter<'_, i8>, {closure@src/unit.rs:250:27: 250:30}>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.it`: 48 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, base_unit::BaseUnit>, std::slice::Iter<'_, i8>, {closure@src/unit.rs:250:27: 250:30}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, base_unit::BaseUnit>, std::slice::Iter<'_, i8>, {closure@src/unit.rs:255:27: 255:30}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::iter::Map<std::iter::FlatMap<std::slice::Iter<'_, base_unit::BaseUnit>, std::slice::Iter<'_, i8>, {closure@src/unit.rs:255:27: 255:30}>, {closure@src/unit.rs:256:22: 256:25}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:250:27: 250:30}>, std::slice::Iter<'_, i8>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.frontiter`: 16 bytes
print-type-size     field `.backiter`: 16 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:255:27: 255:30}>, std::slice::Iter<'_, i8>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.frontiter`: 16 bytes
print-type-size     field `.backiter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<registry::registry_parser::ParseTree>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<registry::registry_parser::ParseTree>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, &base_unit::BaseUnit>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, &mut registry::registry_parser::PrefixDefinition>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, &mut registry::registry_parser::UnitDefinition<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, &registry::registry_parser::UnitDefinition<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, &std::boxed::Box<registry::registry_parser::ParseTree>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, f64>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, std::string::String>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>, u64>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::SmootError>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<&base_unit::BaseUnit, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&mut registry::registry_parser::PrefixDefinition, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&mut registry::registry_parser::UnitDefinition<'_>, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&registry::registry_parser::UnitDefinition<'_>, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&std::boxed::Box<registry::registry_parser::ParseTree>, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<f64, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `std::result::Result<std::string::String, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<u64, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<usize, error::SmootError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size     field `.utf8_size`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:205:21: 205:64}`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:207:54: 207:62}`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `bitcode::fast::CowSlice<'_, [u8; 1]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `bitcode::fast::CowSlice<'_, [u8; 4]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `bitcode::fast::CowSlice<'_, [u8; 8]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `bitcode::fast::CowSlice<'_, u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size     field `.slice`: 16 bytes
print-type-size type: `bitcode::int::IntDecoder<'_, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `bitcode::int::IntDecoder<'_, i8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `bitcode::int::IntDecoder<'_, u64>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `bitcode::int::IntDecoder<'_, usize>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `hashbrown::map::Iter<'_, i8, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::map::Iter<'_, i8, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::map::Iter<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::map::Iter<'_, std::string::String, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::map::Iter<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::map::Iter<'_, std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawIter<(i8, base_unit::BaseUnit)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(i8, std::string::String)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, base_unit::BaseUnit)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, i32)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, registry::registry_parser::PrefixDefinition)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, std::string::String)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, std::string::String, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, std::string::String, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `ndarray::Dim<ndarray::IxDynImpl>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.index`: 40 bytes
print-type-size type: `ndarray::IxDynImpl`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `ndarray::dimension::dynindeximpl::IxDynRepr<usize>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inline`: 36 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 32 bytes
print-type-size     variant `Alloc`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `ndarray::shape_builder::Strides<ndarray::Dim<ndarray::IxDynImpl>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `C`: 0 bytes
print-type-size     variant `F`: 0 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, std::string::String, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, i8, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, i8, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, std::string::String, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Keys<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, std::string::String, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, std::string::String, i32>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, std::string::String, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Values<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Cloned<std::collections::hash_map::Keys<'_, std::string::String, base_unit::BaseUnit>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.it`: 40 bytes
print-type-size type: `std::option::Option<ndarray::Dim<ndarray::IxDynImpl>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size type: `std::vec::Drain<'_, base_unit::BaseUnit>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<&base_unit::BaseUnit>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<(&std::string::String, &i32)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<base_unit::BaseUnit>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<i8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `core::slice::sort::stable::quicksort::PartitionState<usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.scratch_base`: 8 bytes
print-type-size     field `.scan`: 8 bytes
print-type-size     field `.num_left`: 8 bytes
print-type-size     field `.scratch_rev`: 8 bytes
print-type-size type: `hashbrown::map::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, i32, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 0 bytes
print-type-size type: `hashbrown::raw::FullBucketsIndices`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.group_first_index`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(i8, base_unit::BaseUnit)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(i8, std::string::String)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, base_unit::BaseUnit)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, i32)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, registry::registry_parser::PrefixDefinition)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, std::string::String)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(i8, base_unit::BaseUnit)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(i8, std::string::String)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, i32)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, registry::registry_parser::PrefixDefinition)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, std::string::String)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTableInner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `linked_hash_map::Entry<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `linked_hash_map::VacantEntry<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.map`: 8 bytes
print-type-size type: `peg::RuleResult<(&str, f64)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Matched`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::vec::Vec<(&str, f64)>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 32 bytes
print-type-size         field `.1`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `registry::registry_parser::NodeData`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Op`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Symbol`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Dimension`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Decimal`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Integer`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::array::IntoIter<usize, 2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.alive`: 16 bytes
print-type-size type: `std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::collections::HashMap<std::string::String, i32, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::ops::Range<usize>, {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}>, {closure@std::iter::Iterator::min_by_key::key<usize, isize, {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}>::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<&str>, fn(&str) -> std::string::String {<std::string::String as std::convert::From<&str>>::from}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(&std::string::String, &i32)>, {closure@src/unit.rs:175:22: 175:30}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<i8>, {closure@src/base_unit.rs:295:56: 295:59}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step_minus_one`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, base_unit::BaseUnit>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 32]>`: 32 bytes, alignment: 1 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 32]>`: 32 bytes, alignment: 1 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::IntoIter<&base_unit::BaseUnit>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 32]>`: 32 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 32]>`: 32 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(&[base_unit::BaseUnit], &[base_unit::BaseUnit])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[bitcode::u8_char::U8Char], &[bitcode::u8_char::U8Char])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[i8], &[i8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&[std::string::String], &[std::string::String])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [&base_unit::BaseUnit], &mut [&base_unit::BaseUnit])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [(&std::string::String, &i32)], &mut [(&std::string::String, &i32)])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [base_unit::BaseUnit], &mut [base_unit::BaseUnit])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [i8], &mut [i8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut [usize], &mut [usize])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<unit::Dimensionality>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::vec::IntoIter<&base_unit::BaseUnit>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<&str>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<(&std::string::String, &i32)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<base_unit::BaseUnit>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<i8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::IntoIter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `std::vec::Vec<T, A>::retain_mut::BackshiftOnDrop<'_, base_unit::BaseUnit, std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size     field `.processed_len`: 8 bytes
print-type-size     field `.deleted_cnt`: 8 bytes
print-type-size     field `.original_len`: 8 bytes
print-type-size type: `std::vec::Vec<T, A>::retain_mut::BackshiftOnDrop<'_, i8, std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size     field `.processed_len`: 8 bytes
print-type-size     field `.deleted_cnt`: 8 bytes
print-type-size     field `.original_len`: 8 bytes
print-type-size type: `unit::Dimensionality`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {<f64 as num_traits::Float>::round}>::{closure#0}}, f64>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::ceil}>::{closure#0}}, f64>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::floor}>::{closure#0}}, f64>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::trunc}>::{closure#0}}, f64>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBase<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, {closure@src/utils.rs:55:19: 55:22}>::{closure#0}}, f64>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBase<'_, i64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, i64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<i64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<i64, {closure@src/utils.rs:60:19: 60:22}>::{closure#0}}, i64>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {<f64 as num_traits::Float>::round}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::ceil}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::floor}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::trunc}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, f64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, {closure@src/utils.rs:55:19: 55:22}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<ndarray::iter::Iter<'_, i64, ndarray::Dim<ndarray::IxDynImpl>>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<i64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<i64, {closure@src/utils.rs:60:19: 60:22}>::{closure#0}}, i64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<std::slice::Iter<'_, f64>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {<f64 as num_traits::Float>::round}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<std::slice::Iter<'_, f64>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::ceil}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<std::slice::Iter<'_, f64>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::floor}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<std::slice::Iter<'_, f64>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::trunc}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<std::slice::Iter<'_, f64>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, {closure@src/utils.rs:55:19: 55:22}>::{closure#0}}, f64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@ndarray::iterators::to_vec_mapped<std::slice::Iter<'_, i64>, {closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<i64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<i64, {closure@src/utils.rs:60:19: 60:22}>::{closure#0}}, i64>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@src/parser.rs:55:15: 55:25}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@src/parser.rs:90:15: 90:25}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@src/registry/registry.rs:590:38: 590:56}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:166:15: 166:25}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:196:15: 196:25}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &str, &str, (), std::ops::ControlFlow<(usize, &str)>, {closure@src/registry/registry.rs:201:18: 201:24}, {closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &str, (), std::ops::ControlFlow<(usize, &str)>, {closure@std::iter::adapters::map::map_try_fold<'_, (usize, &str), (usize, &str), (), std::ops::ControlFlow<(usize, &str)>, {closure@src/registry/registry.rs:203:18: 203:34}, {closure@std::iter::Iterator::find::check<(usize, &str), &mut {closure@src/registry/registry.rs:204:21: 204:32}>::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Root`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `bitcode::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `bitcode::fast::FastVec<base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<bitcode::u8_char::U8Char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastVec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::Unaligned<std::string::String>`: 24 bytes, alignment: 1 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `bitcode::int::IntEncoder<i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `bitcode::int::IntEncoder<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `bitcode::int::IntEncoder<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `bitcode::int::IntEncoder<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `bitcode::u8_char::U8CharEncoder`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<&base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<(&std::string::String, &i32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::shared::smallsort::CopyOnDrop<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<&base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<(&std::string::String, &i32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `core::slice::sort::stable::merge::MergeState<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dst`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, i8, base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `hashbrown::rustc_entry::RustcEntry<'_, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, i8, base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `hashbrown::rustc_entry::RustcVacantEntry<'_, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size     field `.key`: 8 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `linked_hash_map::Iter<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.head`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.remaining`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `linked_hash_map::Keys<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `linked_hash_map::Qey<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::ViewRepr<&f64>, ndarray::Dim<[usize; 1]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.dim`: 8 bytes
print-type-size     field `.strides`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::ViewRepr<&i64>, ndarray::Dim<[usize; 1]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.dim`: 8 bytes
print-type-size     field `.strides`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `ndarray::ArrayBase<ndarray::ViewRepr<&mut f64>, ndarray::Dim<[usize; 1]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.dim`: 8 bytes
print-type-size     field `.strides`: 8 bytes
print-type-size     field `.data`: 0 bytes
print-type-size type: `ndarray::OwnedRepr<f64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size type: `ndarray::OwnedRepr<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size type: `peg::RuleResult<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 24 bytes
print-type-size         field `.1`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<f64>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Matched`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<std::option::Option<f64>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Matched`: 24 bytes
print-type-size         field `.1`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::error::ExpectedSet`: 24 bytes, alignment: 8 bytes
print-type-size     field `.expected`: 24 bytes
print-type-size type: `peg::str::LineCol`: 24 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `registry::registry_parser::Operator`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Invalid`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Mul`: 0 bytes
print-type-size     variant `Div`: 0 bytes
print-type-size     variant `Pow`: 0 bytes
print-type-size     variant `Sqrt`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size     variant `AssignAlias`: 0 bytes
print-type-size type: `std::borrow::Cow<'_, str>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Borrowed`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::collections::BTreeSet<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, i8, base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash_map::Entry<'_, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Occupied`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, i8, base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.base`: 24 bytes
print-type-size type: `std::collections::hash_map::VacantEntry<'_, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.base`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.options`: 8 bytes
print-type-size type: `std::io::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Cloned<linked_hash_map::Keys<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.it`: 24 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::IterMut<'_, usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::ops::Range<usize>, {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<bitcode::fast::FastVec<base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<bitcode::fast::FastVec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<core::slice::sort::shared::smallsort::CopyOnDrop<&base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<core::slice::sort::shared::smallsort::CopyOnDrop<(&std::string::String, &i32)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<core::slice::sort::shared::smallsort::CopyOnDrop<base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<core::slice::sort::shared::smallsort::CopyOnDrop<i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<core::slice::sort::shared::smallsort::CopyOnDrop<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<&str, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(&std::string::String, &i32)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<bitcode::u8_char::U8Char>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<f64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<base_unit::BaseUnit>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<i8>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &str), std::convert::Infallible>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(usize, &str), std::convert::Infallible>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (isize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, bitcode::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(isize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), bitcode::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<alloc::raw_vec::RawVecInner, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, bitcode::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::hash::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::string::String, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::vec::Vec<u8>, std::io::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::slice::Chunks<'_, base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::slice::Chunks<'_, bitcode::u8_char::U8Char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::slice::Chunks<'_, i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::slice::Chunks<'_, std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::thread_local::native::lazy::State<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Alive`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Initial`: 0 bytes
print-type-size     variant `Destroyed`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::local_impl::LazyStorage<std::cell::Cell<(u64, u64)>, !>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.state`: 24 bytes
print-type-size type: `std::vec::Vec<&base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&std::string::String, &i32)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&str, f64)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<()>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 1]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 4]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<[u8; 8]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<base_unit::BaseUnit>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<bitcode::u8_char::U8Char>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<f64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<registry::registry_parser::DimensionDefinition<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &str, (), std::ops::ControlFlow<(usize, &str)>, {closure@std::iter::adapters::map::map_try_fold<'_, (usize, &str), (usize, &str), (), std::ops::ControlFlow<(usize, &str)>, {closure@src/registry/registry.rs:203:18: 203:34}, {closure@std::iter::Iterator::find::check<(usize, &str), &mut {closure@src/registry/registry.rs:204:21: 204:32}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@src/parser.rs:36:13: 42:14}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@src/parser.rs:55:15: 55:25}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@src/parser.rs:90:15: 90:25}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@src/registry/registry.rs:415:18: 415:25}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@src/unit.rs:277:38: 277:44}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@src/unit.rs:478:28: 478:56}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<base_unit::BaseUnit, {closure@src/unit.rs:277:38: 277:44}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<base_unit::BaseUnit, {closure@std::vec::Vec<base_unit::BaseUnit>::extend_trusted<std::iter::Cloned<std::slice::Iter<'_, base_unit::BaseUnit>>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<i8, {closure@std::vec::Vec<i8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, i8>, {closure@src/base_unit.rs:196:53: 196:56}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<i8, {closure@std::vec::Vec<i8>::extend_trusted<std::iter::Map<std::vec::IntoIter<i8>, {closure@src/base_unit.rs:295:56: 295:59}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<i8, {closure@std::vec::Vec<i8>::extend_trusted<std::iter::RepeatN<i8>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<std::string::String, {closure@std::vec::Vec<std::string::String>::extend_trusted<std::iter::Map<std::vec::IntoIter<&str>, fn(&str) -> std::string::String {<std::string::String as std::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&base_unit::BaseUnit, base_unit::BaseUnit, (), for<'a> fn(&'a base_unit::BaseUnit) -> base_unit::BaseUnit {<base_unit::BaseUnit as std::clone::Clone>::clone}, {closure@std::iter::Iterator::for_each::call<base_unit::BaseUnit, {closure@std::vec::Vec<base_unit::BaseUnit>::extend_trusted<std::iter::Cloned<std::slice::Iter<'_, base_unit::BaseUnit>>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&i8, i8, (), {closure@src/base_unit.rs:196:53: 196:56}, {closure@std::iter::Iterator::for_each::call<i8, {closure@std::vec::Vec<i8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, i8>, {closure@src/base_unit.rs:196:53: 196:56}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&str, std::string::String, (), fn(&str) -> std::string::String {<std::string::String as std::convert::From<&str>>::from}, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@std::vec::Vec<std::string::String>::extend_trusted<std::iter::Map<std::vec::IntoIter<&str>, fn(&str) -> std::string::String {<std::string::String as std::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<i8, i8, (), {closure@src/base_unit.rs:295:56: 295:59}, {closure@std::iter::Iterator::for_each::call<i8, {closure@std::vec::Vec<i8>::extend_trusted<std::iter::Map<std::vec::IntoIter<i8>, {closure@src/base_unit.rs:295:56: 295:59}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, (i8, base_unit::BaseUnit), (), {closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(i8, base_unit::BaseUnit), {closure@<hashbrown::map::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher> as std::iter::Extend<(i8, base_unit::BaseUnit)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, (i8, std::string::String), (), {closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(i8, std::string::String), {closure@<hashbrown::map::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher> as std::iter::Extend<(i8, std::string::String)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, (std::string::String, base_unit::BaseUnit), (), {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(std::string::String, base_unit::BaseUnit), {closure@<hashbrown::map::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, base_unit::BaseUnit)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, (std::string::String, registry::registry_parser::PrefixDefinition), (), {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(std::string::String, registry::registry_parser::PrefixDefinition), {closure@<hashbrown::map::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, registry::registry_parser::PrefixDefinition)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, (std::string::String, std::string::String), (), {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}, {closure@std::iter::Iterator::for_each::call<(std::string::String, std::string::String), {closure@<hashbrown::map::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, std::string::String)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &&base_unit::BaseUnit, std::string::String, (), std::ops::try_trait::NeverShortCircuit<()>, {closure@src/unit.rs:199:18: 199:21}, {closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), std::string::String, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:199:18: 199:21}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, &&base_unit::BaseUnit, std::string::String, (), std::ops::try_trait::NeverShortCircuit<()>, {closure@src/unit.rs:214:18: 214:21}, {closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), std::string::String, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:214:18: 214:21}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, (&std::string::String, &i32), std::string::String, (), std::ops::try_trait::NeverShortCircuit<()>, {closure@src/unit.rs:175:22: 175:30}, {closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), std::string::String, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::vec::IntoIter<(&std::string::String, &i32)>, {closure@src/unit.rs:175:22: 175:30}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), i8, {closure@std::iter::Iterator::for_each::call<i8, {closure@std::vec::Vec<i8>::extend_trusted<std::iter::RepeatN<i8>>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<&base_unit::BaseUnit>::extend_trusted<std::slice::Iter<'_, base_unit::BaseUnit>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<base_unit::BaseUnit>::extend_trusted<std::iter::Cloned<std::slice::Iter<'_, base_unit::BaseUnit>>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<i8>::extend_trusted<std::iter::Map<std::slice::Iter<'_, i8>, {closure@src/base_unit.rs:196:53: 196:56}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<i8>::extend_trusted<std::iter::Map<std::vec::IntoIter<i8>, {closure@src/base_unit.rs:295:56: 295:59}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<i8>::extend_trusted<std::iter::RepeatN<i8>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `{closure@std::vec::Vec<std::string::String>::extend_trusted<std::iter::Map<std::vec::IntoIter<&str>, fn(&str) -> std::string::String {<std::string::String as std::convert::From<&str>>::from}>>::{closure#0}}`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, base_unit::BaseUnit, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<&base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&std::string::String, &i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&str, f64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<()>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 1]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<[u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<bitcode::u8_char::U8Char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<bool>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<registry::registry_parser::DimensionDefinition<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `alloc::raw_vec::RawVecInner`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, [u8; 1]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, [u8; 4]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, [u8; 8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, bitcode::fast::Unaligned<base_unit::BaseUnit>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, bitcode::fast::Unaligned<i8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, bitcode::fast::Unaligned<std::string::String>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `bitcode::fast::FastSlice<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `._spooky`: 0 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::Argument<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 16 bytes
print-type-size type: `core::fmt::rt::ArgumentType<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Placeholder`: 16 bytes
print-type-size         field `.value`: 8 bytes
print-type-size         field `.formatter`: 8 bytes
print-type-size         field `._lifetime`: 0 bytes
print-type-size     variant `Count`: 10 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size type: `core::fmt::rt::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Param`: 14 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Is`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::control::group::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::control::group::sse2::Group::static_empty::AlignedTags`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.tags`: 16 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, i8, base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, std::string::String, base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, std::string::String, i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `hashbrown::rustc_entry::RustcOccupiedEntry<'_, std::string::String, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.table`: 8 bytes
print-type-size type: `linked_hash_map::OccupiedEntry<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.entry`: 8 bytes
print-type-size     field `.map`: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `peg::RuleResult<()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Matched`: 8 bytes
print-type-size         field `.1`: 0 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<char>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Matched`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `peg::RuleResult<i32>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Matched`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Failed`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[base_unit::BaseUnit]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::Bound<&usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, i8, base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, std::string::String, base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, std::string::String, i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, std::string::String, registry::registry_parser::PrefixDefinition>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::collections::hash_map::OccupiedEntry<'_, std::string::String, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.base`: 16 bytes
print-type-size type: `std::ffi::os_str::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.os_str`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::hash::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<'_, base_unit::BaseUnit>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<'_, registry::registry_parser::DimensionDefinition<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<'_, i8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, &str>, {closure@src/registry/registry.rs:279:45: 279:50}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, usize>, {closure@ndarray::dimension::size_of_shape_checked<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:250:27: 250:30}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:255:27: 255:30}>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Cloned<std::slice::Iter<'_, registry::registry_parser::DimensionDefinition<'_>>>, fn(registry::registry_parser::DimensionDefinition<'_>) -> registry::registry::UnitAliasData<'_> {<registry::registry::UnitAliasData<'_> as std::convert::From<registry::registry_parser::DimensionDefinition<'_>>>::from}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:199:18: 199:21}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:214:18: 214:21}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, for<'a> fn(&'a base_unit::BaseUnit) -> base_unit::BaseUnit {<base_unit::BaseUnit as std::clone::Clone>::clone}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:250:27: 250:30}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:255:27: 255:30}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, i8>, {closure@src/base_unit.rs:196:53: 196:56}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, i8>, {closure@src/base_unit.rs:69:18: 69:23}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::iter::RepeatN<i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.element`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::IterMut<'_, usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<(&std::string::String, &i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<<T as std::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec::DropGuard<'_, base_unit::BaseUnit, std::alloc::Global>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 16]>`: 16 bytes, alignment: 1 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 16]>`: 16 bytes, alignment: 1 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[base_unit::BaseUnit]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[i8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<(&std::string::String, &i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 16]>`: 16 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 16]>`: 16 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<core::core_arch::simd::i8x16>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::arch::x86_64::__m128i>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ndarray::ShapeError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<*mut &base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*mut (&std::string::String, &i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*mut base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*mut i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<*mut usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::index_range::IndexRange`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[base_unit::BaseUnit]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[bitcode::u8_char::U8Char]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[core::fmt::rt::Placeholder]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[f64]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[i64]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&base_unit::BaseUnit, &base_unit::BaseUnit)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&i8, &base_unit::BaseUnit)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&i8, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut usize, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&std::string::String, &base_unit::BaseUnit)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&std::string::String, &i32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&std::string::String, &registry::registry_parser::PrefixDefinition)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&std::string::String, &registry::registry_parser::UnitDefinition<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&std::string::String, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&usize, &mut usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&usize, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &base_unit::BaseUnit)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &mut usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:250:27: 250:30}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:255:27: 255:30}>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::slice::Iter<'_, i8>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::ptr::NonNull<[&base_unit::BaseUnit]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[(&str, f64)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[base_unit::BaseUnit]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[bitcode::u8_char::U8Char]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[f64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[registry::registry_parser::DimensionDefinition<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[base_unit::BaseUnit]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::result::Result<&mut [f64], &mut ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&registry::registry::Registry, &error::SmootError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<f64, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<f64, std::num::ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(i8, base_unit::BaseUnit)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(i8, std::string::String)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(std::string::String, base_unit::BaseUnit)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(std::string::String, registry::registry_parser::PrefixDefinition)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(std::string::String, std::string::String)>, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<i32, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, hashbrown::raw::InsertSlot>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, ndarray::ShapeError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, (&str, f64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, bitcode::u8_char::U8Char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, registry::registry_parser::DimensionDefinition<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, base_unit::BaseUnit>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::IterMut<'_, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end_or_len`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size type: `{closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:199:18: 199:21}> as itertools::Itertools>::join::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:214:18: 214:21}> as itertools::Itertools>::join::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::iter::Map<std::vec::IntoIter<(&std::string::String, &i32)>, {closure@src/unit.rs:175:22: 175:30}> as itertools::Itertools>::join::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@bitcode::pack_ints::unpack_ints<i32>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@bitcode::pack_ints::unpack_ints<i8>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<linked_hash_map::Qey<str>, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<str, std::string::String, base_unit::BaseUnit>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, base_unit::BaseUnit)>::find<{closure@hashbrown::map::equivalent_key<i8, i8, base_unit::BaseUnit>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, base_unit::BaseUnit)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, base_unit::BaseUnit)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<i8, i8, base_unit::BaseUnit>::{closure#0}}, {closure@hashbrown::map::make_hasher<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, std::string::String)>::find<{closure@hashbrown::map::equivalent_key<i8, i8, std::string::String>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, std::string::String)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<i8, i8, std::string::String>::{closure#0}}, {closure@hashbrown::map::make_hasher<i8, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>::find<{closure@hashbrown::map::equivalent_key<linked_hash_map::KeyRef<std::string::String>, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>::find<{closure@hashbrown::map::equivalent_key<linked_hash_map::Qey<std::string::String>, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>::find<{closure@hashbrown::map::equivalent_key<linked_hash_map::Qey<str>, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::hash::RandomState>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>::find<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, base_unit::BaseUnit>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>::find<{closure@hashbrown::map::equivalent_key<str, std::string::String, base_unit::BaseUnit>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, base_unit::BaseUnit>::{closure#0}}, {closure@hashbrown::map::make_hasher<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, i32)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, i32, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, registry::registry_parser::PrefixDefinition)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, registry::registry_parser::PrefixDefinition)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, registry::registry_parser::PrefixDefinition>::{closure#0}}, {closure@hashbrown::map::make_hasher<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, std::string::String)>::find<{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, std::string::String)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, std::string::String>::{closure#0}}, {closure@hashbrown::map::make_hasher<std::string::String, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::is_in_same_group::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/base_unit.rs:234:27: 234:30}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/parser.rs:27:13: 27:70}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/parser.rs:31:13: 31:68}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/parser.rs:46:13: 50:14}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/parser.rs:55:15: 55:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/parser.rs:69:52: 69:65}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/parser.rs:90:15: 90:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry.rs:132:22: 132:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry.rs:146:22: 146:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry.rs:163:22: 163:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry.rs:183:22: 183:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry.rs:349:52: 349:54}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:160:13: 160:70}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:163:13: 163:70}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:166:15: 166:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:167:39: 167:50}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:168:39: 168:50}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:170:39: 170:50}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:171:39: 171:50}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:173:40: 173:55}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:174:39: 174:54}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:181:13: 181:34}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:196:15: 196:25}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:211:30: 211:69}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/unit.rs:160:54: 160:57}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/unit.rs:411:37: 411:40}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@src/unit.rs:416:39: 416:42}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<i8, {closure@src/unit.rs:160:54: 160:57}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:199:18: 199:21}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:214:18: 214:21}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::vec::IntoIter<(&std::string::String, &i32)>, {closure@src/unit.rs:175:22: 175:30}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::copied::copy_fold<i8, (), {closure@std::iter::Iterator::for_each::call<i8, {closure@src/unit.rs:160:54: 160:57}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::filter::filter_fold<usize, (isize, usize), {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}, {closure@std::iter::adapters::map::map_fold<usize, (isize, usize), (isize, usize), {closure@std::iter::Iterator::min_by_key::key<usize, isize, {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}>::{closure#0}}, {closure@std::iter::Iterator::min_by::fold<(isize, usize), for<'a, 'b> fn(&'a (isize, usize), &'b (isize, usize)) -> std::cmp::Ordering {std::iter::Iterator::min_by_key::compare::<usize, isize>}>::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_try_fold<'_, (usize, &str), (usize, &str), (), std::ops::ControlFlow<(usize, &str)>, {closure@src/registry/registry.rs:203:18: 203:34}, {closure@std::iter::Iterator::find::check<(usize, &str), &mut {closure@src/registry/registry.rs:204:21: 204:32}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), std::string::String, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:199:18: 199:21}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), std::string::String, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::slice::Iter<'_, &base_unit::BaseUnit>, {closure@src/unit.rs:214:18: 214:21}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `{closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), std::string::String, {closure@std::iter::Iterator::for_each::call<std::string::String, {closure@<std::iter::Map<std::vec::IntoIter<(&std::string::String, &i32)>, {closure@src/unit.rs:175:22: 175:30}> as itertools::Itertools>::join::{closure#0}}>::{closure#0}}>::{closure#0}}`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `std::fs::OpenOptions`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `std::sys::fs::unix::OpenOptions`: 12 bytes, alignment: 4 bytes
print-type-size     field `.custom_flags`: 4 bytes
print-type-size     field `.mode`: 2 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size type: `std::result::Result<[u8; 8], std::array::TryFromSliceError>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, &str, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::Drain<'_, T, A> as std::ops::Drop>::drop::DropGuard<'_, '_, base_unit::BaseUnit, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, &base_unit::BaseUnit, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (&std::string::String, &i32), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, base_unit::BaseUnit, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, i8, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, std::string::String, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, K, V, NodeType>, alloc::collections::btree::node::marker::KV>::drop_key_val::Dropper<'_, alloc::collections::btree::set_val::SetValZST>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<[u8; 8], f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<[u8; 8], u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<f64, u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Transmute`: 8 bytes
print-type-size         field `.src`: 8 bytes
print-type-size         field `.dst`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::num::niche_types::NonZeroUsizeInner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::niche_types::UsizeNoHighBit`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::slice::sort::stable::drift::DriftsortRun`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(i8, base_unit::BaseUnit)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(i8, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, base_unit::BaseUnit)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, i32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, registry::registry_parser::PrefixDefinition)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `hashbrown::raw::InsertSlot`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `linked_hash_map::KeyRef<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.k`: 8 bytes
print-type-size type: `ndarray::Dim<[usize; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size type: `rustc_hash::FxHasher`: 8 bytes, alignment: 8 bytes
print-type-size     field `.hash`: 8 bytes
print-type-size type: `std::boxed::Box<(&str, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[base_unit::BaseUnit; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[i8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<registry::registry_parser::ParseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::fmt::FormattingOptions`: 8 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.width`: 2 bytes
print-type-size     field `.precision`: 2 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<&base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, &str, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 8]>`: 8 bytes, alignment: 1 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 8]>`: 8 bytes, alignment: 1 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 8]>`: 8 bytes, alignment: 1 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<registry::registry_parser::ParseTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<&base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 8]>`: 8 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 8]>`: 8 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:250:27: 250:30}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:255:27: 255:30}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::slice::Iter<'_, i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&std::string::String, &i32)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&str, f64)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(i8, base_unit::BaseUnit)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(i8, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::string::String, base_unit::BaseUnit)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&*mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 4]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 8]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&bitcode::u8_char::U8Char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastSlice<'_, bitcode::fast::Unaligned<base_unit::BaseUnit>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastSlice<'_, bitcode::fast::Unaligned<i8>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastSlice<'_, bitcode::fast::Unaligned<std::string::String>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastVec<base_unit::BaseUnit>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastVec<bitcode::u8_char::U8Char>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastVec<i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut bitcode::fast::FastVec<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut i8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:250:27: 250:30}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/unit.rs:255:27: 255:30}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::slice::Iter<'_, i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&registry::registry_parser::DimensionDefinition<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&registry::registry_parser::PrefixDefinition>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&registry::registry_parser::UnitDefinition<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::slice::Iter<'_, i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<extern "C" fn(unwind::libunwind::_Unwind_Reason_Code, *mut unwind::libunwind::_Unwind_Exception)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(i8, base_unit::BaseUnit)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(i8, std::string::String)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, base_unit::BaseUnit)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, i32)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, registry::registry_parser::PrefixDefinition)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, std::string::String)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::Alignment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<unsafe fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<quantity::Quantity<f64, f64>> + 'c)) -> peg::RuleResult<quantity::Quantity<f64, f64>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<unit::Unit> + 'c)) -> peg::RuleResult<unit::Unit>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<f64> + 'c)) -> peg::RuleResult<f64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<registry::registry_parser::ParseTree> + 'c)) -> peg::RuleResult<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, f64, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<f64> + 'c)) -> (f64, peg::RuleResult<()>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, quantity::Quantity<f64, f64>, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<quantity::Quantity<f64, f64>> + 'c)) -> (quantity::Quantity<f64, f64>, peg::RuleResult<()>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, registry::registry_parser::ParseTree, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<registry::registry_parser::ParseTree> + 'c)) -> (registry::registry_parser::ParseTree, peg::RuleResult<()>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, unit::Unit, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<unit::Unit> + 'c)) -> (unit::Unit, peg::RuleResult<()>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<quantity::Quantity<f64, f64>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<unit::Unit>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<f64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._vtable_ptr`: 8 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&registry::registry_parser::Operator>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&registry::registry_parser::PrefixDefinition>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&registry::registry_parser::UnitDefinition<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&std::string::String, &i32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, f64)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(i8, base_unit::BaseUnit)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(i8, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, base_unit::BaseUnit)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, i32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, registry::registry_parser::PrefixDefinition)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, std::string::String)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(usize, std::option::Option<usize>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[base_unit::BaseUnit; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[i8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<&str, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<bitcode::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<bitcode::u8_char::U8Char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<registry::registry_parser::DimensionDefinition<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<registry::registry_parser::NodeData>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<registry::registry_parser::ParseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<registry::registry_parser::PrefixDefinition>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<registry::registry_parser::UnitDefinition<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::option::Option<std::string::String>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::path::Display<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ptr::metadata::VTable>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<base_unit::BaseUnit>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(&std::string::String, &i32)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(&str, alloc::collections::btree::set_val::SetValZST)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(&str, f64)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[base_unit::BaseUnit; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[i8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<base_unit::BaseUnit>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<registry::registry_parser::DimensionDefinition<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<registry::registry_parser::ParseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<registry::registry_parser::ParseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::result::Result<&[u8; 4], std::array::TryFromSliceError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&[u8; 8], std::array::TryFromSliceError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<i32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<registry::registry_parser::ParseTree>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher> as std::iter::Extend<(i8, base_unit::BaseUnit)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher> as std::iter::Extend<(i8, std::string::String)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, base_unit::BaseUnit)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, registry::registry_parser::PrefixDefinition)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<hashbrown::map::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, std::string::String)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<ndarray::Dim<ndarray::IxDynImpl> as ndarray::Dimension>::_fastest_varying_stride_order::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBaseMut<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<&mut f64, {closure@ndarray::impl_ops::arithmetic_ops::<impl std::ops::Div<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::div::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBaseMut<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<&mut f64, {closure@ndarray::impl_ops::arithmetic_ops::<impl std::ops::Mul<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mul::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<ndarray::iterators::ElementsBaseMut<'_, f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::Iterator>::fold<(), {closure@std::iter::Iterator::for_each::call<&mut f64, {closure@ndarray::impl_ops::assign_ops::<impl std::ops::MulAssign<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mul_assign::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Cloned<linked_hash_map::Keys<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>>> as std::iter::Iterator>::collect<std::vec::Vec<std::string::String>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Cloned<std::collections::hash_map::Keys<'_, std::string::String, base_unit::BaseUnit>> as std::iter::Iterator>::collect<std::vec::Vec<std::string::String>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}> as std::iter::Iterator>::collect<std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}> as std::iter::Iterator>::collect<std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}> as std::iter::Iterator>::collect<std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}> as std::iter::Iterator>::collect<std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}> as std::iter::Iterator>::collect<std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Map<std::vec::IntoIter<&str>, fn(&str) -> std::string::String {<std::string::String as std::convert::From<&str>>::from}> as std::iter::Iterator>::collect<std::vec::Vec<std::string::String>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::vec::IntoIter<&base_unit::BaseUnit> as std::iter::Iterator>::collect<std::vec::Vec<&base_unit::BaseUnit>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_fallback<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_fallback<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 16>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 1>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 2>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 32>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 4>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 64>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 8>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 16>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 1>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 2>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 32>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 4>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 64>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<bitcode::u8_char::U8Char>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, std::string::String>, for<'a> fn(&'a std::string::String) -> &'a str {std::string::String::as_str}>, for<'a> fn(&'a str) -> &'a [bitcode::u8_char::U8Char] {bitcode::str::str_as_u8_chars}>, 8>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_fallback<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 16>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 1>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 2>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 32>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 4>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 64>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::derive::vec::VecEncoder<i8>::encode_vectored_max_len<'_, std::iter::Map<std::iter::Map<std::slice::Iter<'_, base_unit::BaseUnit>, {closure@src/base_unit.rs:26:10: 26:16}>, for<'a> fn(&'a std::vec::Vec<i8>) -> &'a [i8] {std::vec::Vec::<i8>::as_slice}>, 8>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::fast::FastVec<T>::reserve::reserve_slow<base_unit::BaseUnit>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::fast::FastVec<T>::reserve::reserve_slow<bitcode::u8_char::U8Char>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@bitcode::fast::FastVec<T>::reserve::reserve_slow<std::string::String>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<&base_unit::BaseUnit, {closure@std::slice::<impl [&base_unit::BaseUnit]>::sort_by_key<&str, {closure@src/unit.rs:185:28: 185:31}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<&base_unit::BaseUnit, {closure@std::slice::<impl [&base_unit::BaseUnit]>::sort_by_key<&str, {closure@src/unit.rs:190:28: 190:31}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<(&std::string::String, &i32), {closure@std::slice::<impl [(&std::string::String, &i32)]>::sort_by_key<&str, {closure@src/unit.rs:174:32: 174:40}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<base_unit::BaseUnit, {closure@std::slice::<impl [base_unit::BaseUnit]>::sort_by<{closure@src/unit.rs:331:38: 331:46}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<base_unit::BaseUnit, {closure@std::slice::<impl [base_unit::BaseUnit]>::sort_by<{closure@src/unit.rs:336:40: 336:48}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<i8, for<'a, 'b> fn(&'a i8, &'b i8) -> bool {<i8 as std::cmp::PartialOrd>::lt}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@core::slice::sort::stable::quicksort::quicksort<usize, {closure@std::slice::<impl [usize]>::sort_by_key<isize, {closure@<ndarray::Dim<ndarray::IxDynImpl> as ndarray::Dimension>::_fastest_varying_stride_order::{closure#0}}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<i8, i8, base_unit::BaseUnit>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<i8, i8, std::string::String>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<linked_hash_map::KeyRef<std::string::String>, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<linked_hash_map::Qey<std::string::String>, linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, base_unit::BaseUnit>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, registry::registry_parser::PrefixDefinition>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, std::string::String>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<i8, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::hash::RandomState>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, i32, rustc_hash::FxBuildHasher>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, base_unit::BaseUnit)>::reserve_rehash<{closure@hashbrown::map::make_hasher<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, std::string::String)>::reserve_rehash<{closure@hashbrown::map::make_hasher<i8, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>::reserve_rehash<{closure@hashbrown::map::make_hasher<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, i32)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, i32, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, registry::registry_parser::PrefixDefinition)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, std::string::String)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::fallible_with_capacity<std::alloc::Global>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::hash::RandomState>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, i32, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::rustc_entry::<impl hashbrown::map::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>::rustc_entry::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, {closure@src/utils.rs:55:19: 55:22}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<i64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<i64, {closure@src/utils.rs:60:19: 60:22}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::impl_ops::arithmetic_ops::<impl std::ops::Div<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::div::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::impl_ops::arithmetic_ops::<impl std::ops::Mul<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mul::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@ndarray::impl_ops::assign_ops::<impl std::ops::MulAssign<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mul_assign::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/parser.rs:105:29: 105:63}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/parser.rs:21:13: 21:20}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/quantity.rs:138:22: 138:25}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/quantity.rs:467:18: 467:21}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/quantity.rs:586:18: 586:21}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry.rs:131:23: 131:30}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry.rs:352:62: 352:64}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:144:13: 144:20}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:147:13: 153:14}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:176:30: 176:36}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:183:55: 183:60}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:186:13: 186:46}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:191:13: 191:21}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:209:29: 209:41}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:210:29: 210:41}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:212:33: 212:86}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:261:42: 261:47}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/unit.rs:163:29: 163:32}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/unit.rs:275:31: 275:74}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/unit.rs:521:22: 521:25}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/unit.rs:86:58: 86:61}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/unit.rs:87:60: 87:63}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/utils.rs:55:19: 55:22}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@src/utils.rs:60:19: 60:22}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<(usize, &str), &mut {closure@src/registry/registry.rs:204:21: 204:32}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::find::check<usize, &mut {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<&mut f64, {closure@ndarray::impl_ops::arithmetic_ops::<impl std::ops::Div<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::div::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<&mut f64, {closure@ndarray::impl_ops::arithmetic_ops::<impl std::ops::Mul<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mul::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<&mut f64, {closure@ndarray::impl_ops::assign_ops::<impl std::ops::MulAssign<f64> for ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mul_assign::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(i8, base_unit::BaseUnit), {closure@<hashbrown::map::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher> as std::iter::Extend<(i8, base_unit::BaseUnit)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(i8, std::string::String), {closure@<hashbrown::map::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher> as std::iter::Extend<(i8, std::string::String)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, i8, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<i8, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(std::string::String, base_unit::BaseUnit), {closure@<hashbrown::map::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, base_unit::BaseUnit)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, base_unit::BaseUnit> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(std::string::String, registry::registry_parser::PrefixDefinition), {closure@<hashbrown::map::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, registry::registry_parser::PrefixDefinition)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, registry::registry_parser::PrefixDefinition> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<(std::string::String, std::string::String), {closure@<hashbrown::map::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher> as std::iter::Extend<(std::string::String, std::string::String)>>::extend<std::iter::Map<std::ops::Range<usize>, {closure@<bitcode::derive::map::MapDecoder<'_, std::string::String, std::string::String> as bitcode::__private::Decoder<'_, std::collections::HashMap<std::string::String, std::string::String, rustc_hash::FxBuildHasher>>>::decode::{closure#0}}>>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::Iterator::min_by_key::key<usize, isize, {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::filter::filter_try_fold<'_, &usize, usize, std::option::Option<usize>, {closure@ndarray::dimension::size_of_shape_checked<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}, {closure@ndarray::dimension::size_of_shape_checked<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<usize, (isize, usize), (isize, usize), {closure@std::iter::Iterator::min_by_key::key<usize, isize, {closure@ndarray::dimension::move_min_stride_axis_to_last<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}>::{closure#0}}, {closure@std::iter::Iterator::min_by::fold<(isize, usize), for<'a, 'b> fn(&'a (isize, usize), &'b (isize, usize)) -> std::cmp::Ordering {std::iter::Iterator::min_by_key::compare::<usize, isize>}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::slice::<impl [&base_unit::BaseUnit]>::sort_by_key<&str, {closure@src/unit.rs:185:28: 185:31}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::slice::<impl [&base_unit::BaseUnit]>::sort_by_key<&str, {closure@src/unit.rs:190:28: 190:31}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::slice::<impl [(&std::string::String, &i32)]>::sort_by_key<&str, {closure@src/unit.rs:174:32: 174:40}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::slice::<impl [base_unit::BaseUnit]>::sort_by<{closure@src/unit.rs:331:38: 331:46}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::slice::<impl [base_unit::BaseUnit]>::sort_by<{closure@src/unit.rs:336:40: 336:48}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::slice::<impl [usize]>::sort_by_key<isize, {closure@<ndarray::Dim<ndarray::IxDynImpl> as ndarray::Dimension>::_fastest_varying_stride_order::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::vec::Vec<base_unit::BaseUnit>::retain<{closure@src/unit.rs:411:37: 411:40}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::vec::Vec<base_unit::BaseUnit>::retain<{closure@src/unit.rs:416:39: 416:42}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@std::vec::Vec<i8>::retain<{closure@src/base_unit.rs:234:27: 234:30}>::{closure#0}}`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::result::Result<[u8; 4], std::array::TryFromSliceError>`: 5 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<[u8; 4], i32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Transmute`: 4 bytes
print-type-size         field `.src`: 4 bytes
print-type-size         field `.dst`: 4 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<i32, i32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Transmute`: 4 bytes
print-type-size         field `.src`: 4 bytes
print-type-size         field `.dst`: 4 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `core::num::niche_types::I32NotAllOnes`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 4]>`: 4 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::fd::unix::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::fs::unix::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::niche_types::NonZeroU16Inner`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::control::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 2]>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 2]>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 2]>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 2]>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::num::NonZero<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u16>>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<u8, std::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `bitcode::fast::Unaligned<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `bitcode::u8_char::U8Char`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<[u8; 1], i8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Transmute`: 1 bytes
print-type-size         field `.src`: 1 bytes
print-type-size         field `.dst`: 1 bytes, offset: 0 bytes, alignment: 1 bytes
print-type-size type: `bytemuck::must::must_cast::Transmute<i8, i8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Transmute`: 1 bytes
print-type-size         field `.src`: 1 bytes
print-type-size         field `.dst`: 1 bytes, offset: 0 bytes, alignment: 1 bytes
print-type-size type: `core::num::dec2flt::FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `hashbrown::control::tag::Tag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `ndarray::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `IncompatibleShape`: 0 bytes
print-type-size     variant `IncompatibleLayout`: 0 bytes
print-type-size     variant `RangeLimited`: 0 bytes
print-type-size     variant `OutOfBounds`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `Overflow`: 0 bytes
print-type-size type: `ndarray::ShapeError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.repr`: 1 bytes
print-type-size type: `ndarray::dimension::CanIndexCheckMode`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `OwnedMutable`: 0 bytes
print-type-size     variant `ReadOnly`: 0 bytes
print-type-size type: `ndarray::shape_builder::Strides<ndarray::shape_builder::Contiguous>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `C`: 0 bytes
print-type-size     variant `F`: 0 bytes
print-type-size     variant `Custom`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `QuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `InProgress`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[bitcode::u8_char::U8Char; 1]>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<[i8; 1]>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<[u8; 1]>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<[bitcode::u8_char::U8Char; 1]>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<[i8; 1]>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::stdio::unix::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), ndarray::ShapeError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, ndarray::ShapeError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Dying`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Edge`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::KV`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Leaf`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::LeafOrInternal`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::marker::Owned`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::rt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `core::hash::sip::Sip13Rounds`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::str::LinesMap`: 0 bytes, alignment: 1 bytes
print-type-size type: `linked_hash_map::Qey<str>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `ndarray::ViewRepr<&f64>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.life`: 0 bytes
print-type-size type: `ndarray::ViewRepr<&i64>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.life`: 0 bytes
print-type-size type: `ndarray::ViewRepr<&mut f64>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.life`: 0 bytes
print-type-size type: `ndarray::shape_builder::Contiguous`: 0 bytes, alignment: 1 bytes
print-type-size type: `parser::expression_parser::ParseState<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `registry::registry_parser::registry_parser::ParseState<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `._phantom`: 0 bytes
print-type-size type: `rustc_hash::FxBuildHasher`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::array::TryFromSliceError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&base_unit::BaseUnit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, f64)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&[u8; 8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&base_unit::BaseUnit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bitcode::fast::Unaligned<base_unit::BaseUnit>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bitcode::fast::Unaligned<i8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bitcode::fast::Unaligned<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&bitcode::u8_char::U8Char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&f64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut base_unit::BaseUnit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut f64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&registry::registry_parser::DimensionDefinition<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&i8, &base_unit::BaseUnit)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&i8, &std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &base_unit::BaseUnit)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &i32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &registry::registry_parser::PrefixDefinition)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &registry::registry_parser::UnitDefinition<'_>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, f64)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(i8, base_unit::BaseUnit)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(i8, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, base_unit::BaseUnit)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, i32)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, registry::registry_parser::PrefixDefinition)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, std::string::String)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[base_unit::BaseUnit; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[base_unit::BaseUnit]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[i8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[i8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 4]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[usize]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<base_unit::BaseUnit>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<bitcode::u8_char::U8Char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<core::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<quantity::Quantity<f64, f64>> + 'c)) -> peg::RuleResult<quantity::Quantity<f64, f64>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<unit::Unit> + 'c)) -> peg::RuleResult<unit::Unit>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<f64> + 'c)) -> peg::RuleResult<f64>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<registry::registry_parser::ParseTree> + 'c)) -> peg::RuleResult<registry::registry_parser::ParseTree>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, f64, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<f64> + 'c)) -> (f64, peg::RuleResult<()>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, quantity::Quantity<f64, f64>, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<quantity::Quantity<f64, f64>> + 'c)) -> (quantity::Quantity<f64, f64>, peg::RuleResult<()>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, registry::registry_parser::ParseTree, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<registry::registry_parser::ParseTree> + 'c)) -> (registry::registry_parser::ParseTree, peg::RuleResult<()>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b, 'c> std::ops::Fn(usize, usize, i32, unit::Unit, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState, &'c (dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<unit::Unit> + 'c)) -> (unit::Unit, peg::RuleResult<()>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<quantity::Quantity<f64, f64>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut parser::expression_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<unit::Unit>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<f64>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a, 'b> std::ops::Fn(usize, i32, &'a mut registry::registry_parser::registry_parser::ParseState<'_>, &'b mut peg::error::ErrorState) -> peg::RuleResult<registry::registry_parser::ParseTree>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<f64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<registry::registry_parser::DimensionDefinition<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<registry::registry_parser::ParseTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(&str, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<registry::registry_parser::ParseTree>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<base_unit::BaseUnit>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<bitcode::u8_char::U8Char>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i32>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<i8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<std::string::String>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u64>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<u8>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<usize>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<{closure@core::str::<impl str>::trim::{closure#0}}>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::os_str::bytes::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::stdio::unix::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<bool as std::vec::is_zero::IsZero>::is_zero::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<linked_hash_map::Keys<'_, std::string::String, registry::registry_parser::UnitDefinition<'_>> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<ndarray::Dim<ndarray::IxDynImpl> as ndarray::Dimension>::default_strides::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<ndarray::Dim<ndarray::IxDynImpl> as ndarray::Dimension>::fortran_strides::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<ndarray::iterators::Baseiter<f64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::ExactSizeIterator>::len::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<ndarray::iterators::Baseiter<i64, ndarray::Dim<ndarray::IxDynImpl>> as std::iter::ExactSizeIterator>::len::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::collections::hash_map::Keys<'_, std::string::String, base_unit::BaseUnit> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::collections::hash_map::Values<'_, std::string::String, registry::registry_parser::PrefixDefinition> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<std::vec::Drain<'_, base_unit::BaseUnit> as std::iter::Iterator>::next::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::iter::Product<&usize>>::product<std::slice::Iter<'_, usize>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@<usize as std::vec::is_zero::IsZero>::is_zero::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, &str, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@core::str::<impl str>::trim::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, base_unit::BaseUnit)>::reserve_rehash<{closure@hashbrown::map::make_hasher<i8, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(i8, std::string::String)>::reserve_rehash<{closure@hashbrown::map::make_hasher<i8, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>)>::reserve_rehash<{closure@hashbrown::map::make_hasher<linked_hash_map::KeyRef<std::string::String>, *mut linked_hash_map::Node<std::string::String, registry::registry_parser::UnitDefinition<'_>>, std::hash::RandomState>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, base_unit::BaseUnit)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, base_unit::BaseUnit, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, i32)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, i32, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, registry::registry_parser::PrefixDefinition)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, registry::registry_parser::PrefixDefinition, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, std::string::String)>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, std::string::String, rustc_hash::FxBuildHasher>::{closure#0}}>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@linked_hash_map::LinkedHashMap<std::string::String, registry::registry_parser::UnitDefinition<'_>>::get<std::string::String>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@linked_hash_map::LinkedHashMap<std::string::String, registry::registry_parser::UnitDefinition<'_>>::get<str>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::can_index_slice_impl<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::max_abs_offset_check_overflow_impl<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::max_abs_offset_check_overflow_impl<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::max_abs_offset_check_overflow_impl<ndarray::Dim<ndarray::IxDynImpl>>::{closure#2}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::offset_from_low_addr_ptr_to_logical_ptr<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::size_of_shape_checked<ndarray::Dim<ndarray::IxDynImpl>>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::size_of_shape_checked<ndarray::Dim<ndarray::IxDynImpl>>::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::dimension::size_of_shape_checked<ndarray::Dim<ndarray::IxDynImpl>>::{closure#2}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {<f64 as num_traits::Float>::round}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::ceil}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::floor}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@ndarray::impl_methods::<impl ndarray::ArrayBase<ndarray::OwnedRepr<f64>, ndarray::Dim<ndarray::IxDynImpl>>>::mapv<f64, fn(f64) -> f64 {std::f64::<impl f64>::trunc}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:129:53: 129:56}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:196:53: 196:56}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:26:10: 26:16}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:295:56: 295:59}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:45:49: 45:53}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:69:18: 69:23}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/base_unit.rs:70:22: 70:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/parser.rs:40:26: 40:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/quantity.rs:134:18: 134:25}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:153:23: 153:29}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:155:30: 155:33}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:170:18: 170:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:201:18: 201:24}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:203:18: 203:34}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:204:21: 204:32}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry.rs:279:45: 279:50}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/registry/registry_parser.rs:186:24: 186:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:171:47: 171:53}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:174:32: 174:40}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:175:22: 175:30}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:185:28: 185:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:190:28: 190:31}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:199:18: 199:21}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:214:18: 214:21}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:250:27: 250:30}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:255:27: 255:30}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:256:22: 256:25}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:331:38: 331:46}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:336:40: 336:48}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:517:18: 517:25}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@src/unit.rs:83:57: 83:60}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::KEYS::{constant#0}::{closure#1}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::Iterator::min_by::fold<(isize, usize), for<'a, 'b> fn(&'a (isize, usize), &'b (isize, usize)) -> std::cmp::Ordering {std::iter::Iterator::min_by_key::compare::<usize, isize>}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::iter::adapters::map::map_fold<&i8, i8, i32, {closure@src/base_unit.rs:69:18: 69:23}, {closure@src/base_unit.rs:70:22: 70:32}>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::slice::range<std::ops::RangeFull>::{closure#0}}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::slice::range<std::ops::RangeFull>::{closure#1}}`: 0 bytes, alignment: 1 bytes
